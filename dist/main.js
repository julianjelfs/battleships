/******/ (function(modules) { // webpackBootstrap
/******/ 	var parentHotUpdateCallback = this["webpackHotUpdate"];
/******/ 	this["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars
/******/ 		if(typeof XMLHttpRequest === "undefined")
/******/ 			return callback(new Error("No browser support"));
/******/ 		try {
/******/ 			var request = new XMLHttpRequest();
/******/ 			var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 			request.open("GET", requestPath, true);
/******/ 			request.timeout = 10000;
/******/ 			request.send(null);
/******/ 		} catch(err) {
/******/ 			return callback(err);
/******/ 		}
/******/ 		request.onreadystatechange = function() {
/******/ 			if(request.readyState !== 4) return;
/******/ 			if(request.status === 0) {
/******/ 				// timeout
/******/ 				callback(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 			} else if(request.status === 404) {
/******/ 				// no update available
/******/ 				callback();
/******/ 			} else if(request.status !== 200 && request.status !== 304) {
/******/ 				// other failure
/******/ 				callback(new Error("Manifest request to " + requestPath + " failed."));
/******/ 			} else {
/******/ 				// success
/******/ 				try {
/******/ 					var update = JSON.parse(request.responseText);
/******/ 				} catch(e) {
/******/ 					callback(e);
/******/ 					return;
/******/ 				}
/******/ 				callback(null, update);
/******/ 			}
/******/ 		};
/******/ 	}

/******/ 	
/******/ 	
/******/ 	// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js
/******/ 	var canDefineProperty = false;
/******/ 	try {
/******/ 		Object.defineProperty({}, "x", {
/******/ 			get: function() {}
/******/ 		});
/******/ 		canDefineProperty = true;
/******/ 	} catch(x) {
/******/ 		// IE will fail on defineProperty
/******/ 	}
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "9d49a4993b34f9adb9f2"; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					if(me.children.indexOf(request) < 0)
/******/ 						me.children.push(request);
/******/ 				} else hotCurrentParents = [moduleId];
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {
/******/ 				if(canDefineProperty) {
/******/ 					Object.defineProperty(fn, name, (function(name) {
/******/ 						return {
/******/ 							configurable: true,
/******/ 							enumerable: true,
/******/ 							get: function() {
/******/ 								return __webpack_require__[name];
/******/ 							},
/******/ 							set: function(value) {
/******/ 								__webpack_require__[name] = value;
/******/ 							}
/******/ 						};
/******/ 					}(name)));
/******/ 				} else {
/******/ 					fn[name] = __webpack_require__[name];
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		function ensure(chunkId, callback) {
/******/ 			if(hotStatus === "ready")
/******/ 				hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			__webpack_require__.e(chunkId, function() {
/******/ 				try {
/******/ 					callback.call(null, fn);
/******/ 				} finally {
/******/ 					finishChunkLoading();
/******/ 				}
/******/ 	
/******/ 				function finishChunkLoading() {
/******/ 					hotChunksLoading--;
/******/ 					if(hotStatus === "prepare") {
/******/ 						if(!hotWaitingFilesMap[chunkId]) {
/******/ 							hotEnsureUpdateChunk(chunkId);
/******/ 						}
/******/ 						if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 							hotUpdateDownloaded();
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		}
/******/ 		if(canDefineProperty) {
/******/ 			Object.defineProperty(fn, "e", {
/******/ 				enumerable: true,
/******/ 				value: ensure
/******/ 			});
/******/ 		} else {
/******/ 			fn.e = ensure;
/******/ 		}
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback;
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback;
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "number")
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 				else
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailibleFilesMap = {};
/******/ 	var hotCallback;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply, callback) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		if(typeof apply === "function") {
/******/ 			hotApplyOnUpdate = false;
/******/ 			callback = apply;
/******/ 		} else {
/******/ 			hotApplyOnUpdate = apply;
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 		hotSetStatus("check");
/******/ 		hotDownloadManifest(function(err, update) {
/******/ 			if(err) return callback(err);
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				callback(null, null);
/******/ 				return;
/******/ 			}
/******/ 	
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotAvailibleFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			for(var i = 0; i < update.c.length; i++)
/******/ 				hotAvailibleFilesMap[update.c[i]] = true;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			hotCallback = callback;
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 0;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailibleFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var callback = hotCallback;
/******/ 		hotCallback = null;
/******/ 		if(!callback) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			hotApply(hotApplyOnUpdate, callback);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			callback(null, outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options, callback) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		if(typeof options === "function") {
/******/ 			callback = options;
/******/ 			options = {};
/******/ 		} else if(options && typeof options === "object") {
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		} else {
/******/ 			options = {};
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function getAffectedStuff(module) {
/******/ 			var outdatedModules = [module];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice();
/******/ 			while(queue.length > 0) {
/******/ 				var moduleId = queue.pop();
/******/ 				var module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return new Error("Aborted because of self decline: " + moduleId);
/******/ 				}
/******/ 				if(moduleId === 0) {
/******/ 					return;
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return new Error("Aborted because of declined dependency: " + moduleId + " in " + parentId);
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push(parentId);
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return [outdatedModules, outdatedDependencies];
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				var moduleId = toModuleId(id);
/******/ 				var result = getAffectedStuff(moduleId);
/******/ 				if(!result) {
/******/ 					if(options.ignoreUnaccepted)
/******/ 						continue;
/******/ 					hotSetStatus("abort");
/******/ 					return callback(new Error("Aborted because " + moduleId + " is not accepted"));
/******/ 				}
/******/ 				if(result instanceof Error) {
/******/ 					hotSetStatus("abort");
/******/ 					return callback(result);
/******/ 				}
/******/ 				appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 				addAllToSet(outdatedModules, result[0]);
/******/ 				for(var moduleId in result[1]) {
/******/ 					if(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {
/******/ 						if(!outdatedDependencies[moduleId])
/******/ 							outdatedDependencies[moduleId] = [];
/******/ 						addAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(var i = 0; i < outdatedModules.length; i++) {
/******/ 			var moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			var moduleId = queue.pop();
/******/ 			var module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(var j = 0; j < disposeHandlers.length; j++) {
/******/ 				var cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(var j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				var idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				for(var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 					var dependency = moduleOutdatedDependencies[j];
/******/ 					var idx = module.children.indexOf(dependency);
/******/ 					if(idx >= 0) module.children.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(var moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				var callbacks = [];
/******/ 				for(var i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 					var dependency = moduleOutdatedDependencies[i];
/******/ 					var cb = module.hot._acceptedDependencies[dependency];
/******/ 					if(callbacks.indexOf(cb) >= 0) continue;
/******/ 					callbacks.push(cb);
/******/ 				}
/******/ 				for(var i = 0; i < callbacks.length; i++) {
/******/ 					var cb = callbacks[i];
/******/ 					try {
/******/ 						cb(outdatedDependencies);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			var moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else if(!error)
/******/ 					error = err;
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return callback(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		callback(null, outdatedModules);
/******/ 	}

/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: hotCurrentParents,
/******/ 			children: []
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";

/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };

/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(0)(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(65);
	module.exports = __webpack_require__(28);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(33);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2RlYnVnL2Jyb3dzZXIuanM/Y2MyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFRoaXMgaXMgdGhlIHdlYiBicm93c2VyIGltcGxlbWVudGF0aW9uIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kZWJ1ZycpO1xuZXhwb3J0cy5sb2cgPSBsb2c7XG5leHBvcnRzLmZvcm1hdEFyZ3MgPSBmb3JtYXRBcmdzO1xuZXhwb3J0cy5zYXZlID0gc2F2ZTtcbmV4cG9ydHMubG9hZCA9IGxvYWQ7XG5leHBvcnRzLnVzZUNvbG9ycyA9IHVzZUNvbG9ycztcbmV4cG9ydHMuc3RvcmFnZSA9ICd1bmRlZmluZWQnICE9IHR5cGVvZiBjaHJvbWVcbiAgICAgICAgICAgICAgICYmICd1bmRlZmluZWQnICE9IHR5cGVvZiBjaHJvbWUuc3RvcmFnZVxuICAgICAgICAgICAgICAgICAgPyBjaHJvbWUuc3RvcmFnZS5sb2NhbFxuICAgICAgICAgICAgICAgICAgOiBsb2NhbHN0b3JhZ2UoKTtcblxuLyoqXG4gKiBDb2xvcnMuXG4gKi9cblxuZXhwb3J0cy5jb2xvcnMgPSBbXG4gICdsaWdodHNlYWdyZWVuJyxcbiAgJ2ZvcmVzdGdyZWVuJyxcbiAgJ2dvbGRlbnJvZCcsXG4gICdkb2RnZXJibHVlJyxcbiAgJ2RhcmtvcmNoaWQnLFxuICAnY3JpbXNvbidcbl07XG5cbi8qKlxuICogQ3VycmVudGx5IG9ubHkgV2ViS2l0LWJhc2VkIFdlYiBJbnNwZWN0b3JzLCBGaXJlZm94ID49IHYzMSxcbiAqIGFuZCB0aGUgRmlyZWJ1ZyBleHRlbnNpb24gKGFueSBGaXJlZm94IHZlcnNpb24pIGFyZSBrbm93blxuICogdG8gc3VwcG9ydCBcIiVjXCIgQ1NTIGN1c3RvbWl6YXRpb25zLlxuICpcbiAqIFRPRE86IGFkZCBhIGBsb2NhbFN0b3JhZ2VgIHZhcmlhYmxlIHRvIGV4cGxpY2l0bHkgZW5hYmxlL2Rpc2FibGUgY29sb3JzXG4gKi9cblxuZnVuY3Rpb24gdXNlQ29sb3JzKCkge1xuICAvLyBpcyB3ZWJraXQ/IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE2NDU5NjA2LzM3Njc3M1xuICByZXR1cm4gKCdXZWJraXRBcHBlYXJhbmNlJyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUpIHx8XG4gICAgLy8gaXMgZmlyZWJ1Zz8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzk4MTIwLzM3Njc3M1xuICAgICh3aW5kb3cuY29uc29sZSAmJiAoY29uc29sZS5maXJlYnVnIHx8IChjb25zb2xlLmV4Y2VwdGlvbiAmJiBjb25zb2xlLnRhYmxlKSkpIHx8XG4gICAgLy8gaXMgZmlyZWZveCA+PSB2MzE/XG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9Ub29scy9XZWJfQ29uc29sZSNTdHlsaW5nX21lc3NhZ2VzXG4gICAgKG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvZmlyZWZveFxcLyhcXGQrKS8pICYmIHBhcnNlSW50KFJlZ0V4cC4kMSwgMTApID49IDMxKTtcbn1cblxuLyoqXG4gKiBNYXAgJWogdG8gYEpTT04uc3RyaW5naWZ5KClgLCBzaW5jZSBubyBXZWIgSW5zcGVjdG9ycyBkbyB0aGF0IGJ5IGRlZmF1bHQuXG4gKi9cblxuZXhwb3J0cy5mb3JtYXR0ZXJzLmogPSBmdW5jdGlvbih2KSB7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh2KTtcbn07XG5cblxuLyoqXG4gKiBDb2xvcml6ZSBsb2cgYXJndW1lbnRzIGlmIGVuYWJsZWQuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXRBcmdzKCkge1xuICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgdmFyIHVzZUNvbG9ycyA9IHRoaXMudXNlQ29sb3JzO1xuXG4gIGFyZ3NbMF0gPSAodXNlQ29sb3JzID8gJyVjJyA6ICcnKVxuICAgICsgdGhpcy5uYW1lc3BhY2VcbiAgICArICh1c2VDb2xvcnMgPyAnICVjJyA6ICcgJylcbiAgICArIGFyZ3NbMF1cbiAgICArICh1c2VDb2xvcnMgPyAnJWMgJyA6ICcgJylcbiAgICArICcrJyArIGV4cG9ydHMuaHVtYW5pemUodGhpcy5kaWZmKTtcblxuICBpZiAoIXVzZUNvbG9ycykgcmV0dXJuIGFyZ3M7XG5cbiAgdmFyIGMgPSAnY29sb3I6ICcgKyB0aGlzLmNvbG9yO1xuICBhcmdzID0gW2FyZ3NbMF0sIGMsICdjb2xvcjogaW5oZXJpdCddLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmdzLCAxKSk7XG5cbiAgLy8gdGhlIGZpbmFsIFwiJWNcIiBpcyBzb21ld2hhdCB0cmlja3ksIGJlY2F1c2UgdGhlcmUgY291bGQgYmUgb3RoZXJcbiAgLy8gYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSAlYywgc28gd2UgbmVlZCB0b1xuICAvLyBmaWd1cmUgb3V0IHRoZSBjb3JyZWN0IGluZGV4IHRvIGluc2VydCB0aGUgQ1NTIGludG9cbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxhc3RDID0gMDtcbiAgYXJnc1swXS5yZXBsYWNlKC8lW2EteiVdL2csIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgaWYgKCclJScgPT09IG1hdGNoKSByZXR1cm47XG4gICAgaW5kZXgrKztcbiAgICBpZiAoJyVjJyA9PT0gbWF0Y2gpIHtcbiAgICAgIC8vIHdlIG9ubHkgYXJlIGludGVyZXN0ZWQgaW4gdGhlICpsYXN0KiAlY1xuICAgICAgLy8gKHRoZSB1c2VyIG1heSBoYXZlIHByb3ZpZGVkIHRoZWlyIG93bilcbiAgICAgIGxhc3RDID0gaW5kZXg7XG4gICAgfVxuICB9KTtcblxuICBhcmdzLnNwbGljZShsYXN0QywgMCwgYyk7XG4gIHJldHVybiBhcmdzO1xufVxuXG4vKipcbiAqIEludm9rZXMgYGNvbnNvbGUubG9nKClgIHdoZW4gYXZhaWxhYmxlLlxuICogTm8tb3Agd2hlbiBgY29uc29sZS5sb2dgIGlzIG5vdCBhIFwiZnVuY3Rpb25cIi5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGxvZygpIHtcbiAgLy8gdGhpcyBoYWNrZXJ5IGlzIHJlcXVpcmVkIGZvciBJRTgvOSwgd2hlcmVcbiAgLy8gdGhlIGBjb25zb2xlLmxvZ2AgZnVuY3Rpb24gZG9lc24ndCBoYXZlICdhcHBseSdcbiAgcmV0dXJuICdvYmplY3QnID09PSB0eXBlb2YgY29uc29sZVxuICAgICYmIGNvbnNvbGUubG9nXG4gICAgJiYgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmNhbGwoY29uc29sZS5sb2csIGNvbnNvbGUsIGFyZ3VtZW50cyk7XG59XG5cbi8qKlxuICogU2F2ZSBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNhdmUobmFtZXNwYWNlcykge1xuICB0cnkge1xuICAgIGlmIChudWxsID09IG5hbWVzcGFjZXMpIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5yZW1vdmVJdGVtKCdkZWJ1ZycpO1xuICAgIH0gZWxzZSB7XG4gICAgICBleHBvcnRzLnN0b3JhZ2UuZGVidWcgPSBuYW1lc3BhY2VzO1xuICAgIH1cbiAgfSBjYXRjaChlKSB7fVxufVxuXG4vKipcbiAqIExvYWQgYG5hbWVzcGFjZXNgLlxuICpcbiAqIEByZXR1cm4ge1N0cmluZ30gcmV0dXJucyB0aGUgcHJldmlvdXNseSBwZXJzaXN0ZWQgZGVidWcgbW9kZXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvYWQoKSB7XG4gIHZhciByO1xuICB0cnkge1xuICAgIHIgPSBleHBvcnRzLnN0b3JhZ2UuZGVidWc7XG4gIH0gY2F0Y2goZSkge31cbiAgcmV0dXJuIHI7XG59XG5cbi8qKlxuICogRW5hYmxlIG5hbWVzcGFjZXMgbGlzdGVkIGluIGBsb2NhbFN0b3JhZ2UuZGVidWdgIGluaXRpYWxseS5cbiAqL1xuXG5leHBvcnRzLmVuYWJsZShsb2FkKCkpO1xuXG4vKipcbiAqIExvY2Fsc3RvcmFnZSBhdHRlbXB0cyB0byByZXR1cm4gdGhlIGxvY2Fsc3RvcmFnZS5cbiAqXG4gKiBUaGlzIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHNhZmFyaSB0aHJvd3NcbiAqIHdoZW4gYSB1c2VyIGRpc2FibGVzIGNvb2tpZXMvbG9jYWxzdG9yYWdlXG4gKiBhbmQgeW91IGF0dGVtcHQgdG8gYWNjZXNzIGl0LlxuICpcbiAqIEByZXR1cm4ge0xvY2FsU3RvcmFnZX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvY2Fsc3RvcmFnZSgpe1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICB9IGNhdGNoIChlKSB7fVxufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZGVidWcvYnJvd3Nlci5qc1xuICoqIG1vZHVsZSBpZCA9IDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar keys = __webpack_require__(41);\nvar hasBinary = __webpack_require__(42);\nvar sliceBuffer = __webpack_require__(27);\nvar base64encoder = __webpack_require__(30);\nvar after = __webpack_require__(24);\nvar utf8 = __webpack_require__(63);\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = __webpack_require__(31);\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvbXBvbmVudC1lbWl0dGVyL2luZGV4LmpzP2VhMmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsTUFBTTtBQUNqQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJDQUEyQyxTQUFTO0FBQ3BEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogRXhwb3NlIGBFbWl0dGVyYC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IEVtaXR0ZXI7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgRW1pdHRlcmAuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBFbWl0dGVyKG9iaikge1xuICBpZiAob2JqKSByZXR1cm4gbWl4aW4ob2JqKTtcbn07XG5cbi8qKlxuICogTWl4aW4gdGhlIGVtaXR0ZXIgcHJvcGVydGllcy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcbiAgZm9yICh2YXIga2V5IGluIEVtaXR0ZXIucHJvdG90eXBlKSB7XG4gICAgb2JqW2tleV0gPSBFbWl0dGVyLnByb3RvdHlwZVtrZXldO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogTGlzdGVuIG9uIHRoZSBnaXZlbiBgZXZlbnRgIHdpdGggYGZuYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5FbWl0dGVyLnByb3RvdHlwZS5vbiA9XG5FbWl0dGVyLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQsIGZuKXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuICAodGhpcy5fY2FsbGJhY2tzW2V2ZW50XSA9IHRoaXMuX2NhbGxiYWNrc1tldmVudF0gfHwgW10pXG4gICAgLnB1c2goZm4pO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQWRkcyBhbiBgZXZlbnRgIGxpc3RlbmVyIHRoYXQgd2lsbCBiZSBpbnZva2VkIGEgc2luZ2xlXG4gKiB0aW1lIHRoZW4gYXV0b21hdGljYWxseSByZW1vdmVkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEByZXR1cm4ge0VtaXR0ZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbihldmVudCwgZm4pe1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcblxuICBmdW5jdGlvbiBvbigpIHtcbiAgICBzZWxmLm9mZihldmVudCwgb24pO1xuICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBvbi5mbiA9IGZuO1xuICB0aGlzLm9uKGV2ZW50LCBvbik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdpdmVuIGNhbGxiYWNrIGZvciBgZXZlbnRgIG9yIGFsbFxuICogcmVnaXN0ZXJlZCBjYWxsYmFja3MuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHJldHVybiB7RW1pdHRlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuRW1pdHRlci5wcm90b3R5cGUub2ZmID1cbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID1cbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9XG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQsIGZuKXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuXG4gIC8vIGFsbFxuICBpZiAoMCA9PSBhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgdGhpcy5fY2FsbGJhY2tzID0ge307XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBzcGVjaWZpYyBldmVudFxuICB2YXIgY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzW2V2ZW50XTtcbiAgaWYgKCFjYWxsYmFja3MpIHJldHVybiB0aGlzO1xuXG4gIC8vIHJlbW92ZSBhbGwgaGFuZGxlcnNcbiAgaWYgKDEgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbZXZlbnRdO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gcmVtb3ZlIHNwZWNpZmljIGhhbmRsZXJcbiAgdmFyIGNiO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xuICAgIGNiID0gY2FsbGJhY2tzW2ldO1xuICAgIGlmIChjYiA9PT0gZm4gfHwgY2IuZm4gPT09IGZuKSB7XG4gICAgICBjYWxsYmFja3Muc3BsaWNlKGksIDEpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBFbWl0IGBldmVudGAgd2l0aCB0aGUgZ2l2ZW4gYXJncy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcbiAqIEBwYXJhbSB7TWl4ZWR9IC4uLlxuICogQHJldHVybiB7RW1pdHRlcn1cbiAqL1xuXG5FbWl0dGVyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24oZXZlbnQpe1xuICB0aGlzLl9jYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3MgfHwge307XG4gIHZhciBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpXG4gICAgLCBjYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3NbZXZlbnRdO1xuXG4gIGlmIChjYWxsYmFja3MpIHtcbiAgICBjYWxsYmFja3MgPSBjYWxsYmFja3Muc2xpY2UoMCk7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNhbGxiYWNrcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgY2FsbGJhY2tzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gYXJyYXkgb2YgY2FsbGJhY2tzIGZvciBgZXZlbnRgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHJldHVybiB7QXJyYXl9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKGV2ZW50KXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuICByZXR1cm4gdGhpcy5fY2FsbGJhY2tzW2V2ZW50XSB8fCBbXTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhpcyBlbWl0dGVyIGhhcyBgZXZlbnRgIGhhbmRsZXJzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuRW1pdHRlci5wcm90b3R5cGUuaGFzTGlzdGVuZXJzID0gZnVuY3Rpb24oZXZlbnQpe1xuICByZXR1cm4gISEgdGhpcy5saXN0ZW5lcnMoZXZlbnQpLmxlbmd0aDtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jb21wb25lbnQtZW1pdHRlci9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvbXBvbmVudC1pbmhlcml0L2luZGV4LmpzPzJhNDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGEsIGIpe1xuICB2YXIgZm4gPSBmdW5jdGlvbigpe307XG4gIGZuLnByb3RvdHlwZSA9IGIucHJvdG90eXBlO1xuICBhLnByb3RvdHlwZSA9IG5ldyBmbjtcbiAgYS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBhO1xufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jb21wb25lbnQtaW5oZXJpdC9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("exports = module.exports = __webpack_require__(32)();\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  color: #fff;\\n  font-family: Monospace;\\n  font-size: 13px;\\n  text-align: center;\\n  font-weight: bold;\\n  background-color: #000;\\n  margin: 0px;\\n  overflow: hidden; }\\n\\n* {\\n  box-sizing: border-box; }\\n\\n.welcome {\\n  position: absolute;\\n  width: 100%; }\\n\\n.debug {\\n  position: absolute;\\n  top: 0;\\n  width: 300px; }\\n\\n.join-form {\\n  padding: 40px;\\n  border: 1px solid #ccc;\\n  width: 400px;\\n  margin: auto;\\n  margin-top: 100px; }\\n  .join-form.hide {\\n    display: none; }\\n  .join-form button {\\n    padding: 10px;\\n    margin-top: 10px; }\\n  .join-form input, .join-form select {\\n    margin: 10px 0 10px 0;\\n    padding: 10px;\\n    width: 100%; }\\n  .join-form label {\\n    font-size: 1.4em; }\\n\\n#info {\\n  color: #000;\\n  position: absolute;\\n  top: 0px;\\n  width: 100%;\\n  padding: 5px; }\\n\\na {\\n  color: red; }\\n\\n#stats {\\n  padding: 20px;\\n  position: absolute;\\n  bottom: 10px;\\n  left: 10px; }\\n\\n#leaderboard {\\n  padding: 20px;\\n  position: absolute;\\n  top: 10px;\\n  right: 10px; }\\n  #leaderboard :first-child {\\n    font-weight: bold; }\\n\", \"\"]);\n\n// exports\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY3NzL0FwcC5zY3NzPzkzYTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSxnQ0FBZ0MsZ0JBQWdCLDJCQUEyQixvQkFBb0IsdUJBQXVCLHNCQUFzQiwyQkFBMkIsZ0JBQWdCLHFCQUFxQixFQUFFLE9BQU8sMkJBQTJCLEVBQUUsY0FBYyx1QkFBdUIsZ0JBQWdCLEVBQUUsWUFBWSx1QkFBdUIsV0FBVyxpQkFBaUIsRUFBRSxnQkFBZ0Isa0JBQWtCLDJCQUEyQixpQkFBaUIsaUJBQWlCLHNCQUFzQixFQUFFLHFCQUFxQixvQkFBb0IsRUFBRSx1QkFBdUIsb0JBQW9CLHVCQUF1QixFQUFFLHlDQUF5Qyw0QkFBNEIsb0JBQW9CLGtCQUFrQixFQUFFLHNCQUFzQix1QkFBdUIsRUFBRSxXQUFXLGdCQUFnQix1QkFBdUIsYUFBYSxnQkFBZ0IsaUJBQWlCLEVBQUUsT0FBTyxlQUFlLEVBQUUsWUFBWSxrQkFBa0IsdUJBQXVCLGlCQUFpQixlQUFlLEVBQUUsa0JBQWtCLGtCQUFrQix1QkFBdUIsY0FBYyxnQkFBZ0IsRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUU7O0FBRWpsQyIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZm9udC1mYW1pbHk6IE1vbm9zcGFjZTtcXG4gIGZvbnQtc2l6ZTogMTNweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcXG4gIG1hcmdpbjogMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcblxcbioge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxcblxcbi53ZWxjb21lIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAxMDAlOyB9XFxuXFxuLmRlYnVnIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIHdpZHRoOiAzMDBweDsgfVxcblxcbi5qb2luLWZvcm0ge1xcbiAgcGFkZGluZzogNDBweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICB3aWR0aDogNDAwcHg7XFxuICBtYXJnaW46IGF1dG87XFxuICBtYXJnaW4tdG9wOiAxMDBweDsgfVxcbiAgLmpvaW4tZm9ybS5oaWRlIHtcXG4gICAgZGlzcGxheTogbm9uZTsgfVxcbiAgLmpvaW4tZm9ybSBidXR0b24ge1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4OyB9XFxuICAuam9pbi1mb3JtIGlucHV0LCAuam9pbi1mb3JtIHNlbGVjdCB7XFxuICAgIG1hcmdpbjogMTBweCAwIDEwcHggMDtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgd2lkdGg6IDEwMCU7IH1cXG4gIC5qb2luLWZvcm0gbGFiZWwge1xcbiAgICBmb250LXNpemU6IDEuNGVtOyB9XFxuXFxuI2luZm8ge1xcbiAgY29sb3I6ICMwMDA7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogNXB4OyB9XFxuXFxuYSB7XFxuICBjb2xvcjogcmVkOyB9XFxuXFxuI3N0YXRzIHtcXG4gIHBhZGRpbmc6IDIwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDEwcHg7XFxuICBsZWZ0OiAxMHB4OyB9XFxuXFxuI2xlYWRlcmJvYXJkIHtcXG4gIHBhZGRpbmc6IDIwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDEwcHg7XFxuICByaWdodDogMTBweDsgfVxcbiAgI2xlYWRlcmJvYXJkIDpmaXJzdC1jaGlsZCB7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlciEuL34vc2Fzcy1sb2FkZXIhLi9hcHAvY3NzL0FwcC5zY3NzXG4gKiogbW9kdWxlIGlkID0gNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(2);\nvar Emitter = __webpack_require__(3);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1jbGllbnQvbGliL3RyYW5zcG9ydC5qcz84N2E1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLFVBQVU7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgcGFyc2VyID0gcmVxdWlyZSgnZW5naW5lLmlvLXBhcnNlcicpO1xudmFyIEVtaXR0ZXIgPSByZXF1aXJlKCdjb21wb25lbnQtZW1pdHRlcicpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNwb3J0O1xuXG4vKipcbiAqIFRyYW5zcG9ydCBhYnN0cmFjdCBjb25zdHJ1Y3Rvci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIFRyYW5zcG9ydCAob3B0cykge1xuICB0aGlzLnBhdGggPSBvcHRzLnBhdGg7XG4gIHRoaXMuaG9zdG5hbWUgPSBvcHRzLmhvc3RuYW1lO1xuICB0aGlzLnBvcnQgPSBvcHRzLnBvcnQ7XG4gIHRoaXMuc2VjdXJlID0gb3B0cy5zZWN1cmU7XG4gIHRoaXMucXVlcnkgPSBvcHRzLnF1ZXJ5O1xuICB0aGlzLnRpbWVzdGFtcFBhcmFtID0gb3B0cy50aW1lc3RhbXBQYXJhbTtcbiAgdGhpcy50aW1lc3RhbXBSZXF1ZXN0cyA9IG9wdHMudGltZXN0YW1wUmVxdWVzdHM7XG4gIHRoaXMucmVhZHlTdGF0ZSA9ICcnO1xuICB0aGlzLmFnZW50ID0gb3B0cy5hZ2VudCB8fCBmYWxzZTtcbiAgdGhpcy5zb2NrZXQgPSBvcHRzLnNvY2tldDtcbiAgdGhpcy5lbmFibGVzWERSID0gb3B0cy5lbmFibGVzWERSO1xuXG4gIC8vIFNTTCBvcHRpb25zIGZvciBOb2RlLmpzIGNsaWVudFxuICB0aGlzLnBmeCA9IG9wdHMucGZ4O1xuICB0aGlzLmtleSA9IG9wdHMua2V5O1xuICB0aGlzLnBhc3NwaHJhc2UgPSBvcHRzLnBhc3NwaHJhc2U7XG4gIHRoaXMuY2VydCA9IG9wdHMuY2VydDtcbiAgdGhpcy5jYSA9IG9wdHMuY2E7XG4gIHRoaXMuY2lwaGVycyA9IG9wdHMuY2lwaGVycztcbiAgdGhpcy5yZWplY3RVbmF1dGhvcml6ZWQgPSBvcHRzLnJlamVjdFVuYXV0aG9yaXplZDtcblxuICAvLyBvdGhlciBvcHRpb25zIGZvciBOb2RlLmpzIGNsaWVudFxuICB0aGlzLmV4dHJhSGVhZGVycyA9IG9wdHMuZXh0cmFIZWFkZXJzO1xufVxuXG4vKipcbiAqIE1peCBpbiBgRW1pdHRlcmAuXG4gKi9cblxuRW1pdHRlcihUcmFuc3BvcnQucHJvdG90eXBlKTtcblxuLyoqXG4gKiBFbWl0cyBhbiBlcnJvci5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtUcmFuc3BvcnR9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5UcmFuc3BvcnQucHJvdG90eXBlLm9uRXJyb3IgPSBmdW5jdGlvbiAobXNnLCBkZXNjKSB7XG4gIHZhciBlcnIgPSBuZXcgRXJyb3IobXNnKTtcbiAgZXJyLnR5cGUgPSAnVHJhbnNwb3J0RXJyb3InO1xuICBlcnIuZGVzY3JpcHRpb24gPSBkZXNjO1xuICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIE9wZW5zIHRoZSB0cmFuc3BvcnQuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5UcmFuc3BvcnQucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gIGlmICgnY2xvc2VkJyA9PSB0aGlzLnJlYWR5U3RhdGUgfHwgJycgPT0gdGhpcy5yZWFkeVN0YXRlKSB7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gJ29wZW5pbmcnO1xuICAgIHRoaXMuZG9PcGVuKCk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQ2xvc2VzIHRoZSB0cmFuc3BvcnQuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCdvcGVuaW5nJyA9PSB0aGlzLnJlYWR5U3RhdGUgfHwgJ29wZW4nID09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgIHRoaXMuZG9DbG9zZSgpO1xuICAgIHRoaXMub25DbG9zZSgpO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNlbmRzIG11bHRpcGxlIHBhY2tldHMuXG4gKlxuICogQHBhcmFtIHtBcnJheX0gcGFja2V0c1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24ocGFja2V0cyl7XG4gIGlmICgnb3BlbicgPT0gdGhpcy5yZWFkeVN0YXRlKSB7XG4gICAgdGhpcy53cml0ZShwYWNrZXRzKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBub3Qgb3BlbicpO1xuICB9XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIG9wZW5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5UcmFuc3BvcnQucHJvdG90eXBlLm9uT3BlbiA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5yZWFkeVN0YXRlID0gJ29wZW4nO1xuICB0aGlzLndyaXRhYmxlID0gdHJ1ZTtcbiAgdGhpcy5lbWl0KCdvcGVuJyk7XG59O1xuXG4vKipcbiAqIENhbGxlZCB3aXRoIGRhdGEuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGRhdGFcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblRyYW5zcG9ydC5wcm90b3R5cGUub25EYXRhID0gZnVuY3Rpb24oZGF0YSl7XG4gIHZhciBwYWNrZXQgPSBwYXJzZXIuZGVjb2RlUGFja2V0KGRhdGEsIHRoaXMuc29ja2V0LmJpbmFyeVR5cGUpO1xuICB0aGlzLm9uUGFja2V0KHBhY2tldCk7XG59O1xuXG4vKipcbiAqIENhbGxlZCB3aXRoIGEgZGVjb2RlZCBwYWNrZXQuXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5vblBhY2tldCA9IGZ1bmN0aW9uIChwYWNrZXQpIHtcbiAgdGhpcy5lbWl0KCdwYWNrZXQnLCBwYWNrZXQpO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBjbG9zZS5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5UcmFuc3BvcnQucHJvdG90eXBlLm9uQ2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMucmVhZHlTdGF0ZSA9ICdjbG9zZWQnO1xuICB0aGlzLmVtaXQoJ2Nsb3NlJyk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZW5naW5lLmlvLWNsaWVudC9saWIvdHJhbnNwb3J0LmpzXG4gKiogbW9kdWxlIGlkID0gNlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("// browser shim for xmlhttprequest module\nvar hasCORS = __webpack_require__(46);\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1jbGllbnQvbGliL3htbGh0dHByZXF1ZXN0LmpzP2Y3ZTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsWUFBWTs7QUFFZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsWUFBWTs7QUFFZjtBQUNBO0FBQ0E7QUFDQSxLQUFLLFdBQVc7QUFDaEI7QUFDQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYnJvd3NlciBzaGltIGZvciB4bWxodHRwcmVxdWVzdCBtb2R1bGVcbnZhciBoYXNDT1JTID0gcmVxdWlyZSgnaGFzLWNvcnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcHRzKSB7XG4gIHZhciB4ZG9tYWluID0gb3B0cy54ZG9tYWluO1xuXG4gIC8vIHNjaGVtZSBtdXN0IGJlIHNhbWUgd2hlbiB1c2lnbiBYRG9tYWluUmVxdWVzdFxuICAvLyBodHRwOi8vYmxvZ3MubXNkbi5jb20vYi9pZWludGVybmFscy9hcmNoaXZlLzIwMTAvMDUvMTMveGRvbWFpbnJlcXVlc3QtcmVzdHJpY3Rpb25zLWxpbWl0YXRpb25zLWFuZC13b3JrYXJvdW5kcy5hc3B4XG4gIHZhciB4c2NoZW1lID0gb3B0cy54c2NoZW1lO1xuXG4gIC8vIFhEb21haW5SZXF1ZXN0IGhhcyBhIGZsb3cgb2Ygbm90IHNlbmRpbmcgY29va2llLCB0aGVyZWZvcmUgaXQgc2hvdWxkIGJlIGRpc2FibGVkIGFzIGEgZGVmYXVsdC5cbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvZW5naW5lLmlvLWNsaWVudC9wdWxsLzIxN1xuICB2YXIgZW5hYmxlc1hEUiA9IG9wdHMuZW5hYmxlc1hEUjtcblxuICAvLyBYTUxIdHRwUmVxdWVzdCBjYW4gYmUgZGlzYWJsZWQgb24gSUVcbiAgdHJ5IHtcbiAgICBpZiAoJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICYmICgheGRvbWFpbiB8fCBoYXNDT1JTKSkge1xuICAgICAgcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkgeyB9XG5cbiAgLy8gVXNlIFhEb21haW5SZXF1ZXN0IGZvciBJRTggaWYgZW5hYmxlc1hEUiBpcyB0cnVlXG4gIC8vIGJlY2F1c2UgbG9hZGluZyBiYXIga2VlcHMgZmxhc2hpbmcgd2hlbiB1c2luZyBqc29ucC1wb2xsaW5nXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS95dWppb3Nha2Evc29ja2UuaW8taWU4LWxvYWRpbmctZXhhbXBsZVxuICB0cnkge1xuICAgIGlmICgndW5kZWZpbmVkJyAhPSB0eXBlb2YgWERvbWFpblJlcXVlc3QgJiYgIXhzY2hlbWUgJiYgZW5hYmxlc1hEUikge1xuICAgICAgcmV0dXJuIG5ldyBYRG9tYWluUmVxdWVzdCgpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkgeyB9XG5cbiAgaWYgKCF4ZG9tYWluKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBuZXcgQWN0aXZlWE9iamVjdCgnTWljcm9zb2Z0LlhNTEhUVFAnKTtcbiAgICB9IGNhdGNoKGUpIHsgfVxuICB9XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9lbmdpbmUuaW8tY2xpZW50L2xpYi94bWxodHRwcmVxdWVzdC5qc1xuICoqIG1vZHVsZSBpZCA9IDdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BhcnNlcXMvaW5kZXguanM/ZDNkNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLE9BQU87QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb21waWxlcyBhIHF1ZXJ5c3RyaW5nXG4gKiBSZXR1cm5zIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIHN0ciA9ICcnO1xuXG4gIGZvciAodmFyIGkgaW4gb2JqKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgaWYgKHN0ci5sZW5ndGgpIHN0ciArPSAnJic7XG4gICAgICBzdHIgKz0gZW5jb2RlVVJJQ29tcG9uZW50KGkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KG9ialtpXSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cjtcbn07XG5cbi8qKlxuICogUGFyc2VzIGEgc2ltcGxlIHF1ZXJ5c3RyaW5nIGludG8gYW4gb2JqZWN0XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHFzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmRlY29kZSA9IGZ1bmN0aW9uKHFzKXtcbiAgdmFyIHFyeSA9IHt9O1xuICB2YXIgcGFpcnMgPSBxcy5zcGxpdCgnJicpO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHBhaXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBwYWlyID0gcGFpcnNbaV0uc3BsaXQoJz0nKTtcbiAgICBxcnlbZGVjb2RlVVJJQ29tcG9uZW50KHBhaXJbMF0pXSA9IGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzFdKTtcbiAgfVxuICByZXR1cm4gcXJ5O1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3BhcnNlcXMvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar debug = __webpack_require__(1)('socket.io-parser');\nvar json = __webpack_require__(58);\nvar isArray = __webpack_require__(22);\nvar Emitter = __webpack_require__(3);\nvar binary = __webpack_require__(57);\nvar isBuf = __webpack_require__(21);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 10 */
/***/ function(module, exports) {

	eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4gKiogbW9kdWxlIGlkID0gMTBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 11 */
/***/ function(module, exports) {

	eval("/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvbXBvbmVudC1iaW5kL2luZGV4LmpzP2U1OTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLGdCQUFnQjtBQUMzQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTbGljZSByZWZlcmVuY2UuXG4gKi9cblxudmFyIHNsaWNlID0gW10uc2xpY2U7XG5cbi8qKlxuICogQmluZCBgb2JqYCB0byBgZm5gLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBmbiBvciBzdHJpbmdcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iaiwgZm4pe1xuICBpZiAoJ3N0cmluZycgPT0gdHlwZW9mIGZuKSBmbiA9IG9ialtmbl07XG4gIGlmICgnZnVuY3Rpb24nICE9IHR5cGVvZiBmbikgdGhyb3cgbmV3IEVycm9yKCdiaW5kKCkgcmVxdWlyZXMgYSBmdW5jdGlvbicpO1xuICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIGZuLmFwcGx5KG9iaiwgYXJncy5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKSk7XG4gIH1cbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jb21wb25lbnQtYmluZC9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDExXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = __webpack_require__(7);\nvar XHR = __webpack_require__(39);\nvar JSONP = __webpack_require__(38);\nvar websocket = __webpack_require__(40);\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1jbGllbnQvbGliL3RyYW5zcG9ydHMvaW5kZXguanM/ZjI5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llc1xuICovXG5cbnZhciBYTUxIdHRwUmVxdWVzdCA9IHJlcXVpcmUoJ3htbGh0dHByZXF1ZXN0LXNzbCcpO1xudmFyIFhIUiA9IHJlcXVpcmUoJy4vcG9sbGluZy14aHInKTtcbnZhciBKU09OUCA9IHJlcXVpcmUoJy4vcG9sbGluZy1qc29ucCcpO1xudmFyIHdlYnNvY2tldCA9IHJlcXVpcmUoJy4vd2Vic29ja2V0Jyk7XG5cbi8qKlxuICogRXhwb3J0IHRyYW5zcG9ydHMuXG4gKi9cblxuZXhwb3J0cy5wb2xsaW5nID0gcG9sbGluZztcbmV4cG9ydHMud2Vic29ja2V0ID0gd2Vic29ja2V0O1xuXG4vKipcbiAqIFBvbGxpbmcgdHJhbnNwb3J0IHBvbHltb3JwaGljIGNvbnN0cnVjdG9yLlxuICogRGVjaWRlcyBvbiB4aHIgdnMganNvbnAgYmFzZWQgb24gZmVhdHVyZSBkZXRlY3Rpb24uXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcG9sbGluZyhvcHRzKXtcbiAgdmFyIHhocjtcbiAgdmFyIHhkID0gZmFsc2U7XG4gIHZhciB4cyA9IGZhbHNlO1xuICB2YXIganNvbnAgPSBmYWxzZSAhPT0gb3B0cy5qc29ucDtcblxuICBpZiAoZ2xvYmFsLmxvY2F0aW9uKSB7XG4gICAgdmFyIGlzU1NMID0gJ2h0dHBzOicgPT0gbG9jYXRpb24ucHJvdG9jb2w7XG4gICAgdmFyIHBvcnQgPSBsb2NhdGlvbi5wb3J0O1xuXG4gICAgLy8gc29tZSB1c2VyIGFnZW50cyBoYXZlIGVtcHR5IGBsb2NhdGlvbi5wb3J0YFxuICAgIGlmICghcG9ydCkge1xuICAgICAgcG9ydCA9IGlzU1NMID8gNDQzIDogODA7XG4gICAgfVxuXG4gICAgeGQgPSBvcHRzLmhvc3RuYW1lICE9IGxvY2F0aW9uLmhvc3RuYW1lIHx8IHBvcnQgIT0gb3B0cy5wb3J0O1xuICAgIHhzID0gb3B0cy5zZWN1cmUgIT0gaXNTU0w7XG4gIH1cblxuICBvcHRzLnhkb21haW4gPSB4ZDtcbiAgb3B0cy54c2NoZW1lID0geHM7XG4gIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdChvcHRzKTtcblxuICBpZiAoJ29wZW4nIGluIHhociAmJiAhb3B0cy5mb3JjZUpTT05QKSB7XG4gICAgcmV0dXJuIG5ldyBYSFIob3B0cyk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCFqc29ucCkgdGhyb3cgbmV3IEVycm9yKCdKU09OUCBkaXNhYmxlZCcpO1xuICAgIHJldHVybiBuZXcgSlNPTlAob3B0cyk7XG4gIH1cbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2VuZ2luZS5pby1jbGllbnQvbGliL3RyYW5zcG9ydHMvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAxMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(6);\nvar parseqs = __webpack_require__(8);\nvar parser = __webpack_require__(2);\nvar inherit = __webpack_require__(4);\nvar yeast = __webpack_require__(23);\nvar debug = __webpack_require__(1)('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = __webpack_require__(7);\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 14 */
/***/ function(module, exports) {

	eval("var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['CloseCurlyDoubleQuote', [8221]], ['CloseCurlyQuote', [8217]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 15 */
/***/ function(module, exports) {

	eval("\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2luZGV4b2YvaW5kZXguanM/MzA1YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBpbmRleE9mID0gW10uaW5kZXhPZjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhcnIsIG9iail7XG4gIGlmIChpbmRleE9mKSByZXR1cm4gYXJyLmluZGV4T2Yob2JqKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoYXJyW2ldID09PSBvYmopIHJldHVybiBpO1xuICB9XG4gIHJldHVybiAtMTtcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vaW5kZXhvZi9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDE1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 16 */
/***/ function(module, exports) {

	eval("/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BhcnNldXJpL2luZGV4LmpzP2I2MzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlHQUF5RyxJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUk7O0FBRWpJO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdFQUF3RTtBQUN4RTs7QUFFQTtBQUNBLGdCQUFnQjtBQUNoQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RSxrRkFBa0Y7QUFDbEY7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQYXJzZXMgYW4gVVJJXG4gKlxuICogQGF1dGhvciBTdGV2ZW4gTGV2aXRoYW4gPHN0ZXZlbmxldml0aGFuLmNvbT4gKE1JVCBsaWNlbnNlKVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxudmFyIHJlID0gL14oPzooPyFbXjpAXSs6W146QFxcL10qQCkoaHR0cHxodHRwc3x3c3x3c3MpOlxcL1xcLyk/KCg/OigoW146QF0qKSg/OjooW146QF0qKSk/KT9AKT8oKD86W2EtZjAtOV17MCw0fTopezIsN31bYS1mMC05XXswLDR9fFteOlxcLz8jXSopKD86OihcXGQqKSk/KSgoKFxcLyg/OltePyNdKD8hW14/I1xcL10qXFwuW14/I1xcLy5dKyg/Ols/I118JCkpKSpcXC8/KT8oW14/I1xcL10qKSkoPzpcXD8oW14jXSopKT8oPzojKC4qKSk/KS87XG5cbnZhciBwYXJ0cyA9IFtcbiAgICAnc291cmNlJywgJ3Byb3RvY29sJywgJ2F1dGhvcml0eScsICd1c2VySW5mbycsICd1c2VyJywgJ3Bhc3N3b3JkJywgJ2hvc3QnLCAncG9ydCcsICdyZWxhdGl2ZScsICdwYXRoJywgJ2RpcmVjdG9yeScsICdmaWxlJywgJ3F1ZXJ5JywgJ2FuY2hvcidcbl07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2V1cmkoc3RyKSB7XG4gICAgdmFyIHNyYyA9IHN0cixcbiAgICAgICAgYiA9IHN0ci5pbmRleE9mKCdbJyksXG4gICAgICAgIGUgPSBzdHIuaW5kZXhPZignXScpO1xuXG4gICAgaWYgKGIgIT0gLTEgJiYgZSAhPSAtMSkge1xuICAgICAgICBzdHIgPSBzdHIuc3Vic3RyaW5nKDAsIGIpICsgc3RyLnN1YnN0cmluZyhiLCBlKS5yZXBsYWNlKC86L2csICc7JykgKyBzdHIuc3Vic3RyaW5nKGUsIHN0ci5sZW5ndGgpO1xuICAgIH1cblxuICAgIHZhciBtID0gcmUuZXhlYyhzdHIgfHwgJycpLFxuICAgICAgICB1cmkgPSB7fSxcbiAgICAgICAgaSA9IDE0O1xuXG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgICB1cmlbcGFydHNbaV1dID0gbVtpXSB8fCAnJztcbiAgICB9XG5cbiAgICBpZiAoYiAhPSAtMSAmJiBlICE9IC0xKSB7XG4gICAgICAgIHVyaS5zb3VyY2UgPSBzcmM7XG4gICAgICAgIHVyaS5ob3N0ID0gdXJpLmhvc3Quc3Vic3RyaW5nKDEsIHVyaS5ob3N0Lmxlbmd0aCAtIDEpLnJlcGxhY2UoLzsvZywgJzonKTtcbiAgICAgICAgdXJpLmF1dGhvcml0eSA9IHVyaS5hdXRob3JpdHkucmVwbGFjZSgnWycsICcnKS5yZXBsYWNlKCddJywgJycpLnJlcGxhY2UoLzsvZywgJzonKTtcbiAgICAgICAgdXJpLmlwdjZ1cmkgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiB1cmk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcGFyc2V1cmkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAxNlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar eio = __webpack_require__(35);\nvar Socket = __webpack_require__(19);\nvar Emitter = __webpack_require__(20);\nvar parser = __webpack_require__(9);\nvar on = __webpack_require__(18);\nvar bind = __webpack_require__(11);\nvar debug = __webpack_require__(1)('socket.io-client:manager');\nvar indexOf = __webpack_require__(15);\nvar Backoff = __webpack_require__(29);\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function(){\n  this.lastPing = new Date;\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function(){\n  this.emitAll('pong', new Date - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  debug('cleanup');\n\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' == this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 18 */
/***/ function(module, exports) {

	eval("\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1jbGllbnQvbGliL29uLmpzPzQwMDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9CQUFvQjtBQUMvQixXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IG9uO1xuXG4vKipcbiAqIEhlbHBlciBmb3Igc3Vic2NyaXB0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdHxFdmVudEVtaXR0ZXJ9IG9iaiB3aXRoIGBFbWl0dGVyYCBtaXhpbiBvciBgRXZlbnRFbWl0dGVyYFxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50IG5hbWVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIG9uKG9iaiwgZXYsIGZuKSB7XG4gIG9iai5vbihldiwgZm4pO1xuICByZXR1cm4ge1xuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCl7XG4gICAgICBvYmoucmVtb3ZlTGlzdGVuZXIoZXYsIGZuKTtcbiAgICB9XG4gIH07XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9zb2NrZXQuaW8tY2xpZW50L2xpYi9vbi5qc1xuICoqIG1vZHVsZSBpZCA9IDE4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(9);\nvar Emitter = __webpack_require__(20);\nvar toArray = __webpack_require__(62);\nvar on = __webpack_require__(18);\nvar bind = __webpack_require__(11);\nvar debug = __webpack_require__(1)('socket.io-client:socket');\nvar hasBin = __webpack_require__(44);\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 20 */
/***/ function(module, exports) {

	eval("\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1jbGllbnQvfi9jb21wb25lbnQtZW1pdHRlci9pbmRleC5qcz8zZWI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsU0FBUztBQUNwQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsU0FBUztBQUNwQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxNQUFNO0FBQ2pCLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkNBQTJDLFNBQVM7QUFDcEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogRXhwb3NlIGBFbWl0dGVyYC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IEVtaXR0ZXI7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgRW1pdHRlcmAuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBFbWl0dGVyKG9iaikge1xuICBpZiAob2JqKSByZXR1cm4gbWl4aW4ob2JqKTtcbn07XG5cbi8qKlxuICogTWl4aW4gdGhlIGVtaXR0ZXIgcHJvcGVydGllcy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcbiAgZm9yICh2YXIga2V5IGluIEVtaXR0ZXIucHJvdG90eXBlKSB7XG4gICAgb2JqW2tleV0gPSBFbWl0dGVyLnByb3RvdHlwZVtrZXldO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogTGlzdGVuIG9uIHRoZSBnaXZlbiBgZXZlbnRgIHdpdGggYGZuYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5FbWl0dGVyLnByb3RvdHlwZS5vbiA9XG5FbWl0dGVyLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQsIGZuKXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuICAodGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF0gfHwgW10pXG4gICAgLnB1c2goZm4pO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQWRkcyBhbiBgZXZlbnRgIGxpc3RlbmVyIHRoYXQgd2lsbCBiZSBpbnZva2VkIGEgc2luZ2xlXG4gKiB0aW1lIHRoZW4gYXV0b21hdGljYWxseSByZW1vdmVkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEByZXR1cm4ge0VtaXR0ZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbihldmVudCwgZm4pe1xuICBmdW5jdGlvbiBvbigpIHtcbiAgICB0aGlzLm9mZihldmVudCwgb24pO1xuICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBvbi5mbiA9IGZuO1xuICB0aGlzLm9uKGV2ZW50LCBvbik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdpdmVuIGNhbGxiYWNrIGZvciBgZXZlbnRgIG9yIGFsbFxuICogcmVnaXN0ZXJlZCBjYWxsYmFja3MuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHJldHVybiB7RW1pdHRlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuRW1pdHRlci5wcm90b3R5cGUub2ZmID1cbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID1cbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9XG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQsIGZuKXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuXG4gIC8vIGFsbFxuICBpZiAoMCA9PSBhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgdGhpcy5fY2FsbGJhY2tzID0ge307XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBzcGVjaWZpYyBldmVudFxuICB2YXIgY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XTtcbiAgaWYgKCFjYWxsYmFja3MpIHJldHVybiB0aGlzO1xuXG4gIC8vIHJlbW92ZSBhbGwgaGFuZGxlcnNcbiAgaWYgKDEgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gcmVtb3ZlIHNwZWNpZmljIGhhbmRsZXJcbiAgdmFyIGNiO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xuICAgIGNiID0gY2FsbGJhY2tzW2ldO1xuICAgIGlmIChjYiA9PT0gZm4gfHwgY2IuZm4gPT09IGZuKSB7XG4gICAgICBjYWxsYmFja3Muc3BsaWNlKGksIDEpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBFbWl0IGBldmVudGAgd2l0aCB0aGUgZ2l2ZW4gYXJncy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcbiAqIEBwYXJhbSB7TWl4ZWR9IC4uLlxuICogQHJldHVybiB7RW1pdHRlcn1cbiAqL1xuXG5FbWl0dGVyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24oZXZlbnQpe1xuICB0aGlzLl9jYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3MgfHwge307XG4gIHZhciBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpXG4gICAgLCBjYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdO1xuXG4gIGlmIChjYWxsYmFja3MpIHtcbiAgICBjYWxsYmFja3MgPSBjYWxsYmFja3Muc2xpY2UoMCk7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNhbGxiYWNrcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgY2FsbGJhY2tzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gYXJyYXkgb2YgY2FsbGJhY2tzIGZvciBgZXZlbnRgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHJldHVybiB7QXJyYXl9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKGV2ZW50KXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuICByZXR1cm4gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSB8fCBbXTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhpcyBlbWl0dGVyIGhhcyBgZXZlbnRgIGhhbmRsZXJzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuRW1pdHRlci5wcm90b3R5cGUuaGFzTGlzdGVuZXJzID0gZnVuY3Rpb24oZXZlbnQpe1xuICByZXR1cm4gISEgdGhpcy5saXN0ZW5lcnMoZXZlbnQpLmxlbmd0aDtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9zb2NrZXQuaW8tY2xpZW50L34vY29tcG9uZW50LWVtaXR0ZXIvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 21 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1wYXJzZXIvaXMtYnVmZmVyLmpzPzQ2MTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1vZHVsZS5leHBvcnRzID0gaXNCdWY7XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIG9iaiBpcyBhIGJ1ZmZlciBvciBhbiBhcnJheWJ1ZmZlci5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc0J1ZihvYmopIHtcbiAgcmV0dXJuIChnbG9iYWwuQnVmZmVyICYmIGdsb2JhbC5CdWZmZXIuaXNCdWZmZXIob2JqKSkgfHxcbiAgICAgICAgIChnbG9iYWwuQXJyYXlCdWZmZXIgJiYgb2JqIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpO1xufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vc29ja2V0LmlvLXBhcnNlci9pcy1idWZmZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAyMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 22 */
/***/ function(module, exports) {

	eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1wYXJzZXIvfi9pc2FycmF5L2luZGV4LmpzPzY3YjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwiZmlsZSI6IjIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vc29ja2V0LmlvLXBhcnNlci9+L2lzYXJyYXkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 23 */
/***/ function(module, exports) {

	eval("'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3llYXN0L2luZGV4LmpzP2NjZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTSxZQUFZOztBQUVsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbHBoYWJldCA9ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ei1fJy5zcGxpdCgnJylcbiAgLCBsZW5ndGggPSA2NFxuICAsIG1hcCA9IHt9XG4gICwgc2VlZCA9IDBcbiAgLCBpID0gMFxuICAsIHByZXY7XG5cbi8qKlxuICogUmV0dXJuIGEgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgc3BlY2lmaWVkIG51bWJlci5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbnVtIFRoZSBudW1iZXIgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIG51bWJlci5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIGVuY29kZShudW0pIHtcbiAgdmFyIGVuY29kZWQgPSAnJztcblxuICBkbyB7XG4gICAgZW5jb2RlZCA9IGFscGhhYmV0W251bSAlIGxlbmd0aF0gKyBlbmNvZGVkO1xuICAgIG51bSA9IE1hdGguZmxvb3IobnVtIC8gbGVuZ3RoKTtcbiAgfSB3aGlsZSAobnVtID4gMCk7XG5cbiAgcmV0dXJuIGVuY29kZWQ7XG59XG5cbi8qKlxuICogUmV0dXJuIHRoZSBpbnRlZ2VyIHZhbHVlIHNwZWNpZmllZCBieSB0aGUgZ2l2ZW4gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge051bWJlcn0gVGhlIGludGVnZXIgdmFsdWUgcmVwcmVzZW50ZWQgYnkgdGhlIHN0cmluZy5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgdmFyIGRlY29kZWQgPSAwO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICBkZWNvZGVkID0gZGVjb2RlZCAqIGxlbmd0aCArIG1hcFtzdHIuY2hhckF0KGkpXTtcbiAgfVxuXG4gIHJldHVybiBkZWNvZGVkO1xufVxuXG4vKipcbiAqIFllYXN0OiBBIHRpbnkgZ3Jvd2luZyBpZCBnZW5lcmF0b3IuXG4gKlxuICogQHJldHVybnMge1N0cmluZ30gQSB1bmlxdWUgaWQuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiB5ZWFzdCgpIHtcbiAgdmFyIG5vdyA9IGVuY29kZSgrbmV3IERhdGUoKSk7XG5cbiAgaWYgKG5vdyAhPT0gcHJldikgcmV0dXJuIHNlZWQgPSAwLCBwcmV2ID0gbm93O1xuICByZXR1cm4gbm93ICsnLicrIGVuY29kZShzZWVkKyspO1xufVxuXG4vL1xuLy8gTWFwIGVhY2ggY2hhcmFjdGVyIHRvIGl0cyBpbmRleC5cbi8vXG5mb3IgKDsgaSA8IGxlbmd0aDsgaSsrKSBtYXBbYWxwaGFiZXRbaV1dID0gaTtcblxuLy9cbi8vIEV4cG9zZSB0aGUgYHllYXN0YCwgYGVuY29kZWAgYW5kIGBkZWNvZGVgIGZ1bmN0aW9ucy5cbi8vXG55ZWFzdC5lbmNvZGUgPSBlbmNvZGU7XG55ZWFzdC5kZWNvZGUgPSBkZWNvZGU7XG5tb2R1bGUuZXhwb3J0cyA9IHllYXN0O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34veWVhc3QvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyM1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 24 */
/***/ function(module, exports) {

	eval("module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2FmdGVyL2luZGV4LmpzPzJlY2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFmdGVyXG5cbmZ1bmN0aW9uIGFmdGVyKGNvdW50LCBjYWxsYmFjaywgZXJyX2NiKSB7XG4gICAgdmFyIGJhaWwgPSBmYWxzZVxuICAgIGVycl9jYiA9IGVycl9jYiB8fCBub29wXG4gICAgcHJveHkuY291bnQgPSBjb3VudFxuXG4gICAgcmV0dXJuIChjb3VudCA9PT0gMCkgPyBjYWxsYmFjaygpIDogcHJveHlcblxuICAgIGZ1bmN0aW9uIHByb3h5KGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChwcm94eS5jb3VudCA8PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FmdGVyIGNhbGxlZCB0b28gbWFueSB0aW1lcycpXG4gICAgICAgIH1cbiAgICAgICAgLS1wcm94eS5jb3VudFxuXG4gICAgICAgIC8vIGFmdGVyIGZpcnN0IGVycm9yLCByZXN0IGFyZSBwYXNzZWQgdG8gZXJyX2NiXG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGJhaWwgPSB0cnVlXG4gICAgICAgICAgICBjYWxsYmFjayhlcnIpXG4gICAgICAgICAgICAvLyBmdXR1cmUgZXJyb3IgY2FsbGJhY2tzIHdpbGwgZ28gdG8gZXJyb3IgaGFuZGxlclxuICAgICAgICAgICAgY2FsbGJhY2sgPSBlcnJfY2JcbiAgICAgICAgfSBlbHNlIGlmIChwcm94eS5jb3VudCA9PT0gMCAmJiAhYmFpbCkge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0KVxuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBub29wKCkge31cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2FmdGVyL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMjRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 25 */
/***/ function(module, exports) {

	eval("module.exports = ansiHTML;\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar re_ansi = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/;\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n};\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n};\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.8', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>', // delete\n};\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n};\n[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>';\n});\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML(text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!re_ansi.test(text)) {\n    return text;\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = [];\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)*m/g, function (match, seq) {\n    var ot = _openTags[seq];\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) {\n        ansiCodes.pop();\n        return '</span>';\n      }\n      // Open tag.\n      ansiCodes.push(seq);\n      return ot[0] == '<' ? ot : '<span style=\"' + ot + ';\">';\n    }\n\n    var ct = _closeTags[seq];\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop();\n      return ct;\n    }\n    return '';\n  });\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length;\n  (l > 0) && (ret += Array(l + 1).join('</span>'));\n\n  return ret;\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors != 'object') {\n    throw new Error('`colors` parameter must be an Object.');\n  }\n\n  var _finalColors = {};\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null;\n    if (!hex) {\n      _finalColors[key] = _defColors[key];\n      continue;\n    }\n    if ('reset' == key) {\n    \tif(typeof hex == 'string'){\n    \t\thex = [hex];\n    \t}\n      if (!Array.isArray(hex) || hex.length == 0 || hex.some(function (h) {\n          return typeof h != 'string';\n        })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');\n      }\n      var defHexColor = _defColors[key];\n      if(!hex[0]){\n      \thex[0] = defHexColor[0];\n      }\n      if (hex.length == 1 || !hex[1]) {\n      \thex = [hex[0]];\n        hex.push(defHexColor[1]);\n      }\n\n      hex = hex.slice(0, 2);\n    } else if (typeof hex != 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');\n    }\n    _finalColors[key] = hex;\n  }\n  _setTags(_finalColors);\n};\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function(){\n\t_setTags(_defColors);\n};\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {\n  get open() {\n    return _openTags;\n  },\n  get close() {\n    return _closeTags;\n  }\n};\n\nfunction _setTags(colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey;\n\n  for (var code in _styles) {\n    var color = _styles[code];\n    var oriColor = colors[color] || '000';\n    _openTags[code] = 'color:#' + oriColor;\n    code = parseInt(code);\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor;\n  }\n}\n\nansiHTML.reset();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Fuc2ktaHRtbC9pbmRleC5qcz9mMDk4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0Esa0RBQWtELElBQUksU0FBUyxNQUFNLElBQUk7O0FBRXpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVDQUF1QyxVQUFVLCtCQUErQjtBQUNoRjtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFuc2lIVE1MO1xuXG4vLyBSZWZlcmVuY2UgdG8gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9hbnNpLXJlZ2V4XG52YXIgcmVfYW5zaSA9IC8oPzooPzpcXHUwMDFiXFxbKXxcXHUwMDliKSg/Oig/OlswLTldezEsM30pPyg/Oig/OjtbMC05XXswLDN9KSopP1tBLU18Zi1tXSl8XFx1MDAxYltBLU1dLztcblxudmFyIF9kZWZDb2xvcnMgPSB7XG4gIHJlc2V0OiBbJ2ZmZicsICcwMDAnXSwgLy8gW0ZPUkVHUk9VRF9DT0xPUiwgQkFDS0dST1VORF9DT0xPUl1cbiAgYmxhY2s6ICcwMDAnLFxuICByZWQ6ICdmZjAwMDAnLFxuICBncmVlbjogJzIwOTgwNScsXG4gIHllbGxvdzogJ2U4YmYwMycsXG4gIGJsdWU6ICcwMDAwZmYnLFxuICBtYWdlbnRhOiAnZmYwMGZmJyxcbiAgY3lhbjogJzAwZmZlZScsXG4gIGxpZ2h0Z3JleTogJ2YwZjBmMCcsXG4gIGRhcmtncmV5OiAnODg4J1xufTtcbnZhciBfc3R5bGVzID0ge1xuICAzMDogJ2JsYWNrJyxcbiAgMzE6ICdyZWQnLFxuICAzMjogJ2dyZWVuJyxcbiAgMzM6ICd5ZWxsb3cnLFxuICAzNDogJ2JsdWUnLFxuICAzNTogJ21hZ2VudGEnLFxuICAzNjogJ2N5YW4nLFxuICAzNzogJ2xpZ2h0Z3JleSdcbn07XG52YXIgX29wZW5UYWdzID0ge1xuICAnMSc6ICdmb250LXdlaWdodDpib2xkJywgLy8gYm9sZFxuICAnMic6ICdvcGFjaXR5OjAuOCcsIC8vIGRpbVxuICAnMyc6ICc8aT4nLCAvLyBpdGFsaWNcbiAgJzQnOiAnPHU+JywgLy8gdW5kZXJzY29yZVxuICAnOCc6ICdkaXNwbGF5Om5vbmUnLCAvLyBoaWRkZW5cbiAgJzknOiAnPGRlbD4nLCAvLyBkZWxldGVcbn07XG52YXIgX2Nsb3NlVGFncyA9IHtcbiAgJzIzJzogJzwvaT4nLCAvLyByZXNldCBpdGFsaWNcbiAgJzI0JzogJzwvdT4nLCAvLyByZXNldCB1bmRlcnNjb3JlXG4gICcyOSc6ICc8L2RlbD4nIC8vIHJlc2V0IGRlbGV0ZVxufTtcblswLCAyMSwgMjIsIDI3LCAyOCwgMzksIDQ5XS5mb3JFYWNoKGZ1bmN0aW9uIChuKSB7XG4gIF9jbG9zZVRhZ3Nbbl0gPSAnPC9zcGFuPic7XG59KTtcblxuLyoqXG4gKiBDb252ZXJ0cyB0ZXh0IHdpdGggQU5TSSBjb2xvciBjb2RlcyB0byBIVE1MIG1hcmt1cC5cbiAqIEBwYXJhbSB7U3RyaW5nfSB0ZXh0XG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZnVuY3Rpb24gYW5zaUhUTUwodGV4dCkge1xuICAvLyBSZXR1cm5zIHRoZSB0ZXh0IGlmIHRoZSBzdHJpbmcgaGFzIG5vIEFOU0kgZXNjYXBlIGNvZGUuXG4gIGlmICghcmVfYW5zaS50ZXN0KHRleHQpKSB7XG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cblxuICAvLyBDYWNoZSBvcGVuZWQgc2VxdWVuY2UuXG4gIHZhciBhbnNpQ29kZXMgPSBbXTtcbiAgLy8gUmVwbGFjZSB3aXRoIG1hcmt1cC5cbiAgdmFyIHJldCA9IHRleHQucmVwbGFjZSgvXFwwMzNcXFsoXFxkKykqbS9nLCBmdW5jdGlvbiAobWF0Y2gsIHNlcSkge1xuICAgIHZhciBvdCA9IF9vcGVuVGFnc1tzZXFdO1xuICAgIGlmIChvdCkge1xuICAgICAgLy8gSWYgY3VycmVudCBzZXF1ZW5jZSBoYXMgYmVlbiBvcGVuZWQsIGNsb3NlIGl0LlxuICAgICAgaWYgKCEhfmFuc2lDb2Rlcy5pbmRleE9mKHNlcSkpIHtcbiAgICAgICAgYW5zaUNvZGVzLnBvcCgpO1xuICAgICAgICByZXR1cm4gJzwvc3Bhbj4nO1xuICAgICAgfVxuICAgICAgLy8gT3BlbiB0YWcuXG4gICAgICBhbnNpQ29kZXMucHVzaChzZXEpO1xuICAgICAgcmV0dXJuIG90WzBdID09ICc8JyA/IG90IDogJzxzcGFuIHN0eWxlPVwiJyArIG90ICsgJztcIj4nO1xuICAgIH1cblxuICAgIHZhciBjdCA9IF9jbG9zZVRhZ3Nbc2VxXTtcbiAgICBpZiAoY3QpIHtcbiAgICAgIC8vIFBvcCBzZXF1ZW5jZVxuICAgICAgYW5zaUNvZGVzLnBvcCgpO1xuICAgICAgcmV0dXJuIGN0O1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH0pO1xuXG4gIC8vIE1ha2Ugc3VyZSB0YWdzIGFyZSBjbG9zZWQuXG4gIHZhciBsID0gYW5zaUNvZGVzLmxlbmd0aDtcbiAgKGwgPiAwKSAmJiAocmV0ICs9IEFycmF5KGwgKyAxKS5qb2luKCc8L3NwYW4+JykpO1xuXG4gIHJldHVybiByZXQ7XG59XG5cbi8qKlxuICogQ3VzdG9taXplIGNvbG9ycy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb2xvcnMgcmVmZXJlbmNlIHRvIF9kZWZDb2xvcnNcbiAqL1xuYW5zaUhUTUwuc2V0Q29sb3JzID0gZnVuY3Rpb24gKGNvbG9ycykge1xuICBpZiAodHlwZW9mIGNvbG9ycyAhPSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBFcnJvcignYGNvbG9yc2AgcGFyYW1ldGVyIG11c3QgYmUgYW4gT2JqZWN0LicpO1xuICB9XG5cbiAgdmFyIF9maW5hbENvbG9ycyA9IHt9O1xuICBmb3IgKHZhciBrZXkgaW4gX2RlZkNvbG9ycykge1xuICAgIHZhciBoZXggPSBjb2xvcnMuaGFzT3duUHJvcGVydHkoa2V5KSA/IGNvbG9yc1trZXldIDogbnVsbDtcbiAgICBpZiAoIWhleCkge1xuICAgICAgX2ZpbmFsQ29sb3JzW2tleV0gPSBfZGVmQ29sb3JzW2tleV07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKCdyZXNldCcgPT0ga2V5KSB7XG4gICAgXHRpZih0eXBlb2YgaGV4ID09ICdzdHJpbmcnKXtcbiAgICBcdFx0aGV4ID0gW2hleF07XG4gICAgXHR9XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkoaGV4KSB8fCBoZXgubGVuZ3RoID09IDAgfHwgaGV4LnNvbWUoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIGggIT0gJ3N0cmluZyc7XG4gICAgICAgIH0pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIHZhbHVlIG9mIGAnICsga2V5ICsgJ2AgcHJvcGVydHkgbXVzdCBiZSBhbiBBcnJheSBhbmQgZWFjaCBpdGVtIGNvdWxkIG9ubHkgYmUgYSBoZXggc3RyaW5nLCBlLmcuOiBGRjAwMDAnKTtcbiAgICAgIH1cbiAgICAgIHZhciBkZWZIZXhDb2xvciA9IF9kZWZDb2xvcnNba2V5XTtcbiAgICAgIGlmKCFoZXhbMF0pe1xuICAgICAgXHRoZXhbMF0gPSBkZWZIZXhDb2xvclswXTtcbiAgICAgIH1cbiAgICAgIGlmIChoZXgubGVuZ3RoID09IDEgfHwgIWhleFsxXSkge1xuICAgICAgXHRoZXggPSBbaGV4WzBdXTtcbiAgICAgICAgaGV4LnB1c2goZGVmSGV4Q29sb3JbMV0pO1xuICAgICAgfVxuXG4gICAgICBoZXggPSBoZXguc2xpY2UoMCwgMik7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgaGV4ICE9ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSB2YWx1ZSBvZiBgJyArIGtleSArICdgIHByb3BlcnR5IG11c3QgYmUgYSBoZXggc3RyaW5nLCBlLmcuOiBGRjAwMDAnKTtcbiAgICB9XG4gICAgX2ZpbmFsQ29sb3JzW2tleV0gPSBoZXg7XG4gIH1cbiAgX3NldFRhZ3MoX2ZpbmFsQ29sb3JzKTtcbn07XG5cbi8qKlxuICogUmVzZXQgY29sb3JzLlxuICovXG5hbnNpSFRNTC5yZXNldCA9IGZ1bmN0aW9uKCl7XG5cdF9zZXRUYWdzKF9kZWZDb2xvcnMpO1xufTtcblxuLyoqXG4gKiBFeHBvc2UgdGFncywgaW5jbHVkaW5nIG9wZW4gYW5kIGNsb3NlLlxuICogQHR5cGUge09iamVjdH1cbiAqL1xuYW5zaUhUTUwudGFncyA9IHtcbiAgZ2V0IG9wZW4oKSB7XG4gICAgcmV0dXJuIF9vcGVuVGFncztcbiAgfSxcbiAgZ2V0IGNsb3NlKCkge1xuICAgIHJldHVybiBfY2xvc2VUYWdzO1xuICB9XG59O1xuXG5mdW5jdGlvbiBfc2V0VGFncyhjb2xvcnMpIHtcbiAgLy8gcmVzZXQgYWxsXG4gIF9vcGVuVGFnc1snMCddID0gJ2ZvbnQtd2VpZ2h0Om5vcm1hbDtvcGFjaXR5OjE7Y29sb3I6IycgKyBjb2xvcnMucmVzZXRbMF0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMV07XG4gIC8vIGludmVyc2VcbiAgX29wZW5UYWdzWyc3J10gPSAnY29sb3I6IycgKyBjb2xvcnMucmVzZXRbMV0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMF07XG4gIC8vIGRhcmsgZ3JleVxuICBfb3BlblRhZ3NbJzkwJ10gPSAnY29sb3I6IycgKyBjb2xvcnMuZGFya2dyZXk7XG5cbiAgZm9yICh2YXIgY29kZSBpbiBfc3R5bGVzKSB7XG4gICAgdmFyIGNvbG9yID0gX3N0eWxlc1tjb2RlXTtcbiAgICB2YXIgb3JpQ29sb3IgPSBjb2xvcnNbY29sb3JdIHx8ICcwMDAnO1xuICAgIF9vcGVuVGFnc1tjb2RlXSA9ICdjb2xvcjojJyArIG9yaUNvbG9yO1xuICAgIGNvZGUgPSBwYXJzZUludChjb2RlKTtcbiAgICBfb3BlblRhZ3NbKGNvZGUgKyAxMCkudG9TdHJpbmcoKV0gPSAnYmFja2dyb3VuZDojJyArIG9yaUNvbG9yO1xuICB9XG59XG5cbmFuc2lIVE1MLnJlc2V0KCk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9hbnNpLWh0bWwvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 26 */
/***/ function(module, exports) {

	eval("'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Fuc2ktcmVnZXgvaW5kZXguanM/NzY1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsNkJBQTZCLFlBQVksSUFBSSxJQUFJLE1BQU0sSUFBSTtBQUMzRCIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gL1tcXHUwMDFiXFx1MDA5Yl1bWygpIzs/XSooPzpbMC05XXsxLDR9KD86O1swLTldezAsNH0pKik/WzAtOUEtT1JaY2YtbnFyeT0+PF0vZztcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9hbnNpLXJlZ2V4L2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMjZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 27 */
/***/ function(module, exports) {

	eval("/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2FycmF5YnVmZmVyLnNsaWNlL2luZGV4LmpzP2IxYTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQixzQ0FBc0M7O0FBRWhFLGtCQUFrQixnQkFBZ0I7QUFDbEMsZ0JBQWdCLGNBQWM7QUFDOUIsb0JBQW9CLGFBQWE7O0FBRWpDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNkJBQTZCLFNBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFuIGFic3RyYWN0aW9uIGZvciBzbGljaW5nIGFuIGFycmF5YnVmZmVyIGV2ZW4gd2hlblxuICogQXJyYXlCdWZmZXIucHJvdG90eXBlLnNsaWNlIGlzIG5vdCBzdXBwb3J0ZWRcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXJyYXlidWZmZXIsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGJ5dGVzID0gYXJyYXlidWZmZXIuYnl0ZUxlbmd0aDtcbiAgc3RhcnQgPSBzdGFydCB8fCAwO1xuICBlbmQgPSBlbmQgfHwgYnl0ZXM7XG5cbiAgaWYgKGFycmF5YnVmZmVyLnNsaWNlKSB7IHJldHVybiBhcnJheWJ1ZmZlci5zbGljZShzdGFydCwgZW5kKTsgfVxuXG4gIGlmIChzdGFydCA8IDApIHsgc3RhcnQgKz0gYnl0ZXM7IH1cbiAgaWYgKGVuZCA8IDApIHsgZW5kICs9IGJ5dGVzOyB9XG4gIGlmIChlbmQgPiBieXRlcykgeyBlbmQgPSBieXRlczsgfVxuXG4gIGlmIChzdGFydCA+PSBieXRlcyB8fCBzdGFydCA+PSBlbmQgfHwgYnl0ZXMgPT09IDApIHtcbiAgICByZXR1cm4gbmV3IEFycmF5QnVmZmVyKDApO1xuICB9XG5cbiAgdmFyIGFidiA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKTtcbiAgdmFyIHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGVuZCAtIHN0YXJ0KTtcbiAgZm9yICh2YXIgaSA9IHN0YXJ0LCBpaSA9IDA7IGkgPCBlbmQ7IGkrKywgaWkrKykge1xuICAgIHJlc3VsdFtpaV0gPSBhYnZbaV07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdC5idWZmZXI7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vYXJyYXlidWZmZXIuc2xpY2UvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n__webpack_require__(61);\n\nvar _socket = __webpack_require__(55);\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _Main = __webpack_require__(34);\n\nvar _Main2 = _interopRequireDefault(_Main);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar messageTypes = {\n    empty: 0,\n    join: 1,\n    welcome: 2,\n    update: 3,\n    delta: 4\n}; // IMPORT ASSETS\n\n\nvar app = _Main2.default.Main.fullscreen({\n    inboundSocket: {\n        messageType: 0,\n        payload: null\n    }\n});\n\napp.ports.outboundSocket.subscribe(function (msg) {\n    switch (msg.messageType) {\n        case messageTypes.join:\n            startGame(msg.payload);\n            break;\n        case messageTypes.update:\n            if (socket) {\n                socket.emit('updatePlayer', msg.payload);\n            }\n            break;\n    }\n});\n\nvar socket = void 0;\n\nfunction init(s) {\n    return s;\n}\n\nfunction setupSocket(sock) {\n    sock.on('pong', function () {\n        console.log('pong');\n    });\n\n    // Handle error.\n    sock.on('connect_failed', function () {\n        sock.close();\n    });\n\n    sock.on('disconnect', function () {\n        sock.close();\n    });\n\n    // Handle connection.\n    sock.on('welcome', function (s) {\n        app.ports.inboundSocket.send({\n            messageType: messageTypes.welcome,\n            payload: s\n        });\n    });\n\n    sock.on('update', function (s) {\n        app.ports.inboundSocket.send({\n            messageType: messageTypes.delta,\n            payload: s\n        });\n    });\n    return sock;\n}\n\nfunction startGame(_ref) {\n    var name = _ref.name;\n    var team = _ref.team;\n\n    socket = setupSocket((0, _socket2.default)({ query: 'name=' + name + '&team=' + team }));\n}//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvbWFpbi5qcz8xZTNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7Ozs7O0FBRUEsSUFBTSxlQUFlO0FBQ2pCLFdBQU8sQ0FEVTtBQUVqQixVQUFNLENBRlc7QUFHakIsYUFBUyxDQUhRO0FBSWpCLFlBQVEsQ0FKUztBQUtqQixXQUFPO0FBTFUsQ0FBckIsQzs7O0FBUUEsSUFBTSxNQUFNLGVBQUksSUFBSixDQUFTLFVBQVQsQ0FBb0I7QUFDNUIsbUJBQWU7QUFDWCxxQkFBYSxDQURGO0FBRVgsaUJBQVM7QUFGRTtBQURhLENBQXBCLENBQVo7O0FBT0EsSUFBSSxLQUFKLENBQVUsY0FBVixDQUF5QixTQUF6QixDQUFtQyxlQUFPO0FBQ3RDLFlBQVEsSUFBSSxXQUFaO0FBQ0ksYUFBSyxhQUFhLElBQWxCO0FBQXdCLHNCQUFVLElBQUksT0FBZDtBQUNwQjtBQUNKLGFBQUssYUFBYSxNQUFsQjtBQUNJLGdCQUFHLE1BQUgsRUFBVztBQUNQLHVCQUFPLElBQVAsQ0FBWSxjQUFaLEVBQTRCLElBQUksT0FBaEM7QUFDSDtBQUNEO0FBUFI7QUFTSCxDQVZEOztBQVlBLElBQUksZUFBSjs7QUFFQSxTQUFTLElBQVQsQ0FBYyxDQUFkLEVBQWlCO0FBQ2IsV0FBTyxDQUFQO0FBQ0g7O0FBRUQsU0FBUyxXQUFULENBQXFCLElBQXJCLEVBQTJCO0FBQ3ZCLFNBQUssRUFBTCxDQUFRLE1BQVIsRUFBZ0IsWUFBTTtBQUNsQixnQkFBUSxHQUFSLENBQVksTUFBWjtBQUNILEtBRkQ7OztBQUtBLFNBQUssRUFBTCxDQUFRLGdCQUFSLEVBQTBCLFlBQU07QUFDNUIsYUFBSyxLQUFMO0FBQ0gsS0FGRDs7QUFJQSxTQUFLLEVBQUwsQ0FBUSxZQUFSLEVBQXNCLFlBQU07QUFDeEIsYUFBSyxLQUFMO0FBQ0gsS0FGRDs7O0FBS0EsU0FBSyxFQUFMLENBQVEsU0FBUixFQUFtQixVQUFDLENBQUQsRUFBTztBQUN0QixZQUFJLEtBQUosQ0FBVSxhQUFWLENBQXdCLElBQXhCLENBQTZCO0FBQ3pCLHlCQUFhLGFBQWEsT0FERDtBQUV6QixxQkFBUztBQUZnQixTQUE3QjtBQUlILEtBTEQ7O0FBT0EsU0FBSyxFQUFMLENBQVEsUUFBUixFQUFrQixhQUFLO0FBQ25CLFlBQUksS0FBSixDQUFVLGFBQVYsQ0FBd0IsSUFBeEIsQ0FBNkI7QUFDekIseUJBQWEsYUFBYSxLQUREO0FBRXpCLHFCQUFTO0FBRmdCLFNBQTdCO0FBSUgsS0FMRDtBQU1BLFdBQU8sSUFBUDtBQUNIOztBQUVELFNBQVMsU0FBVCxPQUFpQztBQUFBLFFBQWIsSUFBYSxRQUFiLElBQWE7QUFBQSxRQUFQLElBQU8sUUFBUCxJQUFPOztBQUM3QixhQUFTLFlBQVksc0JBQUcsRUFBQyxpQkFBZSxJQUFmLGNBQTRCLElBQTdCLEVBQUgsQ0FBWixDQUFUO0FBQ0giLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJTVBPUlQgQVNTRVRTXHJcbmltcG9ydCAnLi4vY3NzL0FwcC5zY3NzJ1xyXG5pbXBvcnQgaW8gZnJvbSAnc29ja2V0LmlvLWNsaWVudCdcclxuXHJcbmltcG9ydCBFbG0gZnJvbSAnLi4vLi4vc3JjL01haW4uZWxtJ1xyXG5cclxuY29uc3QgbWVzc2FnZVR5cGVzID0ge1xyXG4gICAgZW1wdHk6IDAsXHJcbiAgICBqb2luOiAxLFxyXG4gICAgd2VsY29tZTogMixcclxuICAgIHVwZGF0ZTogMyxcclxuICAgIGRlbHRhOiA0XHJcbn1cclxuXHJcbmNvbnN0IGFwcCA9IEVsbS5NYWluLmZ1bGxzY3JlZW4oe1xyXG4gICAgaW5ib3VuZFNvY2tldDoge1xyXG4gICAgICAgIG1lc3NhZ2VUeXBlOiAwLFxyXG4gICAgICAgIHBheWxvYWQ6IG51bGxcclxuICAgIH1cclxufSlcclxuXHJcbmFwcC5wb3J0cy5vdXRib3VuZFNvY2tldC5zdWJzY3JpYmUobXNnID0+IHtcclxuICAgIHN3aXRjaCAobXNnLm1lc3NhZ2VUeXBlKSB7XHJcbiAgICAgICAgY2FzZSBtZXNzYWdlVHlwZXMuam9pbjogc3RhcnRHYW1lKG1zZy5wYXlsb2FkKVxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIG1lc3NhZ2VUeXBlcy51cGRhdGU6IFxyXG4gICAgICAgICAgICBpZihzb2NrZXQpIHtcclxuICAgICAgICAgICAgICAgIHNvY2tldC5lbWl0KCd1cGRhdGVQbGF5ZXInLCBtc2cucGF5bG9hZClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgIH1cclxufSlcclxuXHJcbmxldCBzb2NrZXRcclxuXHJcbmZ1bmN0aW9uIGluaXQocykge1xyXG4gICAgcmV0dXJuIHNcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0dXBTb2NrZXQoc29jaykge1xyXG4gICAgc29jay5vbigncG9uZycsICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygncG9uZycpXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIEhhbmRsZSBlcnJvci5cclxuICAgIHNvY2sub24oJ2Nvbm5lY3RfZmFpbGVkJywgKCkgPT4ge1xyXG4gICAgICAgIHNvY2suY2xvc2UoKVxyXG4gICAgfSlcclxuXHJcbiAgICBzb2NrLm9uKCdkaXNjb25uZWN0JywgKCkgPT4ge1xyXG4gICAgICAgIHNvY2suY2xvc2UoKVxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBIYW5kbGUgY29ubmVjdGlvbi5cclxuICAgIHNvY2sub24oJ3dlbGNvbWUnLCAocykgPT4ge1xyXG4gICAgICAgIGFwcC5wb3J0cy5pbmJvdW5kU29ja2V0LnNlbmQoe1xyXG4gICAgICAgICAgICBtZXNzYWdlVHlwZTogbWVzc2FnZVR5cGVzLndlbGNvbWUsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IHNcclxuICAgICAgICB9KSAgICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIHNvY2sub24oJ3VwZGF0ZScsIHMgPT4ge1xyXG4gICAgICAgIGFwcC5wb3J0cy5pbmJvdW5kU29ja2V0LnNlbmQoe1xyXG4gICAgICAgICAgICBtZXNzYWdlVHlwZTogbWVzc2FnZVR5cGVzLmRlbHRhLFxyXG4gICAgICAgICAgICBwYXlsb2FkOiBzXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbiAgICByZXR1cm4gc29ja1xyXG59XHJcblxyXG5mdW5jdGlvbiBzdGFydEdhbWUoe25hbWUsIHRlYW19KSB7XHJcbiAgICBzb2NrZXQgPSBzZXR1cFNvY2tldChpbyh7cXVlcnk6IGBuYW1lPSR7bmFtZX0mdGVhbT0ke3RlYW19YH0pKVxyXG59XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2pzL21haW4uanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 29 */
/***/ function(module, exports) {

	eval("\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2JhY2tvMi9pbmRleC5qcz85OTVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEV4cG9zZSBgQmFja29mZmAuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBCYWNrb2ZmO1xuXG4vKipcbiAqIEluaXRpYWxpemUgYmFja29mZiB0aW1lciB3aXRoIGBvcHRzYC5cbiAqXG4gKiAtIGBtaW5gIGluaXRpYWwgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgWzEwMF1cbiAqIC0gYG1heGAgbWF4IHRpbWVvdXQgWzEwMDAwXVxuICogLSBgaml0dGVyYCBbMF1cbiAqIC0gYGZhY3RvcmAgWzJdXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdHNcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gQmFja29mZihvcHRzKSB7XG4gIG9wdHMgPSBvcHRzIHx8IHt9O1xuICB0aGlzLm1zID0gb3B0cy5taW4gfHwgMTAwO1xuICB0aGlzLm1heCA9IG9wdHMubWF4IHx8IDEwMDAwO1xuICB0aGlzLmZhY3RvciA9IG9wdHMuZmFjdG9yIHx8IDI7XG4gIHRoaXMuaml0dGVyID0gb3B0cy5qaXR0ZXIgPiAwICYmIG9wdHMuaml0dGVyIDw9IDEgPyBvcHRzLmppdHRlciA6IDA7XG4gIHRoaXMuYXR0ZW1wdHMgPSAwO1xufVxuXG4vKipcbiAqIFJldHVybiB0aGUgYmFja29mZiBkdXJhdGlvbi5cbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkJhY2tvZmYucHJvdG90eXBlLmR1cmF0aW9uID0gZnVuY3Rpb24oKXtcbiAgdmFyIG1zID0gdGhpcy5tcyAqIE1hdGgucG93KHRoaXMuZmFjdG9yLCB0aGlzLmF0dGVtcHRzKyspO1xuICBpZiAodGhpcy5qaXR0ZXIpIHtcbiAgICB2YXIgcmFuZCA9ICBNYXRoLnJhbmRvbSgpO1xuICAgIHZhciBkZXZpYXRpb24gPSBNYXRoLmZsb29yKHJhbmQgKiB0aGlzLmppdHRlciAqIG1zKTtcbiAgICBtcyA9IChNYXRoLmZsb29yKHJhbmQgKiAxMCkgJiAxKSA9PSAwICA/IG1zIC0gZGV2aWF0aW9uIDogbXMgKyBkZXZpYXRpb247XG4gIH1cbiAgcmV0dXJuIE1hdGgubWluKG1zLCB0aGlzLm1heCkgfCAwO1xufTtcblxuLyoqXG4gKiBSZXNldCB0aGUgbnVtYmVyIG9mIGF0dGVtcHRzLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuQmFja29mZi5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpe1xuICB0aGlzLmF0dGVtcHRzID0gMDtcbn07XG5cbi8qKlxuICogU2V0IHRoZSBtaW5pbXVtIGR1cmF0aW9uXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5CYWNrb2ZmLnByb3RvdHlwZS5zZXRNaW4gPSBmdW5jdGlvbihtaW4pe1xuICB0aGlzLm1zID0gbWluO1xufTtcblxuLyoqXG4gKiBTZXQgdGhlIG1heGltdW0gZHVyYXRpb25cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkJhY2tvZmYucHJvdG90eXBlLnNldE1heCA9IGZ1bmN0aW9uKG1heCl7XG4gIHRoaXMubWF4ID0gbWF4O1xufTtcblxuLyoqXG4gKiBTZXQgdGhlIGppdHRlclxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuQmFja29mZi5wcm90b3R5cGUuc2V0Sml0dGVyID0gZnVuY3Rpb24oaml0dGVyKXtcbiAgdGhpcy5qaXR0ZXIgPSBqaXR0ZXI7XG59O1xuXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9iYWNrbzIvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyOVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 30 */
/***/ function(module, exports) {

	eval("/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jhc2U2NC1hcnJheWJ1ZmZlci9saWIvYmFzZTY0LWFycmF5YnVmZmVyLmpzPzMxN2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogYmFzZTY0LWFycmF5YnVmZmVyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmlrbGFzdmgvYmFzZTY0LWFycmF5YnVmZmVyXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIE5pa2xhcyB2b24gSGVydHplblxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICovXG4oZnVuY3Rpb24oY2hhcnMpe1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBleHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uKGFycmF5YnVmZmVyKSB7XG4gICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpLFxuICAgIGksIGxlbiA9IGJ5dGVzLmxlbmd0aCwgYmFzZTY0ID0gXCJcIjtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrPTMpIHtcbiAgICAgIGJhc2U2NCArPSBjaGFyc1tieXRlc1tpXSA+PiAyXTtcbiAgICAgIGJhc2U2NCArPSBjaGFyc1soKGJ5dGVzW2ldICYgMykgPDwgNCkgfCAoYnl0ZXNbaSArIDFdID4+IDQpXTtcbiAgICAgIGJhc2U2NCArPSBjaGFyc1soKGJ5dGVzW2kgKyAxXSAmIDE1KSA8PCAyKSB8IChieXRlc1tpICsgMl0gPj4gNildO1xuICAgICAgYmFzZTY0ICs9IGNoYXJzW2J5dGVzW2kgKyAyXSAmIDYzXTtcbiAgICB9XG5cbiAgICBpZiAoKGxlbiAlIDMpID09PSAyKSB7XG4gICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAxKSArIFwiPVwiO1xuICAgIH0gZWxzZSBpZiAobGVuICUgMyA9PT0gMSkge1xuICAgICAgYmFzZTY0ID0gYmFzZTY0LnN1YnN0cmluZygwLCBiYXNlNjQubGVuZ3RoIC0gMikgKyBcIj09XCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJhc2U2NDtcbiAgfTtcblxuICBleHBvcnRzLmRlY29kZSA9ICBmdW5jdGlvbihiYXNlNjQpIHtcbiAgICB2YXIgYnVmZmVyTGVuZ3RoID0gYmFzZTY0Lmxlbmd0aCAqIDAuNzUsXG4gICAgbGVuID0gYmFzZTY0Lmxlbmd0aCwgaSwgcCA9IDAsXG4gICAgZW5jb2RlZDEsIGVuY29kZWQyLCBlbmNvZGVkMywgZW5jb2RlZDQ7XG5cbiAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAxXSA9PT0gXCI9XCIpIHtcbiAgICAgIGJ1ZmZlckxlbmd0aC0tO1xuICAgICAgaWYgKGJhc2U2NFtiYXNlNjQubGVuZ3RoIC0gMl0gPT09IFwiPVwiKSB7XG4gICAgICAgIGJ1ZmZlckxlbmd0aC0tO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBhcnJheWJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXJMZW5ndGgpLFxuICAgIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSs9NCkge1xuICAgICAgZW5jb2RlZDEgPSBjaGFycy5pbmRleE9mKGJhc2U2NFtpXSk7XG4gICAgICBlbmNvZGVkMiA9IGNoYXJzLmluZGV4T2YoYmFzZTY0W2krMV0pO1xuICAgICAgZW5jb2RlZDMgPSBjaGFycy5pbmRleE9mKGJhc2U2NFtpKzJdKTtcbiAgICAgIGVuY29kZWQ0ID0gY2hhcnMuaW5kZXhPZihiYXNlNjRbaSszXSk7XG5cbiAgICAgIGJ5dGVzW3ArK10gPSAoZW5jb2RlZDEgPDwgMikgfCAoZW5jb2RlZDIgPj4gNCk7XG4gICAgICBieXRlc1twKytdID0gKChlbmNvZGVkMiAmIDE1KSA8PCA0KSB8IChlbmNvZGVkMyA+PiAyKTtcbiAgICAgIGJ5dGVzW3ArK10gPSAoKGVuY29kZWQzICYgMykgPDwgNikgfCAoZW5jb2RlZDQgJiA2Myk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5YnVmZmVyO1xuICB9O1xufSkoXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vYmFzZTY0LWFycmF5YnVmZmVyL2xpYi9iYXNlNjQtYXJyYXlidWZmZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAzMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 31 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jsb2IvaW5kZXguanM/YmE1YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlIGEgYmxvYiBidWlsZGVyIGV2ZW4gd2hlbiB2ZW5kb3IgcHJlZml4ZXMgZXhpc3RcbiAqL1xuXG52YXIgQmxvYkJ1aWxkZXIgPSBnbG9iYWwuQmxvYkJ1aWxkZXJcbiAgfHwgZ2xvYmFsLldlYktpdEJsb2JCdWlsZGVyXG4gIHx8IGdsb2JhbC5NU0Jsb2JCdWlsZGVyXG4gIHx8IGdsb2JhbC5Nb3pCbG9iQnVpbGRlcjtcblxuLyoqXG4gKiBDaGVjayBpZiBCbG9iIGNvbnN0cnVjdG9yIGlzIHN1cHBvcnRlZFxuICovXG5cbnZhciBibG9iU3VwcG9ydGVkID0gKGZ1bmN0aW9uKCkge1xuICB0cnkge1xuICAgIHZhciBhID0gbmV3IEJsb2IoWydoaSddKTtcbiAgICByZXR1cm4gYS5zaXplID09PSAyO1xuICB9IGNhdGNoKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0pKCk7XG5cbi8qKlxuICogQ2hlY2sgaWYgQmxvYiBjb25zdHJ1Y3RvciBzdXBwb3J0cyBBcnJheUJ1ZmZlclZpZXdzXG4gKiBGYWlscyBpbiBTYWZhcmkgNiwgc28gd2UgbmVlZCB0byBtYXAgdG8gQXJyYXlCdWZmZXJzIHRoZXJlLlxuICovXG5cbnZhciBibG9iU3VwcG9ydHNBcnJheUJ1ZmZlclZpZXcgPSBibG9iU3VwcG9ydGVkICYmIChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICB2YXIgYiA9IG5ldyBCbG9iKFtuZXcgVWludDhBcnJheShbMSwyXSldKTtcbiAgICByZXR1cm4gYi5zaXplID09PSAyO1xuICB9IGNhdGNoKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0pKCk7XG5cbi8qKlxuICogQ2hlY2sgaWYgQmxvYkJ1aWxkZXIgaXMgc3VwcG9ydGVkXG4gKi9cblxudmFyIGJsb2JCdWlsZGVyU3VwcG9ydGVkID0gQmxvYkJ1aWxkZXJcbiAgJiYgQmxvYkJ1aWxkZXIucHJvdG90eXBlLmFwcGVuZFxuICAmJiBCbG9iQnVpbGRlci5wcm90b3R5cGUuZ2V0QmxvYjtcblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdGhhdCBtYXBzIEFycmF5QnVmZmVyVmlld3MgdG8gQXJyYXlCdWZmZXJzXG4gKiBVc2VkIGJ5IEJsb2JCdWlsZGVyIGNvbnN0cnVjdG9yIGFuZCBvbGQgYnJvd3NlcnMgdGhhdCBkaWRuJ3RcbiAqIHN1cHBvcnQgaXQgaW4gdGhlIEJsb2IgY29uc3RydWN0b3IuXG4gKi9cblxuZnVuY3Rpb24gbWFwQXJyYXlCdWZmZXJWaWV3cyhhcnkpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnkubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgY2h1bmsgPSBhcnlbaV07XG4gICAgaWYgKGNodW5rLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICB2YXIgYnVmID0gY2h1bmsuYnVmZmVyO1xuXG4gICAgICAvLyBpZiB0aGlzIGlzIGEgc3ViYXJyYXksIG1ha2UgYSBjb3B5IHNvIHdlIG9ubHlcbiAgICAgIC8vIGluY2x1ZGUgdGhlIHN1YmFycmF5IHJlZ2lvbiBmcm9tIHRoZSB1bmRlcmx5aW5nIGJ1ZmZlclxuICAgICAgaWYgKGNodW5rLmJ5dGVMZW5ndGggIT09IGJ1Zi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHZhciBjb3B5ID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmsuYnl0ZUxlbmd0aCk7XG4gICAgICAgIGNvcHkuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZiwgY2h1bmsuYnl0ZU9mZnNldCwgY2h1bmsuYnl0ZUxlbmd0aCkpO1xuICAgICAgICBidWYgPSBjb3B5LmJ1ZmZlcjtcbiAgICAgIH1cblxuICAgICAgYXJ5W2ldID0gYnVmO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBCbG9iQnVpbGRlckNvbnN0cnVjdG9yKGFyeSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgYmIgPSBuZXcgQmxvYkJ1aWxkZXIoKTtcbiAgbWFwQXJyYXlCdWZmZXJWaWV3cyhhcnkpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJ5Lmxlbmd0aDsgaSsrKSB7XG4gICAgYmIuYXBwZW5kKGFyeVtpXSk7XG4gIH1cblxuICByZXR1cm4gKG9wdGlvbnMudHlwZSkgPyBiYi5nZXRCbG9iKG9wdGlvbnMudHlwZSkgOiBiYi5nZXRCbG9iKCk7XG59O1xuXG5mdW5jdGlvbiBCbG9iQ29uc3RydWN0b3IoYXJ5LCBvcHRpb25zKSB7XG4gIG1hcEFycmF5QnVmZmVyVmlld3MoYXJ5KTtcbiAgcmV0dXJuIG5ldyBCbG9iKGFyeSwgb3B0aW9ucyB8fCB7fSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpIHtcbiAgaWYgKGJsb2JTdXBwb3J0ZWQpIHtcbiAgICByZXR1cm4gYmxvYlN1cHBvcnRzQXJyYXlCdWZmZXJWaWV3ID8gZ2xvYmFsLkJsb2IgOiBCbG9iQ29uc3RydWN0b3I7XG4gIH0gZWxzZSBpZiAoYmxvYkJ1aWxkZXJTdXBwb3J0ZWQpIHtcbiAgICByZXR1cm4gQmxvYkJ1aWxkZXJDb25zdHJ1Y3RvcjtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59KSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vYmxvYi9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDMxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 32 */
/***/ function(module, exports) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDMyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(50);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2RlYnVnL2RlYnVnLmpzP2NkMTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQkFBaUIsU0FBUztBQUMxQiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseUNBQXlDLFNBQVM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjMzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFRoaXMgaXMgdGhlIGNvbW1vbiBsb2dpYyBmb3IgYm90aCB0aGUgTm9kZS5qcyBhbmQgd2ViIGJyb3dzZXJcbiAqIGltcGxlbWVudGF0aW9ucyBvZiBgZGVidWcoKWAuXG4gKlxuICogRXhwb3NlIGBkZWJ1ZygpYCBhcyB0aGUgbW9kdWxlLlxuICovXG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGRlYnVnO1xuZXhwb3J0cy5jb2VyY2UgPSBjb2VyY2U7XG5leHBvcnRzLmRpc2FibGUgPSBkaXNhYmxlO1xuZXhwb3J0cy5lbmFibGUgPSBlbmFibGU7XG5leHBvcnRzLmVuYWJsZWQgPSBlbmFibGVkO1xuZXhwb3J0cy5odW1hbml6ZSA9IHJlcXVpcmUoJ21zJyk7XG5cbi8qKlxuICogVGhlIGN1cnJlbnRseSBhY3RpdmUgZGVidWcgbW9kZSBuYW1lcywgYW5kIG5hbWVzIHRvIHNraXAuXG4gKi9cblxuZXhwb3J0cy5uYW1lcyA9IFtdO1xuZXhwb3J0cy5za2lwcyA9IFtdO1xuXG4vKipcbiAqIE1hcCBvZiBzcGVjaWFsIFwiJW5cIiBoYW5kbGluZyBmdW5jdGlvbnMsIGZvciB0aGUgZGVidWcgXCJmb3JtYXRcIiBhcmd1bWVudC5cbiAqXG4gKiBWYWxpZCBrZXkgbmFtZXMgYXJlIGEgc2luZ2xlLCBsb3dlcmNhc2VkIGxldHRlciwgaS5lLiBcIm5cIi5cbiAqL1xuXG5leHBvcnRzLmZvcm1hdHRlcnMgPSB7fTtcblxuLyoqXG4gKiBQcmV2aW91c2x5IGFzc2lnbmVkIGNvbG9yLlxuICovXG5cbnZhciBwcmV2Q29sb3IgPSAwO1xuXG4vKipcbiAqIFByZXZpb3VzIGxvZyB0aW1lc3RhbXAuXG4gKi9cblxudmFyIHByZXZUaW1lO1xuXG4vKipcbiAqIFNlbGVjdCBhIGNvbG9yLlxuICpcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNlbGVjdENvbG9yKCkge1xuICByZXR1cm4gZXhwb3J0cy5jb2xvcnNbcHJldkNvbG9yKysgJSBleHBvcnRzLmNvbG9ycy5sZW5ndGhdO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIGRlYnVnZ2VyIHdpdGggdGhlIGdpdmVuIGBuYW1lc3BhY2VgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZWJ1ZyhuYW1lc3BhY2UpIHtcblxuICAvLyBkZWZpbmUgdGhlIGBkaXNhYmxlZGAgdmVyc2lvblxuICBmdW5jdGlvbiBkaXNhYmxlZCgpIHtcbiAgfVxuICBkaXNhYmxlZC5lbmFibGVkID0gZmFsc2U7XG5cbiAgLy8gZGVmaW5lIHRoZSBgZW5hYmxlZGAgdmVyc2lvblxuICBmdW5jdGlvbiBlbmFibGVkKCkge1xuXG4gICAgdmFyIHNlbGYgPSBlbmFibGVkO1xuXG4gICAgLy8gc2V0IGBkaWZmYCB0aW1lc3RhbXBcbiAgICB2YXIgY3VyciA9ICtuZXcgRGF0ZSgpO1xuICAgIHZhciBtcyA9IGN1cnIgLSAocHJldlRpbWUgfHwgY3Vycik7XG4gICAgc2VsZi5kaWZmID0gbXM7XG4gICAgc2VsZi5wcmV2ID0gcHJldlRpbWU7XG4gICAgc2VsZi5jdXJyID0gY3VycjtcbiAgICBwcmV2VGltZSA9IGN1cnI7XG5cbiAgICAvLyBhZGQgdGhlIGBjb2xvcmAgaWYgbm90IHNldFxuICAgIGlmIChudWxsID09IHNlbGYudXNlQ29sb3JzKSBzZWxmLnVzZUNvbG9ycyA9IGV4cG9ydHMudXNlQ29sb3JzKCk7XG4gICAgaWYgKG51bGwgPT0gc2VsZi5jb2xvciAmJiBzZWxmLnVzZUNvbG9ycykgc2VsZi5jb2xvciA9IHNlbGVjdENvbG9yKCk7XG5cbiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICBhcmdzWzBdID0gZXhwb3J0cy5jb2VyY2UoYXJnc1swXSk7XG5cbiAgICBpZiAoJ3N0cmluZycgIT09IHR5cGVvZiBhcmdzWzBdKSB7XG4gICAgICAvLyBhbnl0aGluZyBlbHNlIGxldCdzIGluc3BlY3Qgd2l0aCAlb1xuICAgICAgYXJncyA9IFsnJW8nXS5jb25jYXQoYXJncyk7XG4gICAgfVxuXG4gICAgLy8gYXBwbHkgYW55IGBmb3JtYXR0ZXJzYCB0cmFuc2Zvcm1hdGlvbnNcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGFyZ3NbMF0gPSBhcmdzWzBdLnJlcGxhY2UoLyUoW2EteiVdKS9nLCBmdW5jdGlvbihtYXRjaCwgZm9ybWF0KSB7XG4gICAgICAvLyBpZiB3ZSBlbmNvdW50ZXIgYW4gZXNjYXBlZCAlIHRoZW4gZG9uJ3QgaW5jcmVhc2UgdGhlIGFycmF5IGluZGV4XG4gICAgICBpZiAobWF0Y2ggPT09ICclJScpIHJldHVybiBtYXRjaDtcbiAgICAgIGluZGV4Kys7XG4gICAgICB2YXIgZm9ybWF0dGVyID0gZXhwb3J0cy5mb3JtYXR0ZXJzW2Zvcm1hdF07XG4gICAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGZvcm1hdHRlcikge1xuICAgICAgICB2YXIgdmFsID0gYXJnc1tpbmRleF07XG4gICAgICAgIG1hdGNoID0gZm9ybWF0dGVyLmNhbGwoc2VsZiwgdmFsKTtcblxuICAgICAgICAvLyBub3cgd2UgbmVlZCB0byByZW1vdmUgYGFyZ3NbaW5kZXhdYCBzaW5jZSBpdCdzIGlubGluZWQgaW4gdGhlIGBmb3JtYXRgXG4gICAgICAgIGFyZ3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgaW5kZXgtLTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9KTtcblxuICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZXhwb3J0cy5mb3JtYXRBcmdzKSB7XG4gICAgICBhcmdzID0gZXhwb3J0cy5mb3JtYXRBcmdzLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICAgIH1cbiAgICB2YXIgbG9nRm4gPSBlbmFibGVkLmxvZyB8fCBleHBvcnRzLmxvZyB8fCBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgIGxvZ0ZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICB9XG4gIGVuYWJsZWQuZW5hYmxlZCA9IHRydWU7XG5cbiAgdmFyIGZuID0gZXhwb3J0cy5lbmFibGVkKG5hbWVzcGFjZSkgPyBlbmFibGVkIDogZGlzYWJsZWQ7XG5cbiAgZm4ubmFtZXNwYWNlID0gbmFtZXNwYWNlO1xuXG4gIHJldHVybiBmbjtcbn1cblxuLyoqXG4gKiBFbmFibGVzIGEgZGVidWcgbW9kZSBieSBuYW1lc3BhY2VzLiBUaGlzIGNhbiBpbmNsdWRlIG1vZGVzXG4gKiBzZXBhcmF0ZWQgYnkgYSBjb2xvbiBhbmQgd2lsZGNhcmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VzXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGVuYWJsZShuYW1lc3BhY2VzKSB7XG4gIGV4cG9ydHMuc2F2ZShuYW1lc3BhY2VzKTtcblxuICB2YXIgc3BsaXQgPSAobmFtZXNwYWNlcyB8fCAnJykuc3BsaXQoL1tcXHMsXSsvKTtcbiAgdmFyIGxlbiA9IHNwbGl0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKCFzcGxpdFtpXSkgY29udGludWU7IC8vIGlnbm9yZSBlbXB0eSBzdHJpbmdzXG4gICAgbmFtZXNwYWNlcyA9IHNwbGl0W2ldLnJlcGxhY2UoL1xcKi9nLCAnLio/Jyk7XG4gICAgaWYgKG5hbWVzcGFjZXNbMF0gPT09ICctJykge1xuICAgICAgZXhwb3J0cy5za2lwcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcy5zdWJzdHIoMSkgKyAnJCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcyArICckJykpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIERpc2FibGUgZGVidWcgb3V0cHV0LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgZXhwb3J0cy5lbmFibGUoJycpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gbW9kZSBuYW1lIGlzIGVuYWJsZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlZChuYW1lKSB7XG4gIHZhciBpLCBsZW47XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMuc2tpcHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5za2lwc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMubmFtZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5uYW1lc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIENvZXJjZSBgdmFsYC5cbiAqXG4gKiBAcGFyYW0ge01peGVkfSB2YWxcbiAqIEByZXR1cm4ge01peGVkfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29lcmNlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB2YWwuc3RhY2sgfHwgdmFsLm1lc3NhZ2U7XG4gIHJldHVybiB2YWw7XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9kZWJ1Zy9kZWJ1Zy5qc1xuICoqIG1vZHVsZSBpZCA9IDMzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 34 */
/***/ function(module, exports) {

	eval("\r\n(function() {\r\n'use strict';\r\n\r\nfunction F2(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return fun(a,b); }; }\r\n  wrapper.arity = 2;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F3(fun)\r\n{\r\n  function wrapper(a) {\r\n    return function(b) { return function(c) { return fun(a, b, c); }; };\r\n  }\r\n  wrapper.arity = 3;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F4(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return fun(a, b, c, d); }; }; };\r\n  }\r\n  wrapper.arity = 4;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F5(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\r\n  }\r\n  wrapper.arity = 5;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F6(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return fun(a, b, c, d, e, f); }; }; }; }; };\r\n  }\r\n  wrapper.arity = 6;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F7(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\r\n  }\r\n  wrapper.arity = 7;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F8(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return function(g) { return function(h) {\r\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\r\n  }\r\n  wrapper.arity = 8;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction F9(fun)\r\n{\r\n  function wrapper(a) { return function(b) { return function(c) {\r\n    return function(d) { return function(e) { return function(f) {\r\n    return function(g) { return function(h) { return function(i) {\r\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\r\n  }\r\n  wrapper.arity = 9;\r\n  wrapper.func = fun;\r\n  return wrapper;\r\n}\r\n\r\nfunction A2(fun, a, b)\r\n{\r\n  return fun.arity === 2\r\n    ? fun.func(a, b)\r\n    : fun(a)(b);\r\n}\r\nfunction A3(fun, a, b, c)\r\n{\r\n  return fun.arity === 3\r\n    ? fun.func(a, b, c)\r\n    : fun(a)(b)(c);\r\n}\r\nfunction A4(fun, a, b, c, d)\r\n{\r\n  return fun.arity === 4\r\n    ? fun.func(a, b, c, d)\r\n    : fun(a)(b)(c)(d);\r\n}\r\nfunction A5(fun, a, b, c, d, e)\r\n{\r\n  return fun.arity === 5\r\n    ? fun.func(a, b, c, d, e)\r\n    : fun(a)(b)(c)(d)(e);\r\n}\r\nfunction A6(fun, a, b, c, d, e, f)\r\n{\r\n  return fun.arity === 6\r\n    ? fun.func(a, b, c, d, e, f)\r\n    : fun(a)(b)(c)(d)(e)(f);\r\n}\r\nfunction A7(fun, a, b, c, d, e, f, g)\r\n{\r\n  return fun.arity === 7\r\n    ? fun.func(a, b, c, d, e, f, g)\r\n    : fun(a)(b)(c)(d)(e)(f)(g);\r\n}\r\nfunction A8(fun, a, b, c, d, e, f, g, h)\r\n{\r\n  return fun.arity === 8\r\n    ? fun.func(a, b, c, d, e, f, g, h)\r\n    : fun(a)(b)(c)(d)(e)(f)(g)(h);\r\n}\r\nfunction A9(fun, a, b, c, d, e, f, g, h, i)\r\n{\r\n  return fun.arity === 9\r\n    ? fun.func(a, b, c, d, e, f, g, h, i)\r\n    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\r\n}\r\n\r\n//import Native.List //\r\n\r\nvar _elm_lang$core$Native_Array = function() {\r\n\r\n// A RRB-Tree has two distinct data types.\r\n// Leaf -> \"height\"  is always 0\r\n//         \"table\"   is an array of elements\r\n// Node -> \"height\"  is always greater than 0\r\n//         \"table\"   is an array of child nodes\r\n//         \"lengths\" is an array of accumulated lengths of the child nodes\r\n\r\n// M is the maximal table size. 32 seems fast. E is the allowed increase\r\n// of search steps when concatting to find an index. Lower values will\r\n// decrease balancing, but will increase search steps.\r\nvar M = 32;\r\nvar E = 2;\r\n\r\n// An empty array.\r\nvar empty = {\r\n\tctor: '_Array',\r\n\theight: 0,\r\n\ttable: []\r\n};\r\n\r\n\r\nfunction get(i, array)\r\n{\r\n\tif (i < 0 || i >= length(array))\r\n\t{\r\n\t\tthrow new Error(\r\n\t\t\t'Index ' + i + ' is out of range. Check the length of ' +\r\n\t\t\t'your array first or use getMaybe or getWithDefault.');\r\n\t}\r\n\treturn unsafeGet(i, array);\r\n}\r\n\r\n\r\nfunction unsafeGet(i, array)\r\n{\r\n\tfor (var x = array.height; x > 0; x--)\r\n\t{\r\n\t\tvar slot = i >> (x * 5);\r\n\t\twhile (array.lengths[slot] <= i)\r\n\t\t{\r\n\t\t\tslot++;\r\n\t\t}\r\n\t\tif (slot > 0)\r\n\t\t{\r\n\t\t\ti -= array.lengths[slot - 1];\r\n\t\t}\r\n\t\tarray = array.table[slot];\r\n\t}\r\n\treturn array.table[i];\r\n}\r\n\r\n\r\n// Sets the value at the index i. Only the nodes leading to i will get\r\n// copied and updated.\r\nfunction set(i, item, array)\r\n{\r\n\tif (i < 0 || length(array) <= i)\r\n\t{\r\n\t\treturn array;\r\n\t}\r\n\treturn unsafeSet(i, item, array);\r\n}\r\n\r\n\r\nfunction unsafeSet(i, item, array)\r\n{\r\n\tarray = nodeCopy(array);\r\n\r\n\tif (array.height === 0)\r\n\t{\r\n\t\tarray.table[i] = item;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar slot = getSlot(i, array);\r\n\t\tif (slot > 0)\r\n\t\t{\r\n\t\t\ti -= array.lengths[slot - 1];\r\n\t\t}\r\n\t\tarray.table[slot] = unsafeSet(i, item, array.table[slot]);\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n\r\nfunction initialize(len, f)\r\n{\r\n\tif (len <= 0)\r\n\t{\r\n\t\treturn empty;\r\n\t}\r\n\tvar h = Math.floor( Math.log(len) / Math.log(M) );\r\n\treturn initialize_(f, h, 0, len);\r\n}\r\n\r\nfunction initialize_(f, h, from, to)\r\n{\r\n\tif (h === 0)\r\n\t{\r\n\t\tvar table = new Array((to - from) % (M + 1));\r\n\t\tfor (var i = 0; i < table.length; i++)\r\n\t\t{\r\n\t\t  table[i] = f(from + i);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: table\r\n\t\t};\r\n\t}\r\n\r\n\tvar step = Math.pow(M, h);\r\n\tvar table = new Array(Math.ceil((to - from) / step));\r\n\tvar lengths = new Array(table.length);\r\n\tfor (var i = 0; i < table.length; i++)\r\n\t{\r\n\t\ttable[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\r\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\r\n\t}\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: table,\r\n\t\tlengths: lengths\r\n\t};\r\n}\r\n\r\nfunction fromList(list)\r\n{\r\n\tif (list.ctor === '[]')\r\n\t{\r\n\t\treturn empty;\r\n\t}\r\n\r\n\t// Allocate M sized blocks (table) and write list elements to it.\r\n\tvar table = new Array(M);\r\n\tvar nodes = [];\r\n\tvar i = 0;\r\n\r\n\twhile (list.ctor !== '[]')\r\n\t{\r\n\t\ttable[i] = list._0;\r\n\t\tlist = list._1;\r\n\t\ti++;\r\n\r\n\t\t// table is full, so we can push a leaf containing it into the\r\n\t\t// next node.\r\n\t\tif (i === M)\r\n\t\t{\r\n\t\t\tvar leaf = {\r\n\t\t\t\tctor: '_Array',\r\n\t\t\t\theight: 0,\r\n\t\t\t\ttable: table\r\n\t\t\t};\r\n\t\t\tfromListPush(leaf, nodes);\r\n\t\t\ttable = new Array(M);\r\n\t\t\ti = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Maybe there is something left on the table.\r\n\tif (i > 0)\r\n\t{\r\n\t\tvar leaf = {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: table.splice(0, i)\r\n\t\t};\r\n\t\tfromListPush(leaf, nodes);\r\n\t}\r\n\r\n\t// Go through all of the nodes and eventually push them into higher nodes.\r\n\tfor (var h = 0; h < nodes.length - 1; h++)\r\n\t{\r\n\t\tif (nodes[h].table.length > 0)\r\n\t\t{\r\n\t\t\tfromListPush(nodes[h], nodes);\r\n\t\t}\r\n\t}\r\n\r\n\tvar head = nodes[nodes.length - 1];\r\n\tif (head.height > 0 && head.table.length === 1)\r\n\t{\r\n\t\treturn head.table[0];\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\n// Push a node into a higher node as a child.\r\nfunction fromListPush(toPush, nodes)\r\n{\r\n\tvar h = toPush.height;\r\n\r\n\t// Maybe the node on this height does not exist.\r\n\tif (nodes.length === h)\r\n\t{\r\n\t\tvar node = {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: h + 1,\r\n\t\t\ttable: [],\r\n\t\t\tlengths: []\r\n\t\t};\r\n\t\tnodes.push(node);\r\n\t}\r\n\r\n\tnodes[h].table.push(toPush);\r\n\tvar len = length(toPush);\r\n\tif (nodes[h].lengths.length > 0)\r\n\t{\r\n\t\tlen += nodes[h].lengths[nodes[h].lengths.length - 1];\r\n\t}\r\n\tnodes[h].lengths.push(len);\r\n\r\n\tif (nodes[h].table.length === M)\r\n\t{\r\n\t\tfromListPush(nodes[h], nodes);\r\n\t\tnodes[h] = {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: h + 1,\r\n\t\t\ttable: [],\r\n\t\t\tlengths: []\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Pushes an item via push_ to the bottom right of a tree.\r\nfunction push(item, a)\r\n{\r\n\tvar pushed = push_(item, a);\r\n\tif (pushed !== null)\r\n\t{\r\n\t\treturn pushed;\r\n\t}\r\n\r\n\tvar newTree = create(item, a.height);\r\n\treturn siblise(a, newTree);\r\n}\r\n\r\n// Recursively tries to push an item to the bottom-right most\r\n// tree possible. If there is no space left for the item,\r\n// null will be returned.\r\nfunction push_(item, a)\r\n{\r\n\t// Handle resursion stop at leaf level.\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tif (a.table.length < M)\r\n\t\t{\r\n\t\t\tvar newA = {\r\n\t\t\t\tctor: '_Array',\r\n\t\t\t\theight: 0,\r\n\t\t\t\ttable: a.table.slice()\r\n\t\t\t};\r\n\t\t\tnewA.table.push(item);\r\n\t\t\treturn newA;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t  return null;\r\n\t\t}\r\n\t}\r\n\r\n\t// Recursively push\r\n\tvar pushed = push_(item, botRight(a));\r\n\r\n\t// There was space in the bottom right tree, so the slot will\r\n\t// be updated.\r\n\tif (pushed !== null)\r\n\t{\r\n\t\tvar newA = nodeCopy(a);\r\n\t\tnewA.table[newA.table.length - 1] = pushed;\r\n\t\tnewA.lengths[newA.lengths.length - 1]++;\r\n\t\treturn newA;\r\n\t}\r\n\r\n\t// When there was no space left, check if there is space left\r\n\t// for a new slot with a tree which contains only the item\r\n\t// at the bottom.\r\n\tif (a.table.length < M)\r\n\t{\r\n\t\tvar newSlot = create(item, a.height - 1);\r\n\t\tvar newA = nodeCopy(a);\r\n\t\tnewA.table.push(newSlot);\r\n\t\tnewA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\r\n\t\treturn newA;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// Converts an array into a list of elements.\r\nfunction toList(a)\r\n{\r\n\treturn toList_(_elm_lang$core$Native_List.Nil, a);\r\n}\r\n\r\nfunction toList_(list, a)\r\n{\r\n\tfor (var i = a.table.length - 1; i >= 0; i--)\r\n\t{\r\n\t\tlist =\r\n\t\t\ta.height === 0\r\n\t\t\t\t? _elm_lang$core$Native_List.Cons(a.table[i], list)\r\n\t\t\t\t: toList_(list, a.table[i]);\r\n\t}\r\n\treturn list;\r\n}\r\n\r\n// Maps a function over the elements of an array.\r\nfunction map(f, a)\r\n{\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: new Array(a.table.length)\r\n\t};\r\n\tif (a.height > 0)\r\n\t{\r\n\t\tnewA.lengths = a.lengths;\r\n\t}\r\n\tfor (var i = 0; i < a.table.length; i++)\r\n\t{\r\n\t\tnewA.table[i] =\r\n\t\t\ta.height === 0\r\n\t\t\t\t? f(a.table[i])\r\n\t\t\t\t: map(f, a.table[i]);\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\n// Maps a function over the elements with their index as first argument.\r\nfunction indexedMap(f, a)\r\n{\r\n\treturn indexedMap_(f, a, 0);\r\n}\r\n\r\nfunction indexedMap_(f, a, from)\r\n{\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: new Array(a.table.length)\r\n\t};\r\n\tif (a.height > 0)\r\n\t{\r\n\t\tnewA.lengths = a.lengths;\r\n\t}\r\n\tfor (var i = 0; i < a.table.length; i++)\r\n\t{\r\n\t\tnewA.table[i] =\r\n\t\t\ta.height === 0\r\n\t\t\t\t? A2(f, from + i, a.table[i])\r\n\t\t\t\t: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\nfunction foldl(f, b, a)\r\n{\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tfor (var i = 0; i < a.table.length; i++)\r\n\t\t{\r\n\t\t\tb = A2(f, a.table[i], b);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (var i = 0; i < a.table.length; i++)\r\n\t\t{\r\n\t\t\tb = foldl(f, b, a.table[i]);\r\n\t\t}\r\n\t}\r\n\treturn b;\r\n}\r\n\r\nfunction foldr(f, b, a)\r\n{\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tfor (var i = a.table.length; i--; )\r\n\t\t{\r\n\t\t\tb = A2(f, a.table[i], b);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (var i = a.table.length; i--; )\r\n\t\t{\r\n\t\t\tb = foldr(f, b, a.table[i]);\r\n\t\t}\r\n\t}\r\n\treturn b;\r\n}\r\n\r\n// TODO: currently, it slices the right, then the left. This can be\r\n// optimized.\r\nfunction slice(from, to, a)\r\n{\r\n\tif (from < 0)\r\n\t{\r\n\t\tfrom += length(a);\r\n\t}\r\n\tif (to < 0)\r\n\t{\r\n\t\tto += length(a);\r\n\t}\r\n\treturn sliceLeft(from, sliceRight(to, a));\r\n}\r\n\r\nfunction sliceRight(to, a)\r\n{\r\n\tif (to === length(a))\r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\r\n\t// Handle leaf level.\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tvar newA = { ctor:'_Array', height:0 };\r\n\t\tnewA.table = a.table.slice(0, to);\r\n\t\treturn newA;\r\n\t}\r\n\r\n\t// Slice the right recursively.\r\n\tvar right = getSlot(to, a);\r\n\tvar sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\r\n\r\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\r\n\tif (right === 0)\r\n\t{\r\n\t\treturn sliced;\r\n\t}\r\n\r\n\t// Create new node.\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: a.table.slice(0, right),\r\n\t\tlengths: a.lengths.slice(0, right)\r\n\t};\r\n\tif (sliced.table.length > 0)\r\n\t{\r\n\t\tnewA.table[right] = sliced;\r\n\t\tnewA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\nfunction sliceLeft(from, a)\r\n{\r\n\tif (from === 0)\r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\r\n\t// Handle leaf level.\r\n\tif (a.height === 0)\r\n\t{\r\n\t\tvar newA = { ctor:'_Array', height:0 };\r\n\t\tnewA.table = a.table.slice(from, a.table.length + 1);\r\n\t\treturn newA;\r\n\t}\r\n\r\n\t// Slice the left recursively.\r\n\tvar left = getSlot(from, a);\r\n\tvar sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\r\n\r\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\r\n\tif (left === a.table.length - 1)\r\n\t{\r\n\t\treturn sliced;\r\n\t}\r\n\r\n\t// Create new node.\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: a.table.slice(left, a.table.length + 1),\r\n\t\tlengths: new Array(a.table.length - left)\r\n\t};\r\n\tnewA.table[0] = sliced;\r\n\tvar len = 0;\r\n\tfor (var i = 0; i < newA.table.length; i++)\r\n\t{\r\n\t\tlen += length(newA.table[i]);\r\n\t\tnewA.lengths[i] = len;\r\n\t}\r\n\r\n\treturn newA;\r\n}\r\n\r\n// Appends two trees.\r\nfunction append(a,b)\r\n{\r\n\tif (a.table.length === 0)\r\n\t{\r\n\t\treturn b;\r\n\t}\r\n\tif (b.table.length === 0)\r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\r\n\tvar c = append_(a, b);\r\n\r\n\t// Check if both nodes can be crunshed together.\r\n\tif (c[0].table.length + c[1].table.length <= M)\r\n\t{\r\n\t\tif (c[0].table.length === 0)\r\n\t\t{\r\n\t\t\treturn c[1];\r\n\t\t}\r\n\t\tif (c[1].table.length === 0)\r\n\t\t{\r\n\t\t\treturn c[0];\r\n\t\t}\r\n\r\n\t\t// Adjust .table and .lengths\r\n\t\tc[0].table = c[0].table.concat(c[1].table);\r\n\t\tif (c[0].height > 0)\r\n\t\t{\r\n\t\t\tvar len = length(c[0]);\r\n\t\t\tfor (var i = 0; i < c[1].lengths.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc[1].lengths[i] += len;\r\n\t\t\t}\r\n\t\t\tc[0].lengths = c[0].lengths.concat(c[1].lengths);\r\n\t\t}\r\n\r\n\t\treturn c[0];\r\n\t}\r\n\r\n\tif (c[0].height > 0)\r\n\t{\r\n\t\tvar toRemove = calcToRemove(a, b);\r\n\t\tif (toRemove > E)\r\n\t\t{\r\n\t\t\tc = shuffle(c[0], c[1], toRemove);\r\n\t\t}\r\n\t}\r\n\r\n\treturn siblise(c[0], c[1]);\r\n}\r\n\r\n// Returns an array of two nodes; right and left. One node _may_ be empty.\r\nfunction append_(a, b)\r\n{\r\n\tif (a.height === 0 && b.height === 0)\r\n\t{\r\n\t\treturn [a, b];\r\n\t}\r\n\r\n\tif (a.height !== 1 || b.height !== 1)\r\n\t{\r\n\t\tif (a.height === b.height)\r\n\t\t{\r\n\t\t\ta = nodeCopy(a);\r\n\t\t\tb = nodeCopy(b);\r\n\t\t\tvar appended = append_(botRight(a), botLeft(b));\r\n\r\n\t\t\tinsertRight(a, appended[1]);\r\n\t\t\tinsertLeft(b, appended[0]);\r\n\t\t}\r\n\t\telse if (a.height > b.height)\r\n\t\t{\r\n\t\t\ta = nodeCopy(a);\r\n\t\t\tvar appended = append_(botRight(a), b);\r\n\r\n\t\t\tinsertRight(a, appended[0]);\r\n\t\t\tb = parentise(appended[1], appended[1].height + 1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tb = nodeCopy(b);\r\n\t\t\tvar appended = append_(a, botLeft(b));\r\n\r\n\t\t\tvar left = appended[0].table.length === 0 ? 0 : 1;\r\n\t\t\tvar right = left === 0 ? 1 : 0;\r\n\t\t\tinsertLeft(b, appended[left]);\r\n\t\t\ta = parentise(appended[right], appended[right].height + 1);\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if balancing is needed and return based on that.\r\n\tif (a.table.length === 0 || b.table.length === 0)\r\n\t{\r\n\t\treturn [a, b];\r\n\t}\r\n\r\n\tvar toRemove = calcToRemove(a, b);\r\n\tif (toRemove <= E)\r\n\t{\r\n\t\treturn [a, b];\r\n\t}\r\n\treturn shuffle(a, b, toRemove);\r\n}\r\n\r\n// Helperfunctions for append_. Replaces a child node at the side of the parent.\r\nfunction insertRight(parent, node)\r\n{\r\n\tvar index = parent.table.length - 1;\r\n\tparent.table[index] = node;\r\n\tparent.lengths[index] = length(node);\r\n\tparent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\r\n}\r\n\r\nfunction insertLeft(parent, node)\r\n{\r\n\tif (node.table.length > 0)\r\n\t{\r\n\t\tparent.table[0] = node;\r\n\t\tparent.lengths[0] = length(node);\r\n\r\n\t\tvar len = length(parent.table[0]);\r\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\r\n\t\t{\r\n\t\t\tlen += length(parent.table[i]);\r\n\t\t\tparent.lengths[i] = len;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tparent.table.shift();\r\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\r\n\t\t{\r\n\t\t\tparent.lengths[i] = parent.lengths[i] - parent.lengths[0];\r\n\t\t}\r\n\t\tparent.lengths.shift();\r\n\t}\r\n}\r\n\r\n// Returns the extra search steps for E. Refer to the paper.\r\nfunction calcToRemove(a, b)\r\n{\r\n\tvar subLengths = 0;\r\n\tfor (var i = 0; i < a.table.length; i++)\r\n\t{\r\n\t\tsubLengths += a.table[i].table.length;\r\n\t}\r\n\tfor (var i = 0; i < b.table.length; i++)\r\n\t{\r\n\t\tsubLengths += b.table[i].table.length;\r\n\t}\r\n\r\n\tvar toRemove = a.table.length + b.table.length;\r\n\treturn toRemove - (Math.floor((subLengths - 1) / M) + 1);\r\n}\r\n\r\n// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\r\nfunction get2(a, b, index)\r\n{\r\n\treturn index < a.length\r\n\t\t? a[index]\r\n\t\t: b[index - a.length];\r\n}\r\n\r\nfunction set2(a, b, index, value)\r\n{\r\n\tif (index < a.length)\r\n\t{\r\n\t\ta[index] = value;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tb[index - a.length] = value;\r\n\t}\r\n}\r\n\r\nfunction saveSlot(a, b, index, slot)\r\n{\r\n\tset2(a.table, b.table, index, slot);\r\n\r\n\tvar l = (index === 0 || index === a.lengths.length)\r\n\t\t? 0\r\n\t\t: get2(a.lengths, a.lengths, index - 1);\r\n\r\n\tset2(a.lengths, b.lengths, index, l + length(slot));\r\n}\r\n\r\n// Creates a node or leaf with a given length at their arrays for perfomance.\r\n// Is only used by shuffle.\r\nfunction createNode(h, length)\r\n{\r\n\tif (length < 0)\r\n\t{\r\n\t\tlength = 0;\r\n\t}\r\n\tvar a = {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: new Array(length)\r\n\t};\r\n\tif (h > 0)\r\n\t{\r\n\t\ta.lengths = new Array(length);\r\n\t}\r\n\treturn a;\r\n}\r\n\r\n// Returns an array of two balanced nodes.\r\nfunction shuffle(a, b, toRemove)\r\n{\r\n\tvar newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\r\n\tvar newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\r\n\r\n\t// Skip the slots with size M. More precise: copy the slot references\r\n\t// to the new node\r\n\tvar read = 0;\r\n\twhile (get2(a.table, b.table, read).table.length % M === 0)\r\n\t{\r\n\t\tset2(newA.table, newB.table, read, get2(a.table, b.table, read));\r\n\t\tset2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\r\n\t\tread++;\r\n\t}\r\n\r\n\t// Pulling items from left to right, caching in a slot before writing\r\n\t// it into the new nodes.\r\n\tvar write = read;\r\n\tvar slot = new createNode(a.height - 1, 0);\r\n\tvar from = 0;\r\n\r\n\t// If the current slot is still containing data, then there will be at\r\n\t// least one more write, so we do not break this loop yet.\r\n\twhile (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\r\n\t{\r\n\t\t// Find out the max possible items for copying.\r\n\t\tvar source = get2(a.table, b.table, read);\r\n\t\tvar to = Math.min(M - slot.table.length, source.table.length);\r\n\r\n\t\t// Copy and adjust size table.\r\n\t\tslot.table = slot.table.concat(source.table.slice(from, to));\r\n\t\tif (slot.height > 0)\r\n\t\t{\r\n\t\t\tvar len = slot.lengths.length;\r\n\t\t\tfor (var i = len; i < len + to - from; i++)\r\n\t\t\t{\r\n\t\t\t\tslot.lengths[i] = length(slot.table[i]);\r\n\t\t\t\tslot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfrom += to;\r\n\r\n\t\t// Only proceed to next slots[i] if the current one was\r\n\t\t// fully copied.\r\n\t\tif (source.table.length <= to)\r\n\t\t{\r\n\t\t\tread++; from = 0;\r\n\t\t}\r\n\r\n\t\t// Only create a new slot if the current one is filled up.\r\n\t\tif (slot.table.length === M)\r\n\t\t{\r\n\t\t\tsaveSlot(newA, newB, write, slot);\r\n\t\t\tslot = createNode(a.height - 1, 0);\r\n\t\t\twrite++;\r\n\t\t}\r\n\t}\r\n\r\n\t// Cleanup after the loop. Copy the last slot into the new nodes.\r\n\tif (slot.table.length > 0)\r\n\t{\r\n\t\tsaveSlot(newA, newB, write, slot);\r\n\t\twrite++;\r\n\t}\r\n\r\n\t// Shift the untouched slots to the left\r\n\twhile (read < a.table.length + b.table.length )\r\n\t{\r\n\t\tsaveSlot(newA, newB, write, get2(a.table, b.table, read));\r\n\t\tread++;\r\n\t\twrite++;\r\n\t}\r\n\r\n\treturn [newA, newB];\r\n}\r\n\r\n// Navigation functions\r\nfunction botRight(a)\r\n{\r\n\treturn a.table[a.table.length - 1];\r\n}\r\nfunction botLeft(a)\r\n{\r\n\treturn a.table[0];\r\n}\r\n\r\n// Copies a node for updating. Note that you should not use this if\r\n// only updating only one of \"table\" or \"lengths\" for performance reasons.\r\nfunction nodeCopy(a)\r\n{\r\n\tvar newA = {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height,\r\n\t\ttable: a.table.slice()\r\n\t};\r\n\tif (a.height > 0)\r\n\t{\r\n\t\tnewA.lengths = a.lengths.slice();\r\n\t}\r\n\treturn newA;\r\n}\r\n\r\n// Returns how many items are in the tree.\r\nfunction length(array)\r\n{\r\n\tif (array.height === 0)\r\n\t{\r\n\t\treturn array.table.length;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn array.lengths[array.lengths.length - 1];\r\n\t}\r\n}\r\n\r\n// Calculates in which slot of \"table\" the item probably is, then\r\n// find the exact slot via forward searching in  \"lengths\". Returns the index.\r\nfunction getSlot(i, a)\r\n{\r\n\tvar slot = i >> (5 * a.height);\r\n\twhile (a.lengths[slot] <= i)\r\n\t{\r\n\t\tslot++;\r\n\t}\r\n\treturn slot;\r\n}\r\n\r\n// Recursively creates a tree with a given height containing\r\n// only the given item.\r\nfunction create(item, h)\r\n{\r\n\tif (h === 0)\r\n\t{\r\n\t\treturn {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: [item]\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: [create(item, h - 1)],\r\n\t\tlengths: [1]\r\n\t};\r\n}\r\n\r\n// Recursively creates a tree that contains the given tree.\r\nfunction parentise(tree, h)\r\n{\r\n\tif (h === tree.height)\r\n\t{\r\n\t\treturn tree;\r\n\t}\r\n\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: [parentise(tree, h - 1)],\r\n\t\tlengths: [length(tree)]\r\n\t};\r\n}\r\n\r\n// Emphasizes blood brotherhood beneath two trees.\r\nfunction siblise(a, b)\r\n{\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: a.height + 1,\r\n\t\ttable: [a, b],\r\n\t\tlengths: [length(a), length(a) + length(b)]\r\n\t};\r\n}\r\n\r\nfunction toJSArray(a)\r\n{\r\n\tvar jsArray = new Array(length(a));\r\n\ttoJSArray_(jsArray, 0, a);\r\n\treturn jsArray;\r\n}\r\n\r\nfunction toJSArray_(jsArray, i, a)\r\n{\r\n\tfor (var t = 0; t < a.table.length; t++)\r\n\t{\r\n\t\tif (a.height === 0)\r\n\t\t{\r\n\t\t\tjsArray[i + t] = a.table[t];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar inc = t === 0 ? 0 : a.lengths[t - 1];\r\n\t\t\ttoJSArray_(jsArray, i + inc, a.table[t]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction fromJSArray(jsArray)\r\n{\r\n\tif (jsArray.length === 0)\r\n\t{\r\n\t\treturn empty;\r\n\t}\r\n\tvar h = Math.floor(Math.log(jsArray.length) / Math.log(M));\r\n\treturn fromJSArray_(jsArray, h, 0, jsArray.length);\r\n}\r\n\r\nfunction fromJSArray_(jsArray, h, from, to)\r\n{\r\n\tif (h === 0)\r\n\t{\r\n\t\treturn {\r\n\t\t\tctor: '_Array',\r\n\t\t\theight: 0,\r\n\t\t\ttable: jsArray.slice(from, to)\r\n\t\t};\r\n\t}\r\n\r\n\tvar step = Math.pow(M, h);\r\n\tvar table = new Array(Math.ceil((to - from) / step));\r\n\tvar lengths = new Array(table.length);\r\n\tfor (var i = 0; i < table.length; i++)\r\n\t{\r\n\t\ttable[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\r\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\r\n\t}\r\n\treturn {\r\n\t\tctor: '_Array',\r\n\t\theight: h,\r\n\t\ttable: table,\r\n\t\tlengths: lengths\r\n\t};\r\n}\r\n\r\nreturn {\r\n\tempty: empty,\r\n\tfromList: fromList,\r\n\ttoList: toList,\r\n\tinitialize: F2(initialize),\r\n\tappend: F2(append),\r\n\tpush: F2(push),\r\n\tslice: F3(slice),\r\n\tget: F2(get),\r\n\tset: F3(set),\r\n\tmap: F2(map),\r\n\tindexedMap: F2(indexedMap),\r\n\tfoldl: F3(foldl),\r\n\tfoldr: F3(foldr),\r\n\tlength: length,\r\n\r\n\ttoJSArray: toJSArray,\r\n\tfromJSArray: fromJSArray\r\n};\r\n\r\n}();\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Basics = function() {\r\n\r\nfunction div(a, b)\r\n{\r\n\treturn (a / b) | 0;\r\n}\r\nfunction rem(a, b)\r\n{\r\n\treturn a % b;\r\n}\r\nfunction mod(a, b)\r\n{\r\n\tif (b === 0)\r\n\t{\r\n\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\r\n\t}\r\n\tvar r = a % b;\r\n\tvar m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\r\n\r\n\treturn m === b ? 0 : m;\r\n}\r\nfunction logBase(base, n)\r\n{\r\n\treturn Math.log(n) / Math.log(base);\r\n}\r\nfunction negate(n)\r\n{\r\n\treturn -n;\r\n}\r\nfunction abs(n)\r\n{\r\n\treturn n < 0 ? -n : n;\r\n}\r\n\r\nfunction min(a, b)\r\n{\r\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;\r\n}\r\nfunction max(a, b)\r\n{\r\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;\r\n}\r\nfunction clamp(lo, hi, n)\r\n{\r\n\treturn _elm_lang$core$Native_Utils.cmp(n, lo) < 0\r\n\t\t? lo\r\n\t\t: _elm_lang$core$Native_Utils.cmp(n, hi) > 0\r\n\t\t\t? hi\r\n\t\t\t: n;\r\n}\r\n\r\nvar ord = ['LT', 'EQ', 'GT'];\r\n\r\nfunction compare(x, y)\r\n{\r\n\treturn { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };\r\n}\r\n\r\nfunction xor(a, b)\r\n{\r\n\treturn a !== b;\r\n}\r\nfunction not(b)\r\n{\r\n\treturn !b;\r\n}\r\nfunction isInfinite(n)\r\n{\r\n\treturn n === Infinity || n === -Infinity;\r\n}\r\n\r\nfunction truncate(n)\r\n{\r\n\treturn n | 0;\r\n}\r\n\r\nfunction degrees(d)\r\n{\r\n\treturn d * Math.PI / 180;\r\n}\r\nfunction turns(t)\r\n{\r\n\treturn 2 * Math.PI * t;\r\n}\r\nfunction fromPolar(point)\r\n{\r\n\tvar r = point._0;\r\n\tvar t = point._1;\r\n\treturn _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\r\n}\r\nfunction toPolar(point)\r\n{\r\n\tvar x = point._0;\r\n\tvar y = point._1;\r\n\treturn _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\r\n}\r\n\r\nreturn {\r\n\tdiv: F2(div),\r\n\trem: F2(rem),\r\n\tmod: F2(mod),\r\n\r\n\tpi: Math.PI,\r\n\te: Math.E,\r\n\tcos: Math.cos,\r\n\tsin: Math.sin,\r\n\ttan: Math.tan,\r\n\tacos: Math.acos,\r\n\tasin: Math.asin,\r\n\tatan: Math.atan,\r\n\tatan2: F2(Math.atan2),\r\n\r\n\tdegrees: degrees,\r\n\tturns: turns,\r\n\tfromPolar: fromPolar,\r\n\ttoPolar: toPolar,\r\n\r\n\tsqrt: Math.sqrt,\r\n\tlogBase: F2(logBase),\r\n\tnegate: negate,\r\n\tabs: abs,\r\n\tmin: F2(min),\r\n\tmax: F2(max),\r\n\tclamp: F3(clamp),\r\n\tcompare: F2(compare),\r\n\r\n\txor: F2(xor),\r\n\tnot: not,\r\n\r\n\ttruncate: truncate,\r\n\tceiling: Math.ceil,\r\n\tfloor: Math.floor,\r\n\tround: Math.round,\r\n\ttoFloat: function(x) { return x; },\r\n\tisNaN: isNaN,\r\n\tisInfinite: isInfinite\r\n};\r\n\r\n}();\r\n//import //\r\n\r\nvar _elm_lang$core$Native_Utils = function() {\r\n\r\n// COMPARISONS\r\n\r\nfunction eq(rootX, rootY)\r\n{\r\n\tvar stack = [{ x: rootX, y: rootY }];\r\n\twhile (stack.length > 0)\r\n\t{\r\n\t\tvar front = stack.pop();\r\n\t\tvar x = front.x;\r\n\t\tvar y = front.y;\r\n\t\tif (x === y)\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (typeof x === 'object')\r\n\t\t{\r\n\t\t\tvar c = 0;\r\n\t\t\tfor (var key in x)\r\n\t\t\t{\r\n\t\t\t\t++c;\r\n\t\t\t\tif (!(key in y))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (key === 'ctor')\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tstack.push({ x: x[key], y: y[key] });\r\n\t\t\t}\r\n\t\t\tif ('ctor' in x)\r\n\t\t\t{\r\n\t\t\t\tstack.push({ x: x.ctor, y: y.ctor});\r\n\t\t\t}\r\n\t\t\tif (c !== Object.keys(y).length)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof x === 'function')\r\n\t\t{\r\n\t\t\tthrow new Error('Equality error: general function equality is ' +\r\n\t\t\t\t\t\t\t'undecidable, and therefore, unsupported');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\r\n// the particular integer values assigned to LT, EQ, and GT.\r\n\r\nvar LT = -1, EQ = 0, GT = 1;\r\n\r\nfunction cmp(x, y)\r\n{\r\n\tvar ord;\r\n\tif (typeof x !== 'object')\r\n\t{\r\n\t\treturn x === y ? EQ : x < y ? LT : GT;\r\n\t}\r\n\telse if (x instanceof String)\r\n\t{\r\n\t\tvar a = x.valueOf();\r\n\t\tvar b = y.valueOf();\r\n\t\treturn a === b\r\n\t\t\t? EQ\r\n\t\t\t: a < b\r\n\t\t\t\t? LT\r\n\t\t\t\t: GT;\r\n\t}\r\n\telse if (x.ctor === '::' || x.ctor === '[]')\r\n\t{\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tif (x.ctor === '[]' && y.ctor === '[]')\r\n\t\t\t{\r\n\t\t\t\treturn EQ;\r\n\t\t\t}\r\n\t\t\tif (x.ctor !== y.ctor)\r\n\t\t\t{\r\n\t\t\t\treturn x.ctor === '[]' ? LT : GT;\r\n\t\t\t}\r\n\t\t\tord = cmp(x._0, y._0);\r\n\t\t\tif (ord !== EQ)\r\n\t\t\t{\r\n\t\t\t\treturn ord;\r\n\t\t\t}\r\n\t\t\tx = x._1;\r\n\t\t\ty = y._1;\r\n\t\t}\r\n\t}\r\n\telse if (x.ctor.slice(0, 6) === '_Tuple')\r\n\t{\r\n\t\tvar n = x.ctor.slice(6) - 0;\r\n\t\tvar err = 'cannot compare tuples with more than 6 elements.';\r\n\t\tif (n === 0) return EQ;\r\n\t\tif (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\r\n\t\tif (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\r\n\t\tif (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\r\n\t\tif (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\r\n\t\tif (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\r\n\t\tif (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\r\n\t\tif (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\r\n\t\treturn EQ;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthrow new Error('Comparison error: comparison is only defined on ints, ' +\r\n\t\t\t\t\t\t'floats, times, chars, strings, lists of comparable values, ' +\r\n\t\t\t\t\t\t'and tuples of comparable values.');\r\n\t}\r\n}\r\n\r\n\r\n// COMMON VALUES\r\n\r\nvar Tuple0 = {\r\n\tctor: '_Tuple0'\r\n};\r\n\r\nfunction Tuple2(x, y)\r\n{\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: x,\r\n\t\t_1: y\r\n\t};\r\n}\r\n\r\nfunction chr(c)\r\n{\r\n\treturn new String(c);\r\n}\r\n\r\n\r\n// GUID\r\n\r\nvar count = 0;\r\nfunction guid(_)\r\n{\r\n\treturn count++;\r\n}\r\n\r\n\r\n// RECORDS\r\n\r\nfunction update(oldRecord, updatedFields)\r\n{\r\n\tvar newRecord = {};\r\n\tfor (var key in oldRecord)\r\n\t{\r\n\t\tvar value = (key in updatedFields) ? updatedFields[key] : oldRecord[key];\r\n\t\tnewRecord[key] = value;\r\n\t}\r\n\treturn newRecord;\r\n}\r\n\r\n\r\n//// LIST STUFF ////\r\n\r\nvar Nil = { ctor: '[]' };\r\n\r\nfunction Cons(hd, tl)\r\n{\r\n\treturn {\r\n\t\tctor: '::',\r\n\t\t_0: hd,\r\n\t\t_1: tl\r\n\t};\r\n}\r\n\r\nfunction append(xs, ys)\r\n{\r\n\t// append Strings\r\n\tif (typeof xs === 'string')\r\n\t{\r\n\t\treturn xs + ys;\r\n\t}\r\n\r\n\t// append Lists\r\n\tif (xs.ctor === '[]')\r\n\t{\r\n\t\treturn ys;\r\n\t}\r\n\tvar root = Cons(xs._0, Nil);\r\n\tvar curr = root;\r\n\txs = xs._1;\r\n\twhile (xs.ctor !== '[]')\r\n\t{\r\n\t\tcurr._1 = Cons(xs._0, Nil);\r\n\t\txs = xs._1;\r\n\t\tcurr = curr._1;\r\n\t}\r\n\tcurr._1 = ys;\r\n\treturn root;\r\n}\r\n\r\n\r\n// CRASHES\r\n\r\nfunction crash(moduleName, region)\r\n{\r\n\treturn function(message) {\r\n\t\tthrow new Error(\r\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\\n'\r\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\r\n\t\t\t+ message\r\n\t\t);\r\n\t};\r\n}\r\n\r\nfunction crashCase(moduleName, region, value)\r\n{\r\n\treturn function(message) {\r\n\t\tthrow new Error(\r\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '`\\n\\n'\r\n\t\t\t+ 'This was caused by the `case` expression ' + regionToString(region) + '.\\n'\r\n\t\t\t+ 'One of the branches ended with a crash and the following value got through:\\n\\n    ' + toString(value) + '\\n\\n'\r\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\r\n\t\t\t+ message\r\n\t\t);\r\n\t};\r\n}\r\n\r\nfunction regionToString(region)\r\n{\r\n\tif (region.start.line == region.end.line)\r\n\t{\r\n\t\treturn 'on line ' + region.start.line;\r\n\t}\r\n\treturn 'between lines ' + region.start.line + ' and ' + region.end.line;\r\n}\r\n\r\n\r\n// TO STRING\r\n\r\nfunction toString(v)\r\n{\r\n\tvar type = typeof v;\r\n\tif (type === 'function')\r\n\t{\r\n\t\tvar name = v.func ? v.func.name : v.name;\r\n\t\treturn '<function' + (name === '' ? '' : ':') + name + '>';\r\n\t}\r\n\r\n\tif (type === 'boolean')\r\n\t{\r\n\t\treturn v ? 'True' : 'False';\r\n\t}\r\n\r\n\tif (type === 'number')\r\n\t{\r\n\t\treturn v + '';\r\n\t}\r\n\r\n\tif (v instanceof String)\r\n\t{\r\n\t\treturn '\\'' + addSlashes(v, true) + '\\'';\r\n\t}\r\n\r\n\tif (type === 'string')\r\n\t{\r\n\t\treturn '\"' + addSlashes(v, false) + '\"';\r\n\t}\r\n\r\n\tif (v === null)\r\n\t{\r\n\t\treturn 'null';\r\n\t}\r\n\r\n\tif (type === 'object' && 'ctor' in v)\r\n\t{\r\n\t\tvar ctorStarter = v.ctor.substring(0, 5);\r\n\r\n\t\tif (ctorStarter === '_Tupl')\r\n\t\t{\r\n\t\t\tvar output = [];\r\n\t\t\tfor (var k in v)\r\n\t\t\t{\r\n\t\t\t\tif (k === 'ctor') continue;\r\n\t\t\t\toutput.push(toString(v[k]));\r\n\t\t\t}\r\n\t\t\treturn '(' + output.join(',') + ')';\r\n\t\t}\r\n\r\n\t\tif (ctorStarter === '_Task')\r\n\t\t{\r\n\t\t\treturn '<task>'\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '_Array')\r\n\t\t{\r\n\t\t\tvar list = _elm_lang$core$Array$toList(v);\r\n\t\t\treturn 'Array.fromList ' + toString(list);\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '<decoder>')\r\n\t\t{\r\n\t\t\treturn '<decoder>';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '_Process')\r\n\t\t{\r\n\t\t\treturn '<process:' + v.id + '>';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '::')\r\n\t\t{\r\n\t\t\tvar output = '[' + toString(v._0);\r\n\t\t\tv = v._1;\r\n\t\t\twhile (v.ctor === '::')\r\n\t\t\t{\r\n\t\t\t\toutput += ',' + toString(v._0);\r\n\t\t\t\tv = v._1;\r\n\t\t\t}\r\n\t\t\treturn output + ']';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === '[]')\r\n\t\t{\r\n\t\t\treturn '[]';\r\n\t\t}\r\n\r\n\t\tif (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin' || v.ctor === 'Set_elm_builtin')\r\n\t\t{\r\n\t\t\tvar name, list;\r\n\t\t\tif (v.ctor === 'Set_elm_builtin')\r\n\t\t\t{\r\n\t\t\t\tname = 'Set';\r\n\t\t\t\tlist = A2(\r\n\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\tfunction(x) {return x._0; },\r\n\t\t\t\t\t_elm_lang$core$Dict$toList(v._0)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tname = 'Dict';\r\n\t\t\t\tlist = _elm_lang$core$Dict$toList(v);\r\n\t\t\t}\r\n\t\t\treturn name + '.fromList ' + toString(list);\r\n\t\t}\r\n\r\n\t\tvar output = '';\r\n\t\tfor (var i in v)\r\n\t\t{\r\n\t\t\tif (i === 'ctor') continue;\r\n\t\t\tvar str = toString(v[i]);\r\n\t\t\tvar c0 = str[0];\r\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\r\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\r\n\t\t}\r\n\t\treturn v.ctor + output;\r\n\t}\r\n\r\n\tif (type === 'object')\r\n\t{\r\n\t\tvar output = [];\r\n\t\tfor (var k in v)\r\n\t\t{\r\n\t\t\toutput.push(k + ' = ' + toString(v[k]));\r\n\t\t}\r\n\t\tif (output.length === 0)\r\n\t\t{\r\n\t\t\treturn '{}';\r\n\t\t}\r\n\t\treturn '{ ' + output.join(', ') + ' }';\r\n\t}\r\n\r\n\treturn '<internal structure>';\r\n}\r\n\r\nfunction addSlashes(str, isChar)\r\n{\r\n\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\r\n\t\t\t  .replace(/\\n/g, '\\\\n')\r\n\t\t\t  .replace(/\\t/g, '\\\\t')\r\n\t\t\t  .replace(/\\r/g, '\\\\r')\r\n\t\t\t  .replace(/\\v/g, '\\\\v')\r\n\t\t\t  .replace(/\\0/g, '\\\\0');\r\n\tif (isChar)\r\n\t{\r\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\r\n\t}\r\n}\r\n\r\n\r\nreturn {\r\n\teq: eq,\r\n\tcmp: cmp,\r\n\tTuple0: Tuple0,\r\n\tTuple2: Tuple2,\r\n\tchr: chr,\r\n\tupdate: update,\r\n\tguid: guid,\r\n\r\n\tappend: F2(append),\r\n\r\n\tcrash: crash,\r\n\tcrashCase: crashCase,\r\n\r\n\ttoString: toString\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Basics$uncurry = F2(\r\n\tfunction (f, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn A2(f, _p1._0, _p1._1);\r\n\t});\r\nvar _elm_lang$core$Basics$curry = F3(\r\n\tfunction (f, a, b) {\r\n\t\treturn f(\r\n\t\t\t{ctor: '_Tuple2', _0: a, _1: b});\r\n\t});\r\nvar _elm_lang$core$Basics$flip = F3(\r\n\tfunction (f, b, a) {\r\n\t\treturn A2(f, a, b);\r\n\t});\r\nvar _elm_lang$core$Basics$snd = function (_p2) {\r\n\tvar _p3 = _p2;\r\n\treturn _p3._1;\r\n};\r\nvar _elm_lang$core$Basics$fst = function (_p4) {\r\n\tvar _p5 = _p4;\r\n\treturn _p5._0;\r\n};\r\nvar _elm_lang$core$Basics$always = F2(\r\n\tfunction (a, _p6) {\r\n\t\treturn a;\r\n\t});\r\nvar _elm_lang$core$Basics$identity = function (x) {\r\n\treturn x;\r\n};\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<|'] = F2(\r\n\tfunction (f, x) {\r\n\t\treturn f(x);\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['|>'] = F2(\r\n\tfunction (x, f) {\r\n\t\treturn f(x);\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['>>'] = F3(\r\n\tfunction (f, g, x) {\r\n\t\treturn g(\r\n\t\t\tf(x));\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<<'] = F3(\r\n\tfunction (g, f, x) {\r\n\t\treturn g(\r\n\t\t\tf(x));\r\n\t});\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;\r\nvar _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;\r\nvar _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;\r\nvar _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;\r\nvar _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;\r\nvar _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;\r\nvar _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;\r\nvar _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;\r\nvar _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;\r\nvar _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;\r\nvar _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;\r\nvar _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;\r\nvar _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;\r\nvar _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;\r\nvar _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;\r\nvar _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;\r\nvar _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;\r\nvar _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;\r\nvar _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;\r\nvar _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;\r\nvar _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;\r\nvar _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;\r\nvar _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;\r\nvar _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;\r\nvar _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;\r\nvar _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;\r\nvar _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;\r\nvar _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;\r\nvar _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;\r\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\r\n_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;\r\nvar _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;\r\nvar _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;\r\nvar _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;\r\nvar _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;\r\nvar _elm_lang$core$Basics$radians = function (t) {\r\n\treturn t;\r\n};\r\nvar _elm_lang$core$Basics$GT = {ctor: 'GT'};\r\nvar _elm_lang$core$Basics$EQ = {ctor: 'EQ'};\r\nvar _elm_lang$core$Basics$LT = {ctor: 'LT'};\r\nvar _elm_lang$core$Basics$Never = function (a) {\r\n\treturn {ctor: 'Never', _0: a};\r\n};\r\n\r\nvar _elm_lang$core$Maybe$withDefault = F2(\r\n\tfunction ($default, maybe) {\r\n\t\tvar _p0 = maybe;\r\n\t\tif (_p0.ctor === 'Just') {\r\n\t\t\treturn _p0._0;\r\n\t\t} else {\r\n\t\t\treturn $default;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};\r\nvar _elm_lang$core$Maybe$oneOf = function (maybes) {\r\n\toneOf:\r\n\twhile (true) {\r\n\t\tvar _p1 = maybes;\r\n\t\tif (_p1.ctor === '[]') {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t} else {\r\n\t\t\tvar _p3 = _p1._0;\r\n\t\t\tvar _p2 = _p3;\r\n\t\t\tif (_p2.ctor === 'Nothing') {\r\n\t\t\t\tvar _v3 = _p1._1;\r\n\t\t\t\tmaybes = _v3;\r\n\t\t\t\tcontinue oneOf;\r\n\t\t\t} else {\r\n\t\t\t\treturn _p3;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nvar _elm_lang$core$Maybe$andThen = F2(\r\n\tfunction (maybeValue, callback) {\r\n\t\tvar _p4 = maybeValue;\r\n\t\tif (_p4.ctor === 'Just') {\r\n\t\t\treturn callback(_p4._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$Just = function (a) {\r\n\treturn {ctor: 'Just', _0: a};\r\n};\r\nvar _elm_lang$core$Maybe$map = F2(\r\n\tfunction (f, maybe) {\r\n\t\tvar _p5 = maybe;\r\n\t\tif (_p5.ctor === 'Just') {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tf(_p5._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map2 = F3(\r\n\tfunction (func, ma, mb) {\r\n\t\tvar _p6 = {ctor: '_Tuple2', _0: ma, _1: mb};\r\n\t\tif (((_p6.ctor === '_Tuple2') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA2(func, _p6._0._0, _p6._1._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map3 = F4(\r\n\tfunction (func, ma, mb, mc) {\r\n\t\tvar _p7 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};\r\n\t\tif ((((_p7.ctor === '_Tuple3') && (_p7._0.ctor === 'Just')) && (_p7._1.ctor === 'Just')) && (_p7._2.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA3(func, _p7._0._0, _p7._1._0, _p7._2._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map4 = F5(\r\n\tfunction (func, ma, mb, mc, md) {\r\n\t\tvar _p8 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};\r\n\t\tif (((((_p8.ctor === '_Tuple4') && (_p8._0.ctor === 'Just')) && (_p8._1.ctor === 'Just')) && (_p8._2.ctor === 'Just')) && (_p8._3.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA4(func, _p8._0._0, _p8._1._0, _p8._2._0, _p8._3._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Maybe$map5 = F6(\r\n\tfunction (func, ma, mb, mc, md, me) {\r\n\t\tvar _p9 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};\r\n\t\tif ((((((_p9.ctor === '_Tuple5') && (_p9._0.ctor === 'Just')) && (_p9._1.ctor === 'Just')) && (_p9._2.ctor === 'Just')) && (_p9._3.ctor === 'Just')) && (_p9._4.ctor === 'Just')) {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA5(func, _p9._0._0, _p9._1._0, _p9._2._0, _p9._3._0, _p9._4._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t});\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_List = function() {\r\n\r\nvar Nil = { ctor: '[]' };\r\n\r\nfunction Cons(hd, tl)\r\n{\r\n\treturn { ctor: '::', _0: hd, _1: tl };\r\n}\r\n\r\nfunction fromArray(arr)\r\n{\r\n\tvar out = Nil;\r\n\tfor (var i = arr.length; i--; )\r\n\t{\r\n\t\tout = Cons(arr[i], out);\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nfunction toArray(xs)\r\n{\r\n\tvar out = [];\r\n\twhile (xs.ctor !== '[]')\r\n\t{\r\n\t\tout.push(xs._0);\r\n\t\txs = xs._1;\r\n\t}\r\n\treturn out;\r\n}\r\n\r\n\r\nfunction range(lo, hi)\r\n{\r\n\tvar list = Nil;\r\n\tif (lo <= hi)\r\n\t{\r\n\t\tdo\r\n\t\t{\r\n\t\t\tlist = Cons(hi, list);\r\n\t\t}\r\n\t\twhile (hi-- > lo);\r\n\t}\r\n\treturn list;\r\n}\r\n\r\nfunction foldr(f, b, xs)\r\n{\r\n\tvar arr = toArray(xs);\r\n\tvar acc = b;\r\n\tfor (var i = arr.length; i--; )\r\n\t{\r\n\t\tacc = A2(f, arr[i], acc);\r\n\t}\r\n\treturn acc;\r\n}\r\n\r\nfunction map2(f, xs, ys)\r\n{\r\n\tvar arr = [];\r\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A2(f, xs._0, ys._0));\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction map3(f, xs, ys, zs)\r\n{\r\n\tvar arr = [];\r\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A3(f, xs._0, ys._0, zs._0));\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t\tzs = zs._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction map4(f, ws, xs, ys, zs)\r\n{\r\n\tvar arr = [];\r\n\twhile (   ws.ctor !== '[]'\r\n\t\t   && xs.ctor !== '[]'\r\n\t\t   && ys.ctor !== '[]'\r\n\t\t   && zs.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\r\n\t\tws = ws._1;\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t\tzs = zs._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction map5(f, vs, ws, xs, ys, zs)\r\n{\r\n\tvar arr = [];\r\n\twhile (   vs.ctor !== '[]'\r\n\t\t   && ws.ctor !== '[]'\r\n\t\t   && xs.ctor !== '[]'\r\n\t\t   && ys.ctor !== '[]'\r\n\t\t   && zs.ctor !== '[]')\r\n\t{\r\n\t\tarr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\r\n\t\tvs = vs._1;\r\n\t\tws = ws._1;\r\n\t\txs = xs._1;\r\n\t\tys = ys._1;\r\n\t\tzs = zs._1;\r\n\t}\r\n\treturn fromArray(arr);\r\n}\r\n\r\nfunction sortBy(f, xs)\r\n{\r\n\treturn fromArray(toArray(xs).sort(function(a, b) {\r\n\t\treturn _elm_lang$core$Native_Utils.cmp(f(a), f(b));\r\n\t}));\r\n}\r\n\r\nfunction sortWith(f, xs)\r\n{\r\n\treturn fromArray(toArray(xs).sort(function(a, b) {\r\n\t\tvar ord = f(a)(b).ctor;\r\n\t\treturn ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\r\n\t}));\r\n}\r\n\r\nreturn {\r\n\tNil: Nil,\r\n\tCons: Cons,\r\n\tcons: F2(Cons),\r\n\ttoArray: toArray,\r\n\tfromArray: fromArray,\r\n\trange: range,\r\n\r\n\tfoldr: F3(foldr),\r\n\r\n\tmap2: F3(map2),\r\n\tmap3: F4(map3),\r\n\tmap4: F5(map4),\r\n\tmap5: F6(map5),\r\n\tsortBy: F2(sortBy),\r\n\tsortWith: F2(sortWith)\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;\r\nvar _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;\r\nvar _elm_lang$core$List$sort = function (xs) {\r\n\treturn A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);\r\n};\r\nvar _elm_lang$core$List$drop = F2(\r\n\tfunction (n, list) {\r\n\t\tdrop:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\t\treturn list;\r\n\t\t\t} else {\r\n\t\t\t\tvar _p0 = list;\r\n\t\t\t\tif (_p0.ctor === '[]') {\r\n\t\t\t\t\treturn list;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v1 = n - 1,\r\n\t\t\t\t\t\t_v2 = _p0._1;\r\n\t\t\t\t\tn = _v1;\r\n\t\t\t\t\tlist = _v2;\r\n\t\t\t\t\tcontinue drop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;\r\nvar _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;\r\nvar _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;\r\nvar _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;\r\nvar _elm_lang$core$List$any = F2(\r\n\tfunction (isOkay, list) {\r\n\t\tany:\r\n\t\twhile (true) {\r\n\t\t\tvar _p1 = list;\r\n\t\t\tif (_p1.ctor === '[]') {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tif (isOkay(_p1._0)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _v4 = isOkay,\r\n\t\t\t\t\t\t_v5 = _p1._1;\r\n\t\t\t\t\tisOkay = _v4;\r\n\t\t\t\t\tlist = _v5;\r\n\t\t\t\t\tcontinue any;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$all = F2(\r\n\tfunction (isOkay, list) {\r\n\t\treturn _elm_lang$core$Basics$not(\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$List$any,\r\n\t\t\t\tfunction (_p2) {\r\n\t\t\t\t\treturn _elm_lang$core$Basics$not(\r\n\t\t\t\t\t\tisOkay(_p2));\r\n\t\t\t\t},\r\n\t\t\t\tlist));\r\n\t});\r\nvar _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;\r\nvar _elm_lang$core$List$foldl = F3(\r\n\tfunction (func, acc, list) {\r\n\t\tfoldl:\r\n\t\twhile (true) {\r\n\t\t\tvar _p3 = list;\r\n\t\t\tif (_p3.ctor === '[]') {\r\n\t\t\t\treturn acc;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v7 = func,\r\n\t\t\t\t\t_v8 = A2(func, _p3._0, acc),\r\n\t\t\t\t\t_v9 = _p3._1;\r\n\t\t\t\tfunc = _v7;\r\n\t\t\t\tacc = _v8;\r\n\t\t\t\tlist = _v9;\r\n\t\t\t\tcontinue foldl;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$length = function (xs) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (_p4, i) {\r\n\t\t\t\treturn i + 1;\r\n\t\t\t}),\r\n\t\t0,\r\n\t\txs);\r\n};\r\nvar _elm_lang$core$List$sum = function (numbers) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (x, y) {\r\n\t\t\t\treturn x + y;\r\n\t\t\t}),\r\n\t\t0,\r\n\t\tnumbers);\r\n};\r\nvar _elm_lang$core$List$product = function (numbers) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (x, y) {\r\n\t\t\t\treturn x * y;\r\n\t\t\t}),\r\n\t\t1,\r\n\t\tnumbers);\r\n};\r\nvar _elm_lang$core$List$maximum = function (list) {\r\n\tvar _p5 = list;\r\n\tif (_p5.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$minimum = function (list) {\r\n\tvar _p6 = list;\r\n\tif (_p6.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$indexedMap = F2(\r\n\tfunction (f, xs) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$map2,\r\n\t\t\tf,\r\n\t\t\t_elm_lang$core$Native_List.range(\r\n\t\t\t\t0,\r\n\t\t\t\t_elm_lang$core$List$length(xs) - 1),\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$member = F2(\r\n\tfunction (x, xs) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$List$any,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn _elm_lang$core$Native_Utils.eq(a, x);\r\n\t\t\t},\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$isEmpty = function (xs) {\r\n\tvar _p7 = xs;\r\n\tif (_p7.ctor === '[]') {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$tail = function (list) {\r\n\tvar _p8 = list;\r\n\tif (_p8.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(_p8._1);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List$head = function (list) {\r\n\tvar _p9 = list;\r\n\tif (_p9.ctor === '::') {\r\n\t\treturn _elm_lang$core$Maybe$Just(_p9._0);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};\r\n_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;\r\nvar _elm_lang$core$List$map = F2(\r\n\tfunction (f, xs) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (x, acc) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$List_ops['::'],\r\n\t\t\t\t\t\tf(x),\r\n\t\t\t\t\t\tacc);\r\n\t\t\t\t}),\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]),\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$filter = F2(\r\n\tfunction (pred, xs) {\r\n\t\tvar conditionalCons = F2(\r\n\t\t\tfunction (x, xs$) {\r\n\t\t\t\treturn pred(x) ? A2(_elm_lang$core$List_ops['::'], x, xs$) : xs$;\r\n\t\t\t});\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tconditionalCons,\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]),\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$maybeCons = F3(\r\n\tfunction (f, mx, xs) {\r\n\t\tvar _p10 = f(mx);\r\n\t\tif (_p10.ctor === 'Just') {\r\n\t\t\treturn A2(_elm_lang$core$List_ops['::'], _p10._0, xs);\r\n\t\t} else {\r\n\t\t\treturn xs;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$filterMap = F2(\r\n\tfunction (f, xs) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t_elm_lang$core$List$maybeCons(f),\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]),\r\n\t\t\txs);\r\n\t});\r\nvar _elm_lang$core$List$reverse = function (list) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (x, y) {\r\n\t\t\t\treturn A2(_elm_lang$core$List_ops['::'], x, y);\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\tlist);\r\n};\r\nvar _elm_lang$core$List$scanl = F3(\r\n\tfunction (f, b, xs) {\r\n\t\tvar scan1 = F2(\r\n\t\t\tfunction (x, accAcc) {\r\n\t\t\t\tvar _p11 = accAcc;\r\n\t\t\t\tif (_p11.ctor === '::') {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$List_ops['::'],\r\n\t\t\t\t\t\tA2(f, x, _p11._0),\r\n\t\t\t\t\t\taccAcc);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn _elm_lang$core$List$reverse(\r\n\t\t\tA3(\r\n\t\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\t\tscan1,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[b]),\r\n\t\t\t\txs));\r\n\t});\r\nvar _elm_lang$core$List$append = F2(\r\n\tfunction (xs, ys) {\r\n\t\tvar _p12 = ys;\r\n\t\tif (_p12.ctor === '[]') {\r\n\t\t\treturn xs;\r\n\t\t} else {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\tF2(\r\n\t\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\t\treturn A2(_elm_lang$core$List_ops['::'], x, y);\r\n\t\t\t\t\t}),\r\n\t\t\t\tys,\r\n\t\t\t\txs);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$concat = function (lists) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldr,\r\n\t\t_elm_lang$core$List$append,\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\tlists);\r\n};\r\nvar _elm_lang$core$List$concatMap = F2(\r\n\tfunction (f, list) {\r\n\t\treturn _elm_lang$core$List$concat(\r\n\t\t\tA2(_elm_lang$core$List$map, f, list));\r\n\t});\r\nvar _elm_lang$core$List$partition = F2(\r\n\tfunction (pred, list) {\r\n\t\tvar step = F2(\r\n\t\t\tfunction (x, _p13) {\r\n\t\t\t\tvar _p14 = _p13;\r\n\t\t\t\tvar _p16 = _p14._0;\r\n\t\t\t\tvar _p15 = _p14._1;\r\n\t\t\t\treturn pred(x) ? {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A2(_elm_lang$core$List_ops['::'], x, _p16),\r\n\t\t\t\t\t_1: _p15\r\n\t\t\t\t} : {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _p16,\r\n\t\t\t\t\t_1: A2(_elm_lang$core$List_ops['::'], x, _p15)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tstep,\r\n\t\t\t{\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[]),\r\n\t\t\t\t_1: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[])\r\n\t\t\t},\r\n\t\t\tlist);\r\n\t});\r\nvar _elm_lang$core$List$unzip = function (pairs) {\r\n\tvar step = F2(\r\n\t\tfunction (_p18, _p17) {\r\n\t\t\tvar _p19 = _p18;\r\n\t\t\tvar _p20 = _p17;\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: A2(_elm_lang$core$List_ops['::'], _p19._0, _p20._0),\r\n\t\t\t\t_1: A2(_elm_lang$core$List_ops['::'], _p19._1, _p20._1)\r\n\t\t\t};\r\n\t\t});\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldr,\r\n\t\tstep,\r\n\t\t{\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]),\r\n\t\t\t_1: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[])\r\n\t\t},\r\n\t\tpairs);\r\n};\r\nvar _elm_lang$core$List$intersperse = F2(\r\n\tfunction (sep, xs) {\r\n\t\tvar _p21 = xs;\r\n\t\tif (_p21.ctor === '[]') {\r\n\t\t\treturn _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]);\r\n\t\t} else {\r\n\t\t\tvar step = F2(\r\n\t\t\t\tfunction (x, rest) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$List_ops['::'],\r\n\t\t\t\t\t\tsep,\r\n\t\t\t\t\t\tA2(_elm_lang$core$List_ops['::'], x, rest));\r\n\t\t\t\t});\r\n\t\t\tvar spersed = A3(\r\n\t\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\t\tstep,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[]),\r\n\t\t\t\t_p21._1);\r\n\t\t\treturn A2(_elm_lang$core$List_ops['::'], _p21._0, spersed);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$take = F2(\r\n\tfunction (n, list) {\r\n\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\treturn _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]);\r\n\t\t} else {\r\n\t\t\tvar _p22 = list;\r\n\t\t\tif (_p22.ctor === '[]') {\r\n\t\t\t\treturn list;\r\n\t\t\t} else {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$List_ops['::'],\r\n\t\t\t\t\t_p22._0,\r\n\t\t\t\t\tA2(_elm_lang$core$List$take, n - 1, _p22._1));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$repeatHelp = F3(\r\n\tfunction (result, n, value) {\r\n\t\trepeatHelp:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\r\n\t\t\t\treturn result;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v23 = A2(_elm_lang$core$List_ops['::'], value, result),\r\n\t\t\t\t\t_v24 = n - 1,\r\n\t\t\t\t\t_v25 = value;\r\n\t\t\t\tresult = _v23;\r\n\t\t\t\tn = _v24;\r\n\t\t\t\tvalue = _v25;\r\n\t\t\t\tcontinue repeatHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$List$repeat = F2(\r\n\tfunction (n, value) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$repeatHelp,\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]),\r\n\t\t\tn,\r\n\t\t\tvalue);\r\n\t});\r\n\r\nvar _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;\r\nvar _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;\r\nvar _elm_lang$core$Array$isEmpty = function (array) {\r\n\treturn _elm_lang$core$Native_Utils.eq(\r\n\t\t_elm_lang$core$Array$length(array),\r\n\t\t0);\r\n};\r\nvar _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;\r\nvar _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;\r\nvar _elm_lang$core$Array$get = F2(\r\n\tfunction (i, array) {\r\n\t\treturn ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(\r\n\t\t\ti,\r\n\t\t\t_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(\r\n\t\t\tA2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;\r\n\t});\r\nvar _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;\r\nvar _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;\r\nvar _elm_lang$core$Array$filter = F2(\r\n\tfunction (isOkay, arr) {\r\n\t\tvar update = F2(\r\n\t\t\tfunction (x, xs) {\r\n\t\t\t\treturn isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;\r\n\t\t\t});\r\n\t\treturn A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);\r\n\t});\r\nvar _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;\r\nvar _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;\r\nvar _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;\r\nvar _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;\r\nvar _elm_lang$core$Array$toIndexedList = function (array) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$map2,\r\n\t\tF2(\r\n\t\t\tfunction (v0, v1) {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Native_List.range(\r\n\t\t\t0,\r\n\t\t\t_elm_lang$core$Native_Array.length(array) - 1),\r\n\t\t_elm_lang$core$Native_Array.toList(array));\r\n};\r\nvar _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;\r\nvar _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;\r\nvar _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;\r\nvar _elm_lang$core$Array$repeat = F2(\r\n\tfunction (n, e) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Array$initialize,\r\n\t\t\tn,\r\n\t\t\t_elm_lang$core$Basics$always(e));\r\n\t});\r\nvar _elm_lang$core$Array$Array = {ctor: 'Array'};\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Char = function() {\r\n\r\nreturn {\r\n\tfromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },\r\n\ttoCode: function(c) { return c.charCodeAt(0); },\r\n\ttoUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },\r\n\ttoLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },\r\n\ttoLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },\r\n\ttoLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;\r\nvar _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;\r\nvar _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;\r\nvar _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;\r\nvar _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;\r\nvar _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;\r\nvar _elm_lang$core$Char$isBetween = F3(\r\n\tfunction (low, high, $char) {\r\n\t\tvar code = _elm_lang$core$Char$toCode($char);\r\n\t\treturn (_elm_lang$core$Native_Utils.cmp(\r\n\t\t\tcode,\r\n\t\t\t_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(\r\n\t\t\tcode,\r\n\t\t\t_elm_lang$core$Char$toCode(high)) < 1);\r\n\t});\r\nvar _elm_lang$core$Char$isUpper = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('A'),\r\n\t_elm_lang$core$Native_Utils.chr('Z'));\r\nvar _elm_lang$core$Char$isLower = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('a'),\r\n\t_elm_lang$core$Native_Utils.chr('z'));\r\nvar _elm_lang$core$Char$isDigit = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('0'),\r\n\t_elm_lang$core$Native_Utils.chr('9'));\r\nvar _elm_lang$core$Char$isOctDigit = A2(\r\n\t_elm_lang$core$Char$isBetween,\r\n\t_elm_lang$core$Native_Utils.chr('0'),\r\n\t_elm_lang$core$Native_Utils.chr('7'));\r\nvar _elm_lang$core$Char$isHexDigit = function ($char) {\r\n\treturn _elm_lang$core$Char$isDigit($char) || (A3(\r\n\t\t_elm_lang$core$Char$isBetween,\r\n\t\t_elm_lang$core$Native_Utils.chr('a'),\r\n\t\t_elm_lang$core$Native_Utils.chr('f'),\r\n\t\t$char) || A3(\r\n\t\t_elm_lang$core$Char$isBetween,\r\n\t\t_elm_lang$core$Native_Utils.chr('A'),\r\n\t\t_elm_lang$core$Native_Utils.chr('F'),\r\n\t\t$char));\r\n};\r\n\r\nvar _elm_lang$core$Color$fmod = F2(\r\n\tfunction (f, n) {\r\n\t\tvar integer = _elm_lang$core$Basics$floor(f);\r\n\t\treturn (_elm_lang$core$Basics$toFloat(\r\n\t\t\tA2(_elm_lang$core$Basics_ops['%'], integer, n)) + f) - _elm_lang$core$Basics$toFloat(integer);\r\n\t});\r\nvar _elm_lang$core$Color$rgbToHsl = F3(\r\n\tfunction (red, green, blue) {\r\n\t\tvar b = _elm_lang$core$Basics$toFloat(blue) / 255;\r\n\t\tvar g = _elm_lang$core$Basics$toFloat(green) / 255;\r\n\t\tvar r = _elm_lang$core$Basics$toFloat(red) / 255;\r\n\t\tvar cMax = A2(\r\n\t\t\t_elm_lang$core$Basics$max,\r\n\t\t\tA2(_elm_lang$core$Basics$max, r, g),\r\n\t\t\tb);\r\n\t\tvar cMin = A2(\r\n\t\t\t_elm_lang$core$Basics$min,\r\n\t\t\tA2(_elm_lang$core$Basics$min, r, g),\r\n\t\t\tb);\r\n\t\tvar c = cMax - cMin;\r\n\t\tvar lightness = (cMax + cMin) / 2;\r\n\t\tvar saturation = _elm_lang$core$Native_Utils.eq(lightness, 0) ? 0 : (c / (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)));\r\n\t\tvar hue = _elm_lang$core$Basics$degrees(60) * (_elm_lang$core$Native_Utils.eq(cMax, r) ? A2(_elm_lang$core$Color$fmod, (g - b) / c, 6) : (_elm_lang$core$Native_Utils.eq(cMax, g) ? (((b - r) / c) + 2) : (((r - g) / c) + 4)));\r\n\t\treturn {ctor: '_Tuple3', _0: hue, _1: saturation, _2: lightness};\r\n\t});\r\nvar _elm_lang$core$Color$hslToRgb = F3(\r\n\tfunction (hue, saturation, lightness) {\r\n\t\tvar hue$ = hue / _elm_lang$core$Basics$degrees(60);\r\n\t\tvar chroma = (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)) * saturation;\r\n\t\tvar x = chroma * (1 - _elm_lang$core$Basics$abs(\r\n\t\t\tA2(_elm_lang$core$Color$fmod, hue$, 2) - 1));\r\n\t\tvar _p0 = (_elm_lang$core$Native_Utils.cmp(hue$, 0) < 0) ? {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(hue$, 1) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: x, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(hue$, 2) < 0) ? {ctor: '_Tuple3', _0: x, _1: chroma, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(hue$, 3) < 0) ? {ctor: '_Tuple3', _0: 0, _1: chroma, _2: x} : ((_elm_lang$core$Native_Utils.cmp(hue$, 4) < 0) ? {ctor: '_Tuple3', _0: 0, _1: x, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(hue$, 5) < 0) ? {ctor: '_Tuple3', _0: x, _1: 0, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(hue$, 6) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: 0, _2: x} : {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0}))))));\r\n\t\tvar r = _p0._0;\r\n\t\tvar g = _p0._1;\r\n\t\tvar b = _p0._2;\r\n\t\tvar m = lightness - (chroma / 2);\r\n\t\treturn {ctor: '_Tuple3', _0: r + m, _1: g + m, _2: b + m};\r\n\t});\r\nvar _elm_lang$core$Color$toRgb = function (color) {\r\n\tvar _p1 = color;\r\n\tif (_p1.ctor === 'RGBA') {\r\n\t\treturn {red: _p1._0, green: _p1._1, blue: _p1._2, alpha: _p1._3};\r\n\t} else {\r\n\t\tvar _p2 = A3(_elm_lang$core$Color$hslToRgb, _p1._0, _p1._1, _p1._2);\r\n\t\tvar r = _p2._0;\r\n\t\tvar g = _p2._1;\r\n\t\tvar b = _p2._2;\r\n\t\treturn {\r\n\t\t\tred: _elm_lang$core$Basics$round(255 * r),\r\n\t\t\tgreen: _elm_lang$core$Basics$round(255 * g),\r\n\t\t\tblue: _elm_lang$core$Basics$round(255 * b),\r\n\t\t\talpha: _p1._3\r\n\t\t};\r\n\t}\r\n};\r\nvar _elm_lang$core$Color$toHsl = function (color) {\r\n\tvar _p3 = color;\r\n\tif (_p3.ctor === 'HSLA') {\r\n\t\treturn {hue: _p3._0, saturation: _p3._1, lightness: _p3._2, alpha: _p3._3};\r\n\t} else {\r\n\t\tvar _p4 = A3(_elm_lang$core$Color$rgbToHsl, _p3._0, _p3._1, _p3._2);\r\n\t\tvar h = _p4._0;\r\n\t\tvar s = _p4._1;\r\n\t\tvar l = _p4._2;\r\n\t\treturn {hue: h, saturation: s, lightness: l, alpha: _p3._3};\r\n\t}\r\n};\r\nvar _elm_lang$core$Color$HSLA = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {ctor: 'HSLA', _0: a, _1: b, _2: c, _3: d};\r\n\t});\r\nvar _elm_lang$core$Color$hsla = F4(\r\n\tfunction (hue, saturation, lightness, alpha) {\r\n\t\treturn A4(\r\n\t\t\t_elm_lang$core$Color$HSLA,\r\n\t\t\thue - _elm_lang$core$Basics$turns(\r\n\t\t\t\t_elm_lang$core$Basics$toFloat(\r\n\t\t\t\t\t_elm_lang$core$Basics$floor(hue / (2 * _elm_lang$core$Basics$pi)))),\r\n\t\t\tsaturation,\r\n\t\t\tlightness,\r\n\t\t\talpha);\r\n\t});\r\nvar _elm_lang$core$Color$hsl = F3(\r\n\tfunction (hue, saturation, lightness) {\r\n\t\treturn A4(_elm_lang$core$Color$hsla, hue, saturation, lightness, 1);\r\n\t});\r\nvar _elm_lang$core$Color$complement = function (color) {\r\n\tvar _p5 = color;\r\n\tif (_p5.ctor === 'HSLA') {\r\n\t\treturn A4(\r\n\t\t\t_elm_lang$core$Color$hsla,\r\n\t\t\t_p5._0 + _elm_lang$core$Basics$degrees(180),\r\n\t\t\t_p5._1,\r\n\t\t\t_p5._2,\r\n\t\t\t_p5._3);\r\n\t} else {\r\n\t\tvar _p6 = A3(_elm_lang$core$Color$rgbToHsl, _p5._0, _p5._1, _p5._2);\r\n\t\tvar h = _p6._0;\r\n\t\tvar s = _p6._1;\r\n\t\tvar l = _p6._2;\r\n\t\treturn A4(\r\n\t\t\t_elm_lang$core$Color$hsla,\r\n\t\t\th + _elm_lang$core$Basics$degrees(180),\r\n\t\t\ts,\r\n\t\t\tl,\r\n\t\t\t_p5._3);\r\n\t}\r\n};\r\nvar _elm_lang$core$Color$grayscale = function (p) {\r\n\treturn A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);\r\n};\r\nvar _elm_lang$core$Color$greyscale = function (p) {\r\n\treturn A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);\r\n};\r\nvar _elm_lang$core$Color$RGBA = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {ctor: 'RGBA', _0: a, _1: b, _2: c, _3: d};\r\n\t});\r\nvar _elm_lang$core$Color$rgba = _elm_lang$core$Color$RGBA;\r\nvar _elm_lang$core$Color$rgb = F3(\r\n\tfunction (r, g, b) {\r\n\t\treturn A4(_elm_lang$core$Color$RGBA, r, g, b, 1);\r\n\t});\r\nvar _elm_lang$core$Color$lightRed = A4(_elm_lang$core$Color$RGBA, 239, 41, 41, 1);\r\nvar _elm_lang$core$Color$red = A4(_elm_lang$core$Color$RGBA, 204, 0, 0, 1);\r\nvar _elm_lang$core$Color$darkRed = A4(_elm_lang$core$Color$RGBA, 164, 0, 0, 1);\r\nvar _elm_lang$core$Color$lightOrange = A4(_elm_lang$core$Color$RGBA, 252, 175, 62, 1);\r\nvar _elm_lang$core$Color$orange = A4(_elm_lang$core$Color$RGBA, 245, 121, 0, 1);\r\nvar _elm_lang$core$Color$darkOrange = A4(_elm_lang$core$Color$RGBA, 206, 92, 0, 1);\r\nvar _elm_lang$core$Color$lightYellow = A4(_elm_lang$core$Color$RGBA, 255, 233, 79, 1);\r\nvar _elm_lang$core$Color$yellow = A4(_elm_lang$core$Color$RGBA, 237, 212, 0, 1);\r\nvar _elm_lang$core$Color$darkYellow = A4(_elm_lang$core$Color$RGBA, 196, 160, 0, 1);\r\nvar _elm_lang$core$Color$lightGreen = A4(_elm_lang$core$Color$RGBA, 138, 226, 52, 1);\r\nvar _elm_lang$core$Color$green = A4(_elm_lang$core$Color$RGBA, 115, 210, 22, 1);\r\nvar _elm_lang$core$Color$darkGreen = A4(_elm_lang$core$Color$RGBA, 78, 154, 6, 1);\r\nvar _elm_lang$core$Color$lightBlue = A4(_elm_lang$core$Color$RGBA, 114, 159, 207, 1);\r\nvar _elm_lang$core$Color$blue = A4(_elm_lang$core$Color$RGBA, 52, 101, 164, 1);\r\nvar _elm_lang$core$Color$darkBlue = A4(_elm_lang$core$Color$RGBA, 32, 74, 135, 1);\r\nvar _elm_lang$core$Color$lightPurple = A4(_elm_lang$core$Color$RGBA, 173, 127, 168, 1);\r\nvar _elm_lang$core$Color$purple = A4(_elm_lang$core$Color$RGBA, 117, 80, 123, 1);\r\nvar _elm_lang$core$Color$darkPurple = A4(_elm_lang$core$Color$RGBA, 92, 53, 102, 1);\r\nvar _elm_lang$core$Color$lightBrown = A4(_elm_lang$core$Color$RGBA, 233, 185, 110, 1);\r\nvar _elm_lang$core$Color$brown = A4(_elm_lang$core$Color$RGBA, 193, 125, 17, 1);\r\nvar _elm_lang$core$Color$darkBrown = A4(_elm_lang$core$Color$RGBA, 143, 89, 2, 1);\r\nvar _elm_lang$core$Color$black = A4(_elm_lang$core$Color$RGBA, 0, 0, 0, 1);\r\nvar _elm_lang$core$Color$white = A4(_elm_lang$core$Color$RGBA, 255, 255, 255, 1);\r\nvar _elm_lang$core$Color$lightGrey = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);\r\nvar _elm_lang$core$Color$grey = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);\r\nvar _elm_lang$core$Color$darkGrey = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);\r\nvar _elm_lang$core$Color$lightGray = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);\r\nvar _elm_lang$core$Color$gray = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);\r\nvar _elm_lang$core$Color$darkGray = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);\r\nvar _elm_lang$core$Color$lightCharcoal = A4(_elm_lang$core$Color$RGBA, 136, 138, 133, 1);\r\nvar _elm_lang$core$Color$charcoal = A4(_elm_lang$core$Color$RGBA, 85, 87, 83, 1);\r\nvar _elm_lang$core$Color$darkCharcoal = A4(_elm_lang$core$Color$RGBA, 46, 52, 54, 1);\r\nvar _elm_lang$core$Color$Radial = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {ctor: 'Radial', _0: a, _1: b, _2: c, _3: d, _4: e};\r\n\t});\r\nvar _elm_lang$core$Color$radial = _elm_lang$core$Color$Radial;\r\nvar _elm_lang$core$Color$Linear = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {ctor: 'Linear', _0: a, _1: b, _2: c};\r\n\t});\r\nvar _elm_lang$core$Color$linear = _elm_lang$core$Color$Linear;\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Scheduler = function() {\r\n\r\nvar MAX_STEPS = 10000;\r\n\r\n\r\n// TASKS\r\n\r\nfunction succeed(value)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_succeed',\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\nfunction fail(error)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_fail',\r\n\t\tvalue: error\r\n\t};\r\n}\r\n\r\nfunction nativeBinding(callback)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_nativeBinding',\r\n\t\tcallback: callback,\r\n\t\tcancel: null\r\n\t};\r\n}\r\n\r\nfunction andThen(task, callback)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_andThen',\r\n\t\ttask: task,\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\nfunction onError(task, callback)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_onError',\r\n\t\ttask: task,\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\nfunction receive(callback)\r\n{\r\n\treturn {\r\n\t\tctor: '_Task_receive',\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\n\r\n// PROCESSES\r\n\r\nfunction rawSpawn(task)\r\n{\r\n\tvar process = {\r\n\t\tctor: '_Process',\r\n\t\tid: _elm_lang$core$Native_Utils.guid(),\r\n\t\troot: task,\r\n\t\tstack: null,\r\n\t\tmailbox: []\r\n\t};\r\n\r\n\tenqueue(process);\r\n\r\n\treturn process;\r\n}\r\n\r\nfunction spawn(task)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\tvar process = rawSpawn(task);\r\n\t\tcallback(succeed(process));\r\n\t});\r\n}\r\n\r\nfunction rawSend(process, msg)\r\n{\r\n\tprocess.mailbox.push(msg);\r\n\tenqueue(process);\r\n}\r\n\r\nfunction send(process, msg)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\trawSend(process, msg);\r\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\nfunction kill(process)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\tvar root = process.root;\r\n\t\tif (root.ctor === '_Task_nativeBinding' && root.cancel)\r\n\t\t{\r\n\t\t\troot.cancel();\r\n\t\t}\r\n\r\n\t\tprocess.root = null;\r\n\r\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\nfunction sleep(time)\r\n{\r\n\treturn nativeBinding(function(callback) {\r\n\t\tvar id = setTimeout(function() {\r\n\t\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t\t}, time);\r\n\r\n\t\treturn function() { clearTimeout(id); };\r\n\t});\r\n}\r\n\r\n\r\n// STEP PROCESSES\r\n\r\nfunction step(numSteps, process)\r\n{\r\n\twhile (numSteps < MAX_STEPS)\r\n\t{\r\n\t\tvar ctor = process.root.ctor;\r\n\r\n\t\tif (ctor === '_Task_succeed')\r\n\t\t{\r\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_onError')\r\n\t\t\t{\r\n\t\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t}\r\n\t\t\tif (process.stack === null)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tprocess.root = process.stack.callback(process.root.value);\r\n\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_fail')\r\n\t\t{\r\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_andThen')\r\n\t\t\t{\r\n\t\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t}\r\n\t\t\tif (process.stack === null)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tprocess.root = process.stack.callback(process.root.value);\r\n\t\t\tprocess.stack = process.stack.rest;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_andThen')\r\n\t\t{\r\n\t\t\tprocess.stack = {\r\n\t\t\t\tctor: '_Task_andThen',\r\n\t\t\t\tcallback: process.root.callback,\r\n\t\t\t\trest: process.stack\r\n\t\t\t};\r\n\t\t\tprocess.root = process.root.task;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_onError')\r\n\t\t{\r\n\t\t\tprocess.stack = {\r\n\t\t\t\tctor: '_Task_onError',\r\n\t\t\t\tcallback: process.root.callback,\r\n\t\t\t\trest: process.stack\r\n\t\t\t};\r\n\t\t\tprocess.root = process.root.task;\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_nativeBinding')\r\n\t\t{\r\n\t\t\tprocess.root.cancel = process.root.callback(function(newRoot) {\r\n\t\t\t\tprocess.root = newRoot;\r\n\t\t\t\tenqueue(process);\r\n\t\t\t});\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (ctor === '_Task_receive')\r\n\t\t{\r\n\t\t\tvar mailbox = process.mailbox;\r\n\t\t\tif (mailbox.length === 0)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tprocess.root = process.root.callback(mailbox.shift());\r\n\t\t\t++numSteps;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tthrow new Error(ctor);\r\n\t}\r\n\r\n\tif (numSteps < MAX_STEPS)\r\n\t{\r\n\t\treturn numSteps + 1;\r\n\t}\r\n\tenqueue(process);\r\n\r\n\treturn numSteps;\r\n}\r\n\r\n\r\n// WORK QUEUE\r\n\r\nvar working = false;\r\nvar workQueue = [];\r\n\r\nfunction enqueue(process)\r\n{\r\n\tworkQueue.push(process);\r\n\r\n\tif (!working)\r\n\t{\r\n\t\tsetTimeout(work, 0);\r\n\t\tworking = true;\r\n\t}\r\n}\r\n\r\nfunction work()\r\n{\r\n\tvar numSteps = 0;\r\n\tvar process;\r\n\twhile (numSteps < MAX_STEPS && (process = workQueue.shift()))\r\n\t{\r\n\t\tnumSteps = step(numSteps, process);\r\n\t}\r\n\tif (!process)\r\n\t{\r\n\t\tworking = false;\r\n\t\treturn;\r\n\t}\r\n\tsetTimeout(work, 0);\r\n}\r\n\r\n\r\nreturn {\r\n\tsucceed: succeed,\r\n\tfail: fail,\r\n\tnativeBinding: nativeBinding,\r\n\tandThen: F2(andThen),\r\n\tonError: F2(onError),\r\n\treceive: receive,\r\n\r\n\tspawn: spawn,\r\n\tkill: kill,\r\n\tsleep: sleep,\r\n\tsend: F2(send),\r\n\r\n\trawSpawn: rawSpawn,\r\n\trawSend: rawSend\r\n};\r\n\r\n}();\r\n//import //\r\n\r\nvar _elm_lang$core$Native_Platform = function() {\r\n\r\n\r\n// PROGRAMS\r\n\r\nfunction addPublicModule(object, name, main)\r\n{\r\n\tvar init = main ? makeEmbed(name, main) : mainIsUndefined(name);\r\n\r\n\tobject['worker'] = function worker(flags)\r\n\t{\r\n\t\treturn init(undefined, flags, false);\r\n\t}\r\n\r\n\tobject['embed'] = function embed(domNode, flags)\r\n\t{\r\n\t\treturn init(domNode, flags, true);\r\n\t}\r\n\r\n\tobject['fullscreen'] = function fullscreen(flags)\r\n\t{\r\n\t\treturn init(document.body, flags, true);\r\n\t};\r\n}\r\n\r\n\r\n// PROGRAM FAIL\r\n\r\nfunction mainIsUndefined(name)\r\n{\r\n\treturn function(domNode)\r\n\t{\r\n\t\tvar message = 'Cannot initialize module `' + name +\r\n\t\t\t'` because it has no `main` value!\\nWhat should I show on screen?';\r\n\t\tdomNode.innerHTML = errorHtml(message);\r\n\t\tthrow new Error(message);\r\n\t};\r\n}\r\n\r\nfunction errorHtml(message)\r\n{\r\n\treturn '<div style=\"padding-left:1em;\">'\r\n\t\t+ '<h2 style=\"font-weight:normal;\"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'\r\n\t\t+ '<pre style=\"padding-left:1em;\">' + message + '</pre>'\r\n\t\t+ '</div>';\r\n}\r\n\r\n\r\n// PROGRAM SUCCESS\r\n\r\nfunction makeEmbed(moduleName, main)\r\n{\r\n\treturn function embed(rootDomNode, flags, withRenderer)\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar program = mainToProgram(moduleName, main);\r\n\t\t\tif (!withRenderer)\r\n\t\t\t{\r\n\t\t\t\tprogram.renderer = dummyRenderer;\r\n\t\t\t}\r\n\t\t\treturn makeEmbedHelp(moduleName, program, rootDomNode, flags);\r\n\t\t}\r\n\t\tcatch (e)\r\n\t\t{\r\n\t\t\trootDomNode.innerHTML = errorHtml(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction dummyRenderer()\r\n{\r\n\treturn { update: function() {} };\r\n}\r\n\r\n\r\n// MAIN TO PROGRAM\r\n\r\nfunction mainToProgram(moduleName, wrappedMain)\r\n{\r\n\tvar main = wrappedMain.main;\r\n\r\n\tif (typeof main.init === 'undefined')\r\n\t{\r\n\t\tvar emptyBag = batch(_elm_lang$core$Native_List.Nil);\r\n\t\tvar noChange = _elm_lang$core$Native_Utils.Tuple2(\r\n\t\t\t_elm_lang$core$Native_Utils.Tuple0,\r\n\t\t\temptyBag\r\n\t\t);\r\n\r\n\t\treturn _elm_lang$virtual_dom$VirtualDom$programWithFlags({\r\n\t\t\tinit: function() { return noChange; },\r\n\t\t\tview: function() { return main; },\r\n\t\t\tupdate: F2(function() { return noChange; }),\r\n\t\t\tsubscriptions: function () { return emptyBag; }\r\n\t\t});\r\n\t}\r\n\r\n\tvar flags = wrappedMain.flags;\r\n\tvar init = flags\r\n\t\t? initWithFlags(moduleName, main.init, flags)\r\n\t\t: initWithoutFlags(moduleName, main.init);\r\n\r\n\treturn _elm_lang$virtual_dom$VirtualDom$programWithFlags({\r\n\t\tinit: init,\r\n\t\tview: main.view,\r\n\t\tupdate: main.update,\r\n\t\tsubscriptions: main.subscriptions,\r\n\t});\r\n}\r\n\r\nfunction initWithoutFlags(moduleName, realInit)\r\n{\r\n\treturn function init(flags)\r\n\t{\r\n\t\tif (typeof flags !== 'undefined')\r\n\t\t{\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'You are giving module `' + moduleName + '` an argument in JavaScript.\\n'\r\n\t\t\t\t+ 'This module does not take arguments though! You probably need to change the\\n'\r\n\t\t\t\t+ 'initialization code to something like `Elm.' + moduleName + '.fullscreen()`'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn realInit();\r\n\t};\r\n}\r\n\r\nfunction initWithFlags(moduleName, realInit, flagDecoder)\r\n{\r\n\treturn function init(flags)\r\n\t{\r\n\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\r\n\t\tif (result.ctor === 'Err')\r\n\t\t{\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'You are trying to initialize module `' + moduleName + '` with an unexpected argument.\\n'\r\n\t\t\t\t+ 'When trying to convert it to a usable Elm value, I run into this problem:\\n\\n'\r\n\t\t\t\t+ result._0\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn realInit(result._0);\r\n\t};\r\n}\r\n\r\n\r\n// SETUP RUNTIME SYSTEM\r\n\r\nfunction makeEmbedHelp(moduleName, program, rootDomNode, flags)\r\n{\r\n\tvar init = program.init;\r\n\tvar update = program.update;\r\n\tvar subscriptions = program.subscriptions;\r\n\tvar view = program.view;\r\n\tvar makeRenderer = program.renderer;\r\n\r\n\t// ambient state\r\n\tvar managers = {};\r\n\tvar renderer;\r\n\r\n\t// init and update state in main process\r\n\tvar initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\t\tvar results = init(flags);\r\n\t\tvar model = results._0;\r\n\t\trenderer = makeRenderer(rootDomNode, enqueue, view(model));\r\n\t\tvar cmds = results._1;\r\n\t\tvar subs = subscriptions(model);\r\n\t\tdispatchEffects(managers, cmds, subs);\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\r\n\t});\r\n\r\n\tfunction onMessage(msg, model)\r\n\t{\r\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\t\t\tvar results = A2(update, msg, model);\r\n\t\t\tmodel = results._0;\r\n\t\t\trenderer.update(view(model));\r\n\t\t\tvar cmds = results._1;\r\n\t\t\tvar subs = subscriptions(model);\r\n\t\t\tdispatchEffects(managers, cmds, subs);\r\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\r\n\t\t});\r\n\t}\r\n\r\n\tvar mainProcess = spawnLoop(initApp, onMessage);\r\n\r\n\tfunction enqueue(msg)\r\n\t{\r\n\t\t_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);\r\n\t}\r\n\r\n\tvar ports = setupEffects(managers, enqueue);\r\n\r\n\treturn ports ? { ports: ports } : {};\r\n}\r\n\r\n\r\n// EFFECT MANAGERS\r\n\r\nvar effectManagers = {};\r\n\r\nfunction setupEffects(managers, callback)\r\n{\r\n\tvar ports;\r\n\r\n\t// setup all necessary effect managers\r\n\tfor (var key in effectManagers)\r\n\t{\r\n\t\tvar manager = effectManagers[key];\r\n\r\n\t\tif (manager.isForeign)\r\n\t\t{\r\n\t\t\tports = ports || {};\r\n\t\t\tports[key] = manager.tag === 'cmd'\r\n\t\t\t\t? setupOutgoingPort(key)\r\n\t\t\t\t: setupIncomingPort(key, callback);\r\n\t\t}\r\n\r\n\t\tmanagers[key] = makeManager(manager, callback);\r\n\t}\r\n\r\n\treturn ports;\r\n}\r\n\r\nfunction makeManager(info, callback)\r\n{\r\n\tvar router = {\r\n\t\tmain: callback,\r\n\t\tself: undefined\r\n\t};\r\n\r\n\tvar tag = info.tag;\r\n\tvar onEffects = info.onEffects;\r\n\tvar onSelfMsg = info.onSelfMsg;\r\n\r\n\tfunction onMessage(msg, state)\r\n\t{\r\n\t\tif (msg.ctor === 'self')\r\n\t\t{\r\n\t\t\treturn A3(onSelfMsg, router, msg._0, state);\r\n\t\t}\r\n\r\n\t\tvar fx = msg._0;\r\n\t\tswitch (tag)\r\n\t\t{\r\n\t\t\tcase 'cmd':\r\n\t\t\t\treturn A3(onEffects, router, fx.cmds, state);\r\n\r\n\t\t\tcase 'sub':\r\n\t\t\t\treturn A3(onEffects, router, fx.subs, state);\r\n\r\n\t\t\tcase 'fx':\r\n\t\t\t\treturn A4(onEffects, router, fx.cmds, fx.subs, state);\r\n\t\t}\r\n\t}\r\n\r\n\tvar process = spawnLoop(info.init, onMessage);\r\n\trouter.self = process;\r\n\treturn process;\r\n}\r\n\r\nfunction sendToApp(router, msg)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\trouter.main(msg);\r\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\r\n\t});\r\n}\r\n\r\nfunction sendToSelf(router, msg)\r\n{\r\n\treturn A2(_elm_lang$core$Native_Scheduler.send, router.self, {\r\n\t\tctor: 'self',\r\n\t\t_0: msg\r\n\t});\r\n}\r\n\r\n\r\n// HELPER for STATEFUL LOOPS\r\n\r\nfunction spawnLoop(init, onMessage)\r\n{\r\n\tvar andThen = _elm_lang$core$Native_Scheduler.andThen;\r\n\r\n\tfunction loop(state)\r\n\t{\r\n\t\tvar handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {\r\n\t\t\treturn onMessage(msg, state);\r\n\t\t});\r\n\t\treturn A2(andThen, handleMsg, loop);\r\n\t}\r\n\r\n\tvar task = A2(andThen, init, loop);\r\n\r\n\treturn _elm_lang$core$Native_Scheduler.rawSpawn(task);\r\n}\r\n\r\n\r\n// BAGS\r\n\r\nfunction leaf(home)\r\n{\r\n\treturn function(value)\r\n\t{\r\n\t\treturn {\r\n\t\t\ttype: 'leaf',\r\n\t\t\thome: home,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t};\r\n}\r\n\r\nfunction batch(list)\r\n{\r\n\treturn {\r\n\t\ttype: 'node',\r\n\t\tbranches: list\r\n\t};\r\n}\r\n\r\nfunction map(tagger, bag)\r\n{\r\n\treturn {\r\n\t\ttype: 'map',\r\n\t\ttagger: tagger,\r\n\t\ttree: bag\r\n\t}\r\n}\r\n\r\n\r\n// PIPE BAGS INTO EFFECT MANAGERS\r\n\r\nfunction dispatchEffects(managers, cmdBag, subBag)\r\n{\r\n\tvar effectsDict = {};\r\n\tgatherEffects(true, cmdBag, effectsDict, null);\r\n\tgatherEffects(false, subBag, effectsDict, null);\r\n\r\n\tfor (var home in managers)\r\n\t{\r\n\t\tvar fx = home in effectsDict\r\n\t\t\t? effectsDict[home]\r\n\t\t\t: {\r\n\t\t\t\tcmds: _elm_lang$core$Native_List.Nil,\r\n\t\t\t\tsubs: _elm_lang$core$Native_List.Nil\r\n\t\t\t};\r\n\r\n\t\t_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });\r\n\t}\r\n}\r\n\r\nfunction gatherEffects(isCmd, bag, effectsDict, taggers)\r\n{\r\n\tswitch (bag.type)\r\n\t{\r\n\t\tcase 'leaf':\r\n\t\t\tvar home = bag.home;\r\n\t\t\tvar effect = toEffect(isCmd, home, taggers, bag.value);\r\n\t\t\teffectsDict[home] = insert(isCmd, effect, effectsDict[home]);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'node':\r\n\t\t\tvar list = bag.branches;\r\n\t\t\twhile (list.ctor !== '[]')\r\n\t\t\t{\r\n\t\t\t\tgatherEffects(isCmd, list._0, effectsDict, taggers);\r\n\t\t\t\tlist = list._1;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\r\n\t\tcase 'map':\r\n\t\t\tgatherEffects(isCmd, bag.tree, effectsDict, {\r\n\t\t\t\ttagger: bag.tagger,\r\n\t\t\t\trest: taggers\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction toEffect(isCmd, home, taggers, value)\r\n{\r\n\tfunction applyTaggers(x)\r\n\t{\r\n\t\twhile (taggers)\r\n\t\t{\r\n\t\t\tx = taggers.tagger(x);\r\n\t\t\ttaggers = taggers.rest;\r\n\t\t}\r\n\t\treturn x;\r\n\t}\r\n\r\n\tvar map = isCmd\r\n\t\t? effectManagers[home].cmdMap\r\n\t\t: effectManagers[home].subMap;\r\n\r\n\treturn A2(map, applyTaggers, value)\r\n}\r\n\r\nfunction insert(isCmd, newEffect, effects)\r\n{\r\n\teffects = effects || {\r\n\t\tcmds: _elm_lang$core$Native_List.Nil,\r\n\t\tsubs: _elm_lang$core$Native_List.Nil\r\n\t};\r\n\tif (isCmd)\r\n\t{\r\n\t\teffects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);\r\n\t\treturn effects;\r\n\t}\r\n\teffects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);\r\n\treturn effects;\r\n}\r\n\r\n\r\n// PORTS\r\n\r\nfunction checkPortName(name)\r\n{\r\n\tif (name in effectManagers)\r\n\t{\r\n\t\tthrow new Error('There can only be one port named `' + name + '`, but your program has multiple.');\r\n\t}\r\n}\r\n\r\n\r\n// OUTGOING PORTS\r\n\r\nfunction outgoingPort(name, converter)\r\n{\r\n\tcheckPortName(name);\r\n\teffectManagers[name] = {\r\n\t\ttag: 'cmd',\r\n\t\tcmdMap: outgoingPortMap,\r\n\t\tconverter: converter,\r\n\t\tisForeign: true\r\n\t};\r\n\treturn leaf(name);\r\n}\r\n\r\nvar outgoingPortMap = F2(function cmdMap(tagger, value) {\r\n\treturn value;\r\n});\r\n\r\nfunction setupOutgoingPort(name)\r\n{\r\n\tvar subs = [];\r\n\tvar converter = effectManagers[name].converter;\r\n\r\n\t// CREATE MANAGER\r\n\r\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\r\n\r\n\tfunction onEffects(router, cmdList, state)\r\n\t{\r\n\t\twhile (cmdList.ctor !== '[]')\r\n\t\t{\r\n\t\t\tvar value = converter(cmdList._0);\r\n\t\t\tfor (var i = 0; i < subs.length; i++)\r\n\t\t\t{\r\n\t\t\t\tsubs[i](value);\r\n\t\t\t}\r\n\t\t\tcmdList = cmdList._1;\r\n\t\t}\r\n\t\treturn init;\r\n\t}\r\n\r\n\teffectManagers[name].init = init;\r\n\teffectManagers[name].onEffects = F3(onEffects);\r\n\r\n\t// PUBLIC API\r\n\r\n\tfunction subscribe(callback)\r\n\t{\r\n\t\tsubs.push(callback);\r\n\t}\r\n\r\n\tfunction unsubscribe(callback)\r\n\t{\r\n\t\tvar index = subs.indexOf(callback);\r\n\t\tif (index >= 0)\r\n\t\t{\r\n\t\t\tsubs.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tsubscribe: subscribe,\r\n\t\tunsubscribe: unsubscribe\r\n\t};\r\n}\r\n\r\n\r\n// INCOMING PORTS\r\n\r\nfunction incomingPort(name, converter)\r\n{\r\n\tcheckPortName(name);\r\n\teffectManagers[name] = {\r\n\t\ttag: 'sub',\r\n\t\tsubMap: incomingPortMap,\r\n\t\tconverter: converter,\r\n\t\tisForeign: true\r\n\t};\r\n\treturn leaf(name);\r\n}\r\n\r\nvar incomingPortMap = F2(function subMap(tagger, finalTagger)\r\n{\r\n\treturn function(value)\r\n\t{\r\n\t\treturn tagger(finalTagger(value));\r\n\t};\r\n});\r\n\r\nfunction setupIncomingPort(name, callback)\r\n{\r\n\tvar subs = _elm_lang$core$Native_List.Nil;\r\n\tvar converter = effectManagers[name].converter;\r\n\r\n\t// CREATE MANAGER\r\n\r\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\r\n\r\n\tfunction onEffects(router, subList, state)\r\n\t{\r\n\t\tsubs = subList;\r\n\t\treturn init;\r\n\t}\r\n\r\n\teffectManagers[name].init = init;\r\n\teffectManagers[name].onEffects = F3(onEffects);\r\n\r\n\t// PUBLIC API\r\n\r\n\tfunction send(value)\r\n\t{\r\n\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, value);\r\n\t\tif (result.ctor === 'Err')\r\n\t\t{\r\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + name + '`:\\n' + result._0);\r\n\t\t}\r\n\r\n\t\tvar value = result._0;\r\n\t\tvar temp = subs;\r\n\t\twhile (temp.ctor !== '[]')\r\n\t\t{\r\n\t\t\tcallback(temp._0(value));\r\n\t\t\ttemp = temp._1;\r\n\t\t}\r\n\t}\r\n\r\n\treturn { send: send };\r\n}\r\n\r\nreturn {\r\n\t// routers\r\n\tsendToApp: F2(sendToApp),\r\n\tsendToSelf: F2(sendToSelf),\r\n\r\n\t// global setup\r\n\tmainToProgram: mainToProgram,\r\n\teffectManagers: effectManagers,\r\n\toutgoingPort: outgoingPort,\r\n\tincomingPort: incomingPort,\r\n\taddPublicModule: addPublicModule,\r\n\r\n\t// effect bags\r\n\tleaf: leaf,\r\n\tbatch: batch,\r\n\tmap: F2(map)\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;\r\nvar _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;\r\nvar _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;\r\nvar _elm_lang$core$Platform$Program = {ctor: 'Program'};\r\nvar _elm_lang$core$Platform$Task = {ctor: 'Task'};\r\nvar _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};\r\nvar _elm_lang$core$Platform$Router = {ctor: 'Router'};\r\n\r\nvar _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;\r\nvar _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(\r\n\t_elm_lang$core$Native_List.fromArray(\r\n\t\t[]));\r\nvar _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};\r\n_elm_lang$core$Platform_Cmd_ops['!'] = F2(\r\n\tfunction (model, commands) {\r\n\t\treturn {\r\n\t\t\tctor: '_Tuple2',\r\n\t\t\t_0: model,\r\n\t\t\t_1: _elm_lang$core$Platform_Cmd$batch(commands)\r\n\t\t};\r\n\t});\r\nvar _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;\r\nvar _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};\r\n\r\nvar _elm_lang$core$Result$toMaybe = function (result) {\r\n\tvar _p0 = result;\r\n\tif (_p0.ctor === 'Ok') {\r\n\t\treturn _elm_lang$core$Maybe$Just(_p0._0);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _elm_lang$core$Result$withDefault = F2(\r\n\tfunction (def, result) {\r\n\t\tvar _p1 = result;\r\n\t\tif (_p1.ctor === 'Ok') {\r\n\t\t\treturn _p1._0;\r\n\t\t} else {\r\n\t\t\treturn def;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$Err = function (a) {\r\n\treturn {ctor: 'Err', _0: a};\r\n};\r\nvar _elm_lang$core$Result$andThen = F2(\r\n\tfunction (result, callback) {\r\n\t\tvar _p2 = result;\r\n\t\tif (_p2.ctor === 'Ok') {\r\n\t\t\treturn callback(_p2._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p2._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$Ok = function (a) {\r\n\treturn {ctor: 'Ok', _0: a};\r\n};\r\nvar _elm_lang$core$Result$map = F2(\r\n\tfunction (func, ra) {\r\n\t\tvar _p3 = ra;\r\n\t\tif (_p3.ctor === 'Ok') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\tfunc(_p3._0));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p3._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map2 = F3(\r\n\tfunction (func, ra, rb) {\r\n\t\tvar _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};\r\n\t\tif (_p4._0.ctor === 'Ok') {\r\n\t\t\tif (_p4._1.ctor === 'Ok') {\r\n\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\tA2(func, _p4._0._0, _p4._1._0));\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p4._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p4._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map3 = F4(\r\n\tfunction (func, ra, rb, rc) {\r\n\t\tvar _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};\r\n\t\tif (_p5._0.ctor === 'Ok') {\r\n\t\t\tif (_p5._1.ctor === 'Ok') {\r\n\t\t\t\tif (_p5._2.ctor === 'Ok') {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\t\tA3(func, _p5._0._0, _p5._1._0, _p5._2._0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p5._2._0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p5._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p5._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map4 = F5(\r\n\tfunction (func, ra, rb, rc, rd) {\r\n\t\tvar _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};\r\n\t\tif (_p6._0.ctor === 'Ok') {\r\n\t\t\tif (_p6._1.ctor === 'Ok') {\r\n\t\t\t\tif (_p6._2.ctor === 'Ok') {\r\n\t\t\t\t\tif (_p6._3.ctor === 'Ok') {\r\n\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\t\t\tA4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._3._0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._2._0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p6._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p6._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$map5 = F6(\r\n\tfunction (func, ra, rb, rc, rd, re) {\r\n\t\tvar _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};\r\n\t\tif (_p7._0.ctor === 'Ok') {\r\n\t\t\tif (_p7._1.ctor === 'Ok') {\r\n\t\t\t\tif (_p7._2.ctor === 'Ok') {\r\n\t\t\t\t\tif (_p7._3.ctor === 'Ok') {\r\n\t\t\t\t\t\tif (_p7._4.ctor === 'Ok') {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\r\n\t\t\t\t\t\t\t\tA5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._4._0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._3._0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._2._0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Result$Err(_p7._1._0);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(_p7._0._0);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$formatError = F2(\r\n\tfunction (f, result) {\r\n\t\tvar _p8 = result;\r\n\t\tif (_p8.ctor === 'Ok') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(_p8._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(\r\n\t\t\t\tf(_p8._0));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Result$fromMaybe = F2(\r\n\tfunction (err, maybe) {\r\n\t\tvar _p9 = maybe;\r\n\t\tif (_p9.ctor === 'Just') {\r\n\t\t\treturn _elm_lang$core$Result$Ok(_p9._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Result$Err(err);\r\n\t\t}\r\n\t});\r\n\r\nvar _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;\r\nvar _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;\r\nvar _elm_lang$core$Task$spawnCmd = F2(\r\n\tfunction (router, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn _elm_lang$core$Native_Scheduler.spawn(\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t_p1._0,\r\n\t\t\t\t_elm_lang$core$Platform$sendToApp(router)));\r\n\t});\r\nvar _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;\r\nvar _elm_lang$core$Task$mapError = F2(\r\n\tfunction (f, task) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$onError,\r\n\t\t\ttask,\r\n\t\t\tfunction (err) {\r\n\t\t\t\treturn _elm_lang$core$Task$fail(\r\n\t\t\t\t\tf(err));\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;\r\nvar _elm_lang$core$Task$map = F2(\r\n\tfunction (func, taskA) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\ttaskA,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\tfunc(a));\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$map2 = F3(\r\n\tfunction (func, taskA, taskB) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\ttaskA,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttaskB,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tA2(func, a, b));\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$map3 = F4(\r\n\tfunction (func, taskA, taskB, taskC) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\ttaskA,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttaskB,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\ttaskC,\r\n\t\t\t\t\t\t\tfunction (c) {\r\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\tA3(func, a, b, c));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$map4 = F5(\r\n\tfunction (func, taskA, taskB, taskC, taskD) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\ttaskA,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttaskB,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\ttaskC,\r\n\t\t\t\t\t\t\tfunction (c) {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\ttaskD,\r\n\t\t\t\t\t\t\t\t\tfunction (d) {\r\n\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\t\t\tA4(func, a, b, c, d));\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$map5 = F6(\r\n\tfunction (func, taskA, taskB, taskC, taskD, taskE) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\ttaskA,\r\n\t\t\tfunction (a) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttaskB,\r\n\t\t\t\t\tfunction (b) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\ttaskC,\r\n\t\t\t\t\t\t\tfunction (c) {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\ttaskD,\r\n\t\t\t\t\t\t\t\t\tfunction (d) {\r\n\t\t\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\t\t\ttaskE,\r\n\t\t\t\t\t\t\t\t\t\t\tfunction (e) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tA5(func, a, b, c, d, e));\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$andMap = F2(\r\n\tfunction (taskFunc, taskValue) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\ttaskFunc,\r\n\t\t\tfunction (func) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttaskValue,\r\n\t\t\t\t\tfunction (value) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tfunc(value));\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Task$sequence = function (tasks) {\r\n\tvar _p2 = tasks;\r\n\tif (_p2.ctor === '[]') {\r\n\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]));\r\n\t} else {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Task$map2,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\treturn A2(_elm_lang$core$List_ops['::'], x, y);\r\n\t\t\t\t}),\r\n\t\t\t_p2._0,\r\n\t\t\t_elm_lang$core$Task$sequence(_p2._1));\r\n\t}\r\n};\r\nvar _elm_lang$core$Task$onEffects = F3(\r\n\tfunction (router, commands, state) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$map,\r\n\t\t\tfunction (_p3) {\r\n\t\t\t\treturn {ctor: '_Tuple0'};\r\n\t\t\t},\r\n\t\t\t_elm_lang$core$Task$sequence(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t_elm_lang$core$Task$spawnCmd(router),\r\n\t\t\t\t\tcommands)));\r\n\t});\r\nvar _elm_lang$core$Task$toMaybe = function (task) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Task$onError,\r\n\t\tA2(_elm_lang$core$Task$map, _elm_lang$core$Maybe$Just, task),\r\n\t\tfunction (_p4) {\r\n\t\t\treturn _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\r\n\t\t});\r\n};\r\nvar _elm_lang$core$Task$fromMaybe = F2(\r\n\tfunction ($default, maybe) {\r\n\t\tvar _p5 = maybe;\r\n\t\tif (_p5.ctor === 'Just') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(_p5._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Task$fail($default);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Task$toResult = function (task) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Task$onError,\r\n\t\tA2(_elm_lang$core$Task$map, _elm_lang$core$Result$Ok, task),\r\n\t\tfunction (msg) {\r\n\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t_elm_lang$core$Result$Err(msg));\r\n\t\t});\r\n};\r\nvar _elm_lang$core$Task$fromResult = function (result) {\r\n\tvar _p6 = result;\r\n\tif (_p6.ctor === 'Ok') {\r\n\t\treturn _elm_lang$core$Task$succeed(_p6._0);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Task$fail(_p6._0);\r\n\t}\r\n};\r\nvar _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(\r\n\t{ctor: '_Tuple0'});\r\nvar _elm_lang$core$Task$onSelfMsg = F3(\r\n\tfunction (_p9, _p8, _p7) {\r\n\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t{ctor: '_Tuple0'});\r\n\t});\r\nvar _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');\r\nvar _elm_lang$core$Task$T = function (a) {\r\n\treturn {ctor: 'T', _0: a};\r\n};\r\nvar _elm_lang$core$Task$perform = F3(\r\n\tfunction (onFail, onSuccess, task) {\r\n\t\treturn _elm_lang$core$Task$command(\r\n\t\t\t_elm_lang$core$Task$T(\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Task$onError,\r\n\t\t\t\t\tA2(_elm_lang$core$Task$map, onSuccess, task),\r\n\t\t\t\t\tfunction (x) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tonFail(x));\r\n\t\t\t\t\t})));\r\n\t});\r\nvar _elm_lang$core$Task$cmdMap = F2(\r\n\tfunction (tagger, _p10) {\r\n\t\tvar _p11 = _p10;\r\n\t\treturn _elm_lang$core$Task$T(\r\n\t\t\tA2(_elm_lang$core$Task$map, tagger, _p11._0));\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};\r\n\r\n//import Native.Utils //\r\n\r\nvar _elm_lang$core$Native_Debug = function() {\r\n\r\nfunction log(tag, value)\r\n{\r\n\tvar msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);\r\n\tvar process = process || {};\r\n\tif (process.stdout)\r\n\t{\r\n\t\tprocess.stdout.write(msg);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconsole.log(msg);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\nfunction crash(message)\r\n{\r\n\tthrow new Error(message);\r\n}\r\n\r\nreturn {\r\n\tcrash: crash,\r\n\tlog: F2(log)\r\n};\r\n\r\n}();\r\n//import Maybe, Native.List, Native.Utils, Result //\r\n\r\nvar _elm_lang$core$Native_String = function() {\r\n\r\nfunction isEmpty(str)\r\n{\r\n\treturn str.length === 0;\r\n}\r\nfunction cons(chr, str)\r\n{\r\n\treturn chr + str;\r\n}\r\nfunction uncons(str)\r\n{\r\n\tvar hd = str[0];\r\n\tif (hd)\r\n\t{\r\n\t\treturn _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));\r\n\t}\r\n\treturn _elm_lang$core$Maybe$Nothing;\r\n}\r\nfunction append(a, b)\r\n{\r\n\treturn a + b;\r\n}\r\nfunction concat(strs)\r\n{\r\n\treturn _elm_lang$core$Native_List.toArray(strs).join('');\r\n}\r\nfunction length(str)\r\n{\r\n\treturn str.length;\r\n}\r\nfunction map(f, str)\r\n{\r\n\tvar out = str.split('');\r\n\tfor (var i = out.length; i--; )\r\n\t{\r\n\t\tout[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));\r\n\t}\r\n\treturn out.join('');\r\n}\r\nfunction filter(pred, str)\r\n{\r\n\treturn str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');\r\n}\r\nfunction reverse(str)\r\n{\r\n\treturn str.split('').reverse().join('');\r\n}\r\nfunction foldl(f, b, str)\r\n{\r\n\tvar len = str.length;\r\n\tfor (var i = 0; i < len; ++i)\r\n\t{\r\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\r\n\t}\r\n\treturn b;\r\n}\r\nfunction foldr(f, b, str)\r\n{\r\n\tfor (var i = str.length; i--; )\r\n\t{\r\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\r\n\t}\r\n\treturn b;\r\n}\r\nfunction split(sep, str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.split(sep));\r\n}\r\nfunction join(sep, strs)\r\n{\r\n\treturn _elm_lang$core$Native_List.toArray(strs).join(sep);\r\n}\r\nfunction repeat(n, str)\r\n{\r\n\tvar result = '';\r\n\twhile (n > 0)\r\n\t{\r\n\t\tif (n & 1)\r\n\t\t{\r\n\t\t\tresult += str;\r\n\t\t}\r\n\t\tn >>= 1, str += str;\r\n\t}\r\n\treturn result;\r\n}\r\nfunction slice(start, end, str)\r\n{\r\n\treturn str.slice(start, end);\r\n}\r\nfunction left(n, str)\r\n{\r\n\treturn n < 1 ? '' : str.slice(0, n);\r\n}\r\nfunction right(n, str)\r\n{\r\n\treturn n < 1 ? '' : str.slice(-n);\r\n}\r\nfunction dropLeft(n, str)\r\n{\r\n\treturn n < 1 ? str : str.slice(n);\r\n}\r\nfunction dropRight(n, str)\r\n{\r\n\treturn n < 1 ? str : str.slice(0, -n);\r\n}\r\nfunction pad(n, chr, str)\r\n{\r\n\tvar half = (n - str.length) / 2;\r\n\treturn repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\r\n}\r\nfunction padRight(n, chr, str)\r\n{\r\n\treturn str + repeat(n - str.length, chr);\r\n}\r\nfunction padLeft(n, chr, str)\r\n{\r\n\treturn repeat(n - str.length, chr) + str;\r\n}\r\n\r\nfunction trim(str)\r\n{\r\n\treturn str.trim();\r\n}\r\nfunction trimLeft(str)\r\n{\r\n\treturn str.replace(/^\\s+/, '');\r\n}\r\nfunction trimRight(str)\r\n{\r\n\treturn str.replace(/\\s+$/, '');\r\n}\r\n\r\nfunction words(str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.trim().split(/\\s+/g));\r\n}\r\nfunction lines(str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\r\n}\r\n\r\nfunction toUpper(str)\r\n{\r\n\treturn str.toUpperCase();\r\n}\r\nfunction toLower(str)\r\n{\r\n\treturn str.toLowerCase();\r\n}\r\n\r\nfunction any(pred, str)\r\n{\r\n\tfor (var i = str.length; i--; )\r\n\t{\r\n\t\tif (pred(_elm_lang$core$Native_Utils.chr(str[i])))\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\nfunction all(pred, str)\r\n{\r\n\tfor (var i = str.length; i--; )\r\n\t{\r\n\t\tif (!pred(_elm_lang$core$Native_Utils.chr(str[i])))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction contains(sub, str)\r\n{\r\n\treturn str.indexOf(sub) > -1;\r\n}\r\nfunction startsWith(sub, str)\r\n{\r\n\treturn str.indexOf(sub) === 0;\r\n}\r\nfunction endsWith(sub, str)\r\n{\r\n\treturn str.length >= sub.length &&\r\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\r\n}\r\nfunction indexes(sub, str)\r\n{\r\n\tvar subLen = sub.length;\r\n\tvar i = 0;\r\n\tvar is = [];\r\n\twhile ((i = str.indexOf(sub, i)) > -1)\r\n\t{\r\n\t\tis.push(i);\r\n\t\ti = i + subLen;\r\n\t}\r\n\treturn _elm_lang$core$Native_List.fromArray(is);\r\n}\r\n\r\nfunction toInt(s)\r\n{\r\n\tvar len = s.length;\r\n\tif (len === 0)\r\n\t{\r\n\t\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to an Int\" );\r\n\t}\r\n\tvar start = 0;\r\n\tif (s[0] === '-')\r\n\t{\r\n\t\tif (len === 1)\r\n\t\t{\r\n\t\t\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to an Int\" );\r\n\t\t}\r\n\t\tstart = 1;\r\n\t}\r\n\tfor (var i = start; i < len; ++i)\r\n\t{\r\n\t\tvar c = s[i];\r\n\t\tif (c < '0' || '9' < c)\r\n\t\t{\r\n\t\t\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to an Int\" );\r\n\t\t}\r\n\t}\r\n\treturn _elm_lang$core$Result$Ok(parseInt(s, 10));\r\n}\r\n\r\nfunction toFloat(s)\r\n{\r\n\tvar len = s.length;\r\n\tif (len === 0)\r\n\t{\r\n\t\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to a Float\" );\r\n\t}\r\n\tvar start = 0;\r\n\tif (s[0] === '-')\r\n\t{\r\n\t\tif (len === 1)\r\n\t\t{\r\n\t\t\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to a Float\" );\r\n\t\t}\r\n\t\tstart = 1;\r\n\t}\r\n\tvar dotCount = 0;\r\n\tfor (var i = start; i < len; ++i)\r\n\t{\r\n\t\tvar c = s[i];\r\n\t\tif ('0' <= c && c <= '9')\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (c === '.')\r\n\t\t{\r\n\t\t\tdotCount += 1;\r\n\t\t\tif (dotCount <= 1)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to a Float\" );\r\n\t}\r\n\treturn _elm_lang$core$Result$Ok(parseFloat(s));\r\n}\r\n\r\nfunction toList(str)\r\n{\r\n\treturn _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));\r\n}\r\nfunction fromList(chars)\r\n{\r\n\treturn _elm_lang$core$Native_List.toArray(chars).join('');\r\n}\r\n\r\nreturn {\r\n\tisEmpty: isEmpty,\r\n\tcons: F2(cons),\r\n\tuncons: uncons,\r\n\tappend: F2(append),\r\n\tconcat: concat,\r\n\tlength: length,\r\n\tmap: F2(map),\r\n\tfilter: F2(filter),\r\n\treverse: reverse,\r\n\tfoldl: F3(foldl),\r\n\tfoldr: F3(foldr),\r\n\r\n\tsplit: F2(split),\r\n\tjoin: F2(join),\r\n\trepeat: F2(repeat),\r\n\r\n\tslice: F3(slice),\r\n\tleft: F2(left),\r\n\tright: F2(right),\r\n\tdropLeft: F2(dropLeft),\r\n\tdropRight: F2(dropRight),\r\n\r\n\tpad: F3(pad),\r\n\tpadLeft: F3(padLeft),\r\n\tpadRight: F3(padRight),\r\n\r\n\ttrim: trim,\r\n\ttrimLeft: trimLeft,\r\n\ttrimRight: trimRight,\r\n\r\n\twords: words,\r\n\tlines: lines,\r\n\r\n\ttoUpper: toUpper,\r\n\ttoLower: toLower,\r\n\r\n\tany: F2(any),\r\n\tall: F2(all),\r\n\r\n\tcontains: F2(contains),\r\n\tstartsWith: F2(startsWith),\r\n\tendsWith: F2(endsWith),\r\n\tindexes: F2(indexes),\r\n\r\n\ttoInt: toInt,\r\n\ttoFloat: toFloat,\r\n\ttoList: toList,\r\n\tfromList: fromList\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;\r\nvar _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;\r\nvar _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;\r\nvar _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;\r\nvar _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;\r\nvar _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;\r\nvar _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;\r\nvar _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;\r\nvar _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;\r\nvar _elm_lang$core$String$all = _elm_lang$core$Native_String.all;\r\nvar _elm_lang$core$String$any = _elm_lang$core$Native_String.any;\r\nvar _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;\r\nvar _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;\r\nvar _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;\r\nvar _elm_lang$core$String$words = _elm_lang$core$Native_String.words;\r\nvar _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;\r\nvar _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;\r\nvar _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;\r\nvar _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;\r\nvar _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;\r\nvar _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;\r\nvar _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;\r\nvar _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;\r\nvar _elm_lang$core$String$right = _elm_lang$core$Native_String.right;\r\nvar _elm_lang$core$String$left = _elm_lang$core$Native_String.left;\r\nvar _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;\r\nvar _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;\r\nvar _elm_lang$core$String$join = _elm_lang$core$Native_String.join;\r\nvar _elm_lang$core$String$split = _elm_lang$core$Native_String.split;\r\nvar _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;\r\nvar _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;\r\nvar _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;\r\nvar _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;\r\nvar _elm_lang$core$String$map = _elm_lang$core$Native_String.map;\r\nvar _elm_lang$core$String$length = _elm_lang$core$Native_String.length;\r\nvar _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;\r\nvar _elm_lang$core$String$append = _elm_lang$core$Native_String.append;\r\nvar _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;\r\nvar _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;\r\nvar _elm_lang$core$String$fromChar = function ($char) {\r\n\treturn A2(_elm_lang$core$String$cons, $char, '');\r\n};\r\nvar _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;\r\n\r\nvar _elm_lang$core$Dict$foldr = F3(\r\n\tfunction (f, acc, t) {\r\n\t\tfoldr:\r\n\t\twhile (true) {\r\n\t\t\tvar _p0 = t;\r\n\t\t\tif (_p0.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn acc;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v1 = f,\r\n\t\t\t\t\t_v2 = A3(\r\n\t\t\t\t\tf,\r\n\t\t\t\t\t_p0._1,\r\n\t\t\t\t\t_p0._2,\r\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),\r\n\t\t\t\t\t_v3 = _p0._3;\r\n\t\t\t\tf = _v1;\r\n\t\t\t\tacc = _v2;\r\n\t\t\t\tt = _v3;\r\n\t\t\t\tcontinue foldr;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$keys = function (dict) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$Dict$foldr,\r\n\t\tF3(\r\n\t\t\tfunction (key, value, keyList) {\r\n\t\t\t\treturn A2(_elm_lang$core$List_ops['::'], key, keyList);\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\tdict);\r\n};\r\nvar _elm_lang$core$Dict$values = function (dict) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$Dict$foldr,\r\n\t\tF3(\r\n\t\t\tfunction (key, value, valueList) {\r\n\t\t\t\treturn A2(_elm_lang$core$List_ops['::'], value, valueList);\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\tdict);\r\n};\r\nvar _elm_lang$core$Dict$toList = function (dict) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$Dict$foldr,\r\n\t\tF3(\r\n\t\t\tfunction (key, value, list) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$List_ops['::'],\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: key, _1: value},\r\n\t\t\t\t\tlist);\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\tdict);\r\n};\r\nvar _elm_lang$core$Dict$foldl = F3(\r\n\tfunction (f, acc, dict) {\r\n\t\tfoldl:\r\n\t\twhile (true) {\r\n\t\t\tvar _p1 = dict;\r\n\t\t\tif (_p1.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn acc;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v5 = f,\r\n\t\t\t\t\t_v6 = A3(\r\n\t\t\t\t\tf,\r\n\t\t\t\t\t_p1._1,\r\n\t\t\t\t\t_p1._2,\r\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),\r\n\t\t\t\t\t_v7 = _p1._4;\r\n\t\t\t\tf = _v5;\r\n\t\t\t\tacc = _v6;\r\n\t\t\t\tdict = _v7;\r\n\t\t\t\tcontinue foldl;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$merge = F6(\r\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\r\n\t\tvar stepState = F3(\r\n\t\t\tfunction (rKey, rValue, _p2) {\r\n\t\t\t\tvar _p3 = _p2;\r\n\t\t\t\tvar _p9 = _p3._1;\r\n\t\t\t\tvar _p8 = _p3._0;\r\n\t\t\t\tvar _p4 = _p8;\r\n\t\t\t\tif (_p4.ctor === '[]') {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _p8,\r\n\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar _p7 = _p4._1;\r\n\t\t\t\t\tvar _p6 = _p4._0._1;\r\n\t\t\t\t\tvar _p5 = _p4._0._0;\r\n\t\t\t\t\treturn (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) ? {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _p7,\r\n\t\t\t\t\t\t_1: A3(leftStep, _p5, _p6, _p9)\r\n\t\t\t\t\t} : ((_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) ? {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _p8,\r\n\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\r\n\t\t\t\t\t} : {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _p7,\r\n\t\t\t\t\t\t_1: A4(bothStep, _p5, _p6, rValue, _p9)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tvar _p10 = A3(\r\n\t\t\t_elm_lang$core$Dict$foldl,\r\n\t\t\tstepState,\r\n\t\t\t{\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: _elm_lang$core$Dict$toList(leftDict),\r\n\t\t\t\t_1: initialResult\r\n\t\t\t},\r\n\t\t\trightDict);\r\n\t\tvar leftovers = _p10._0;\r\n\t\tvar intermediateResult = _p10._1;\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldl,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (_p11, result) {\r\n\t\t\t\t\tvar _p12 = _p11;\r\n\t\t\t\t\treturn A3(leftStep, _p12._0, _p12._1, result);\r\n\t\t\t\t}),\r\n\t\t\tintermediateResult,\r\n\t\t\tleftovers);\r\n\t});\r\nvar _elm_lang$core$Dict$reportRemBug = F4(\r\n\tfunction (msg, c, lgot, rgot) {\r\n\t\treturn _elm_lang$core$Native_Debug.crash(\r\n\t\t\t_elm_lang$core$String$concat(\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t'Internal red-black tree invariant violated, expected ',\r\n\t\t\t\t\t\tmsg,\r\n\t\t\t\t\t\t' and got ',\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(c),\r\n\t\t\t\t\t\t'/',\r\n\t\t\t\t\t\tlgot,\r\n\t\t\t\t\t\t'/',\r\n\t\t\t\t\t\trgot,\r\n\t\t\t\t\t\t'\\nPlease report this bug to <https://github.com/elm-lang/core/issues>'\r\n\t\t\t\t\t])));\r\n\t});\r\nvar _elm_lang$core$Dict$isBBlack = function (dict) {\r\n\tvar _p13 = dict;\r\n\t_v11_2:\r\n\tdo {\r\n\t\tif (_p13.ctor === 'RBNode_elm_builtin') {\r\n\t\t\tif (_p13._0.ctor === 'BBlack') {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tbreak _v11_2;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_p13._0.ctor === 'LBBlack') {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tbreak _v11_2;\r\n\t\t\t}\r\n\t\t}\r\n\t} while(false);\r\n\treturn false;\r\n};\r\nvar _elm_lang$core$Dict$sizeHelp = F2(\r\n\tfunction (n, dict) {\r\n\t\tsizeHelp:\r\n\t\twhile (true) {\r\n\t\t\tvar _p14 = dict;\r\n\t\t\tif (_p14.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn n;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v13 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),\r\n\t\t\t\t\t_v14 = _p14._3;\r\n\t\t\t\tn = _v13;\r\n\t\t\t\tdict = _v14;\r\n\t\t\t\tcontinue sizeHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$size = function (dict) {\r\n\treturn A2(_elm_lang$core$Dict$sizeHelp, 0, dict);\r\n};\r\nvar _elm_lang$core$Dict$get = F2(\r\n\tfunction (targetKey, dict) {\r\n\t\tget:\r\n\t\twhile (true) {\r\n\t\t\tvar _p15 = dict;\r\n\t\t\tif (_p15.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t\t} else {\r\n\t\t\t\tvar _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);\r\n\t\t\t\tswitch (_p16.ctor) {\r\n\t\t\t\t\tcase 'LT':\r\n\t\t\t\t\t\tvar _v17 = targetKey,\r\n\t\t\t\t\t\t\t_v18 = _p15._3;\r\n\t\t\t\t\t\ttargetKey = _v17;\r\n\t\t\t\t\t\tdict = _v18;\r\n\t\t\t\t\t\tcontinue get;\r\n\t\t\t\t\tcase 'EQ':\r\n\t\t\t\t\t\treturn _elm_lang$core$Maybe$Just(_p15._2);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvar _v19 = targetKey,\r\n\t\t\t\t\t\t\t_v20 = _p15._4;\r\n\t\t\t\t\t\ttargetKey = _v19;\r\n\t\t\t\t\t\tdict = _v20;\r\n\t\t\t\t\t\tcontinue get;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$member = F2(\r\n\tfunction (key, dict) {\r\n\t\tvar _p17 = A2(_elm_lang$core$Dict$get, key, dict);\r\n\t\tif (_p17.ctor === 'Just') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$maxWithDefault = F3(\r\n\tfunction (k, v, r) {\r\n\t\tmaxWithDefault:\r\n\t\twhile (true) {\r\n\t\t\tvar _p18 = r;\r\n\t\t\tif (_p18.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: k, _1: v};\r\n\t\t\t} else {\r\n\t\t\t\tvar _v23 = _p18._1,\r\n\t\t\t\t\t_v24 = _p18._2,\r\n\t\t\t\t\t_v25 = _p18._4;\r\n\t\t\t\tk = _v23;\r\n\t\t\t\tv = _v24;\r\n\t\t\t\tr = _v25;\r\n\t\t\t\tcontinue maxWithDefault;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};\r\nvar _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};\r\nvar _elm_lang$core$Dict$Black = {ctor: 'Black'};\r\nvar _elm_lang$core$Dict$blackish = function (t) {\r\n\tvar _p19 = t;\r\n\tif (_p19.ctor === 'RBNode_elm_builtin') {\r\n\t\tvar _p20 = _p19._0;\r\n\t\treturn _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$Red = {ctor: 'Red'};\r\nvar _elm_lang$core$Dict$moreBlack = function (color) {\r\n\tvar _p21 = color;\r\n\tswitch (_p21.ctor) {\r\n\t\tcase 'Black':\r\n\t\t\treturn _elm_lang$core$Dict$BBlack;\r\n\t\tcase 'Red':\r\n\t\t\treturn _elm_lang$core$Dict$Black;\r\n\t\tcase 'NBlack':\r\n\t\t\treturn _elm_lang$core$Dict$Red;\r\n\t\tdefault:\r\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a double black node more black!');\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$lessBlack = function (color) {\r\n\tvar _p22 = color;\r\n\tswitch (_p22.ctor) {\r\n\t\tcase 'BBlack':\r\n\t\t\treturn _elm_lang$core$Dict$Black;\r\n\t\tcase 'Black':\r\n\t\t\treturn _elm_lang$core$Dict$Red;\r\n\t\tcase 'Red':\r\n\t\t\treturn _elm_lang$core$Dict$NBlack;\r\n\t\tdefault:\r\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a negative black node less black!');\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};\r\nvar _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};\r\nvar _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {\r\n\treturn {ctor: 'RBEmpty_elm_builtin', _0: a};\r\n};\r\nvar _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\nvar _elm_lang$core$Dict$isEmpty = function (dict) {\r\n\treturn _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);\r\n};\r\nvar _elm_lang$core$Dict$RBNode_elm_builtin = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};\r\n\t});\r\nvar _elm_lang$core$Dict$ensureBlackRoot = function (dict) {\r\n\tvar _p23 = dict;\r\n\tif ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {\r\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);\r\n\t} else {\r\n\t\treturn dict;\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$lessBlackTree = function (dict) {\r\n\tvar _p24 = dict;\r\n\tif (_p24.ctor === 'RBNode_elm_builtin') {\r\n\t\treturn A5(\r\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t_elm_lang$core$Dict$lessBlack(_p24._0),\r\n\t\t\t_p24._1,\r\n\t\t\t_p24._2,\r\n\t\t\t_p24._3,\r\n\t\t\t_p24._4);\r\n\t} else {\r\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$balancedTree = function (col) {\r\n\treturn function (xk) {\r\n\t\treturn function (xv) {\r\n\t\t\treturn function (yk) {\r\n\t\t\t\treturn function (yv) {\r\n\t\t\t\t\treturn function (zk) {\r\n\t\t\t\t\t\treturn function (zv) {\r\n\t\t\t\t\t\t\treturn function (a) {\r\n\t\t\t\t\t\t\t\treturn function (b) {\r\n\t\t\t\t\t\t\t\t\treturn function (c) {\r\n\t\t\t\t\t\t\t\t\t\treturn function (d) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn A5(\r\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$lessBlack(col),\r\n\t\t\t\t\t\t\t\t\t\t\t\tyk,\r\n\t\t\t\t\t\t\t\t\t\t\t\tyv,\r\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),\r\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n};\r\nvar _elm_lang$core$Dict$blacken = function (t) {\r\n\tvar _p25 = t;\r\n\tif (_p25.ctor === 'RBEmpty_elm_builtin') {\r\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t} else {\r\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$redden = function (t) {\r\n\tvar _p26 = t;\r\n\tif (_p26.ctor === 'RBEmpty_elm_builtin') {\r\n\t\treturn _elm_lang$core$Native_Debug.crash('can\\'t make a Leaf red');\r\n\t} else {\r\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);\r\n\t}\r\n};\r\nvar _elm_lang$core$Dict$balanceHelp = function (tree) {\r\n\tvar _p27 = tree;\r\n\t_v33_6:\r\n\tdo {\r\n\t\t_v33_5:\r\n\t\tdo {\r\n\t\t\t_v33_4:\r\n\t\t\tdo {\r\n\t\t\t\t_v33_3:\r\n\t\t\t\tdo {\r\n\t\t\t\t\t_v33_2:\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\t_v33_1:\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t_v33_0:\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\tif (_p27.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\tif (_p27._3.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_p27._0.ctor === 'BBlack') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\r\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_2;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_3;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_4;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak _v33_6;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} while(false);\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);\r\n\t\t\t\t\t\t} while(false);\r\n\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);\r\n\t\t\t\t\t} while(false);\r\n\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);\r\n\t\t\t\t} while(false);\r\n\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);\r\n\t\t\t} while(false);\r\n\t\t\treturn A5(\r\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t\t_p27._4._3._1,\r\n\t\t\t\t_p27._4._3._2,\r\n\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),\r\n\t\t\t\tA5(\r\n\t\t\t\t\t_elm_lang$core$Dict$balance,\r\n\t\t\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t\t\t_p27._4._1,\r\n\t\t\t\t\t_p27._4._2,\r\n\t\t\t\t\t_p27._4._3._4,\r\n\t\t\t\t\t_elm_lang$core$Dict$redden(_p27._4._4)));\r\n\t\t} while(false);\r\n\t\treturn A5(\r\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t_p27._3._4._1,\r\n\t\t\t_p27._3._4._2,\r\n\t\t\tA5(\r\n\t\t\t\t_elm_lang$core$Dict$balance,\r\n\t\t\t\t_elm_lang$core$Dict$Black,\r\n\t\t\t\t_p27._3._1,\r\n\t\t\t\t_p27._3._2,\r\n\t\t\t\t_elm_lang$core$Dict$redden(_p27._3._3),\r\n\t\t\t\t_p27._3._4._3),\r\n\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));\r\n\t} while(false);\r\n\treturn tree;\r\n};\r\nvar _elm_lang$core$Dict$balance = F5(\r\n\tfunction (c, k, v, l, r) {\r\n\t\tvar tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\r\n\t\treturn _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;\r\n\t});\r\nvar _elm_lang$core$Dict$bubble = F5(\r\n\tfunction (c, k, v, l, r) {\r\n\t\treturn (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(\r\n\t\t\t_elm_lang$core$Dict$balance,\r\n\t\t\t_elm_lang$core$Dict$moreBlack(c),\r\n\t\t\tk,\r\n\t\t\tv,\r\n\t\t\t_elm_lang$core$Dict$lessBlackTree(l),\r\n\t\t\t_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\r\n\t});\r\nvar _elm_lang$core$Dict$removeMax = F5(\r\n\tfunction (c, k, v, l, r) {\r\n\t\tvar _p28 = r;\r\n\t\tif (_p28.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\treturn A3(_elm_lang$core$Dict$rem, c, l, r);\r\n\t\t} else {\r\n\t\t\treturn A5(\r\n\t\t\t\t_elm_lang$core$Dict$bubble,\r\n\t\t\t\tc,\r\n\t\t\t\tk,\r\n\t\t\t\tv,\r\n\t\t\t\tl,\r\n\t\t\t\tA5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$rem = F3(\r\n\tfunction (c, l, r) {\r\n\t\tvar _p29 = {ctor: '_Tuple2', _0: l, _1: r};\r\n\t\tif (_p29._0.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\tvar _p30 = c;\r\n\t\t\t\tswitch (_p30.ctor) {\r\n\t\t\t\t\tcase 'Red':\r\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t\t\t\t\tcase 'Black':\r\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar _p33 = _p29._1._0;\r\n\t\t\t\tvar _p32 = _p29._0._0;\r\n\t\t\t\tvar _p31 = {ctor: '_Tuple3', _0: c, _1: _p32, _2: _p33};\r\n\t\t\t\tif ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {\r\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A4(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\r\n\t\t\t\t\t\t'Black/LBlack/Red',\r\n\t\t\t\t\t\tc,\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p32),\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p33));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\tvar _p36 = _p29._1._0;\r\n\t\t\t\tvar _p35 = _p29._0._0;\r\n\t\t\t\tvar _p34 = {ctor: '_Tuple3', _0: c, _1: _p35, _2: _p36};\r\n\t\t\t\tif ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {\r\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn A4(\r\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\r\n\t\t\t\t\t\t'Black/Red/LBlack',\r\n\t\t\t\t\t\tc,\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p35),\r\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p36));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar _p40 = _p29._0._2;\r\n\t\t\t\tvar _p39 = _p29._0._4;\r\n\t\t\t\tvar _p38 = _p29._0._1;\r\n\t\t\t\tvar l$ = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);\r\n\t\t\t\tvar _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);\r\n\t\t\t\tvar k = _p37._0;\r\n\t\t\t\tvar v = _p37._1;\r\n\t\t\t\treturn A5(_elm_lang$core$Dict$bubble, c, k, v, l$, r);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$map = F2(\r\n\tfunction (f, dict) {\r\n\t\tvar _p41 = dict;\r\n\t\tif (_p41.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\r\n\t\t} else {\r\n\t\t\tvar _p42 = _p41._1;\r\n\t\t\treturn A5(\r\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\r\n\t\t\t\t_p41._0,\r\n\t\t\t\t_p42,\r\n\t\t\t\tA2(f, _p42, _p41._2),\r\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._3),\r\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._4));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$Same = {ctor: 'Same'};\r\nvar _elm_lang$core$Dict$Remove = {ctor: 'Remove'};\r\nvar _elm_lang$core$Dict$Insert = {ctor: 'Insert'};\r\nvar _elm_lang$core$Dict$update = F3(\r\n\tfunction (k, alter, dict) {\r\n\t\tvar up = function (dict) {\r\n\t\t\tvar _p43 = dict;\r\n\t\t\tif (_p43.ctor === 'RBEmpty_elm_builtin') {\r\n\t\t\t\tvar _p44 = alter(_elm_lang$core$Maybe$Nothing);\r\n\t\t\t\tif (_p44.ctor === 'Nothing') {\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\r\n\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar _p55 = _p43._2;\r\n\t\t\t\tvar _p54 = _p43._4;\r\n\t\t\t\tvar _p53 = _p43._3;\r\n\t\t\t\tvar _p52 = _p43._1;\r\n\t\t\t\tvar _p51 = _p43._0;\r\n\t\t\t\tvar _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);\r\n\t\t\t\tswitch (_p45.ctor) {\r\n\t\t\t\t\tcase 'EQ':\r\n\t\t\t\t\t\tvar _p46 = alter(\r\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(_p55));\r\n\t\t\t\t\t\tif (_p46.ctor === 'Nothing') {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\r\n\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\r\n\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase 'LT':\r\n\t\t\t\t\t\tvar _p47 = up(_p53);\r\n\t\t\t\t\t\tvar flag = _p47._0;\r\n\t\t\t\t\t\tvar newLeft = _p47._1;\r\n\t\t\t\t\t\tvar _p48 = flag;\r\n\t\t\t\t\t\tswitch (_p48.ctor) {\r\n\t\t\t\t\t\t\tcase 'Same':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcase 'Insert':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvar _p49 = up(_p54);\r\n\t\t\t\t\t\tvar flag = _p49._0;\r\n\t\t\t\t\t\tvar newRight = _p49._1;\r\n\t\t\t\t\t\tvar _p50 = flag;\r\n\t\t\t\t\t\tswitch (_p50.ctor) {\r\n\t\t\t\t\t\t\tcase 'Same':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcase 'Insert':\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\r\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar _p56 = up(dict);\r\n\t\tvar flag = _p56._0;\r\n\t\tvar updatedDict = _p56._1;\r\n\t\tvar _p57 = flag;\r\n\t\tswitch (_p57.ctor) {\r\n\t\t\tcase 'Same':\r\n\t\t\t\treturn updatedDict;\r\n\t\t\tcase 'Insert':\r\n\t\t\t\treturn _elm_lang$core$Dict$ensureBlackRoot(updatedDict);\r\n\t\t\tdefault:\r\n\t\t\t\treturn _elm_lang$core$Dict$blacken(updatedDict);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Dict$insert = F3(\r\n\tfunction (key, value, dict) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\tkey,\r\n\t\t\t_elm_lang$core$Basics$always(\r\n\t\t\t\t_elm_lang$core$Maybe$Just(value)),\r\n\t\t\tdict);\r\n\t});\r\nvar _elm_lang$core$Dict$singleton = F2(\r\n\tfunction (key, value) {\r\n\t\treturn A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);\r\n\t});\r\nvar _elm_lang$core$Dict$union = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);\r\n\t});\r\nvar _elm_lang$core$Dict$filter = F2(\r\n\tfunction (predicate, dictionary) {\r\n\t\tvar add = F3(\r\n\t\t\tfunction (key, value, dict) {\r\n\t\t\t\treturn A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;\r\n\t\t\t});\r\n\t\treturn A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);\r\n\t});\r\nvar _elm_lang$core$Dict$intersect = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Dict$filter,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (k, _p58) {\r\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$member, k, t2);\r\n\t\t\t\t}),\r\n\t\t\tt1);\r\n\t});\r\nvar _elm_lang$core$Dict$partition = F2(\r\n\tfunction (predicate, dict) {\r\n\t\tvar add = F3(\r\n\t\t\tfunction (key, value, _p59) {\r\n\t\t\t\tvar _p60 = _p59;\r\n\t\t\t\tvar _p62 = _p60._1;\r\n\t\t\t\tvar _p61 = _p60._0;\r\n\t\t\t\treturn A2(predicate, key, value) ? {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),\r\n\t\t\t\t\t_1: _p62\r\n\t\t\t\t} : {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _p61,\r\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$foldl,\r\n\t\t\tadd,\r\n\t\t\t{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},\r\n\t\t\tdict);\r\n\t});\r\nvar _elm_lang$core$Dict$fromList = function (assocs) {\r\n\treturn A3(\r\n\t\t_elm_lang$core$List$foldl,\r\n\t\tF2(\r\n\t\t\tfunction (_p63, dict) {\r\n\t\t\t\tvar _p64 = _p63;\r\n\t\t\t\treturn A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);\r\n\t\t\t}),\r\n\t\t_elm_lang$core$Dict$empty,\r\n\t\tassocs);\r\n};\r\nvar _elm_lang$core$Dict$remove = F2(\r\n\tfunction (key, dict) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\tkey,\r\n\t\t\t_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),\r\n\t\t\tdict);\r\n\t});\r\nvar _elm_lang$core$Dict$diff = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Dict$foldl,\r\n\t\t\tF3(\r\n\t\t\t\tfunction (k, v, t) {\r\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$remove, k, t);\r\n\t\t\t\t}),\r\n\t\t\tt1,\r\n\t\t\tt2);\r\n\t});\r\n\r\n//import Native.Scheduler //\r\n\r\nvar _elm_lang$core$Native_Time = function() {\r\n\r\nvar now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n{\r\n\tcallback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));\r\n});\r\n\r\nfunction setInterval_(interval, task)\r\n{\r\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\r\n\t{\r\n\t\tvar id = setInterval(function() {\r\n\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(task);\r\n\t\t}, interval);\r\n\r\n\t\treturn function() { clearInterval(id); };\r\n\t});\r\n}\r\n\r\nreturn {\r\n\tnow: now,\r\n\tsetInterval_: F2(setInterval_)\r\n};\r\n\r\n}();\r\nvar _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;\r\nvar _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(\r\n\t_elm_lang$core$Native_List.fromArray(\r\n\t\t[]));\r\nvar _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;\r\nvar _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};\r\n\r\nvar _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;\r\nvar _elm_lang$core$Time$spawnHelp = F3(\r\n\tfunction (router, intervals, processes) {\r\n\t\tvar _p0 = intervals;\r\n\t\tif (_p0.ctor === '[]') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(processes);\r\n\t\t} else {\r\n\t\t\tvar _p1 = _p0._0;\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t_elm_lang$core$Native_Scheduler.spawn(\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Time$setInterval,\r\n\t\t\t\t\t\t_p1,\r\n\t\t\t\t\t\tA2(_elm_lang$core$Platform$sendToSelf, router, _p1))),\r\n\t\t\t\tfunction (id) {\r\n\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t_elm_lang$core$Time$spawnHelp,\r\n\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t_p0._1,\r\n\t\t\t\t\t\tA3(_elm_lang$core$Dict$insert, _p1, id, processes));\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Time$addMySub = F2(\r\n\tfunction (_p2, state) {\r\n\t\tvar _p3 = _p2;\r\n\t\tvar _p6 = _p3._1;\r\n\t\tvar _p5 = _p3._0;\r\n\t\tvar _p4 = A2(_elm_lang$core$Dict$get, _p5, state);\r\n\t\tif (_p4.ctor === 'Nothing') {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t_p5,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[_p6]),\r\n\t\t\t\tstate);\r\n\t\t} else {\r\n\t\t\treturn A3(\r\n\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t_p5,\r\n\t\t\t\tA2(_elm_lang$core$List_ops['::'], _p6, _p4._0),\r\n\t\t\t\tstate);\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Time$inMilliseconds = function (t) {\r\n\treturn t;\r\n};\r\nvar _elm_lang$core$Time$millisecond = 1;\r\nvar _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;\r\nvar _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;\r\nvar _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;\r\nvar _elm_lang$core$Time$inHours = function (t) {\r\n\treturn t / _elm_lang$core$Time$hour;\r\n};\r\nvar _elm_lang$core$Time$inMinutes = function (t) {\r\n\treturn t / _elm_lang$core$Time$minute;\r\n};\r\nvar _elm_lang$core$Time$inSeconds = function (t) {\r\n\treturn t / _elm_lang$core$Time$second;\r\n};\r\nvar _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;\r\nvar _elm_lang$core$Time$onSelfMsg = F3(\r\n\tfunction (router, interval, state) {\r\n\t\tvar _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);\r\n\t\tif (_p7.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t} else {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t_elm_lang$core$Time$now,\r\n\t\t\t\tfunction (time) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t_elm_lang$core$Task$sequence(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\t\t\tfunction (tagger) {\r\n\t\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\r\n\t\t\t\t\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t\t\t\t\ttagger(time));\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t_p7._0)),\r\n\t\t\t\t\t\tfunction (_p8) {\r\n\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');\r\nvar _elm_lang$core$Time$State = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {taggers: a, processes: b};\r\n\t});\r\nvar _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(\r\n\tA2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));\r\nvar _elm_lang$core$Time$onEffects = F3(\r\n\tfunction (router, subs, _p9) {\r\n\t\tvar _p10 = _p9;\r\n\t\tvar rightStep = F3(\r\n\t\t\tfunction (_p12, id, _p11) {\r\n\t\t\t\tvar _p13 = _p11;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t\t_0: _p13._0,\r\n\t\t\t\t\t_1: _p13._1,\r\n\t\t\t\t\t_2: A2(\r\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t_elm_lang$core$Native_Scheduler.kill(id),\r\n\t\t\t\t\t\tfunction (_p14) {\r\n\t\t\t\t\t\t\treturn _p13._2;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar bothStep = F4(\r\n\t\t\tfunction (interval, taggers, id, _p15) {\r\n\t\t\t\tvar _p16 = _p15;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t\t_0: _p16._0,\r\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),\r\n\t\t\t\t\t_2: _p16._2\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar leftStep = F3(\r\n\t\t\tfunction (interval, taggers, _p17) {\r\n\t\t\t\tvar _p18 = _p17;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t\t_0: A2(_elm_lang$core$List_ops['::'], interval, _p18._0),\r\n\t\t\t\t\t_1: _p18._1,\r\n\t\t\t\t\t_2: _p18._2\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\tvar newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);\r\n\t\tvar _p19 = A6(\r\n\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\tleftStep,\r\n\t\t\tbothStep,\r\n\t\t\trightStep,\r\n\t\t\tnewTaggers,\r\n\t\t\t_p10.processes,\r\n\t\t\t{\r\n\t\t\t\tctor: '_Tuple3',\r\n\t\t\t\t_0: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[]),\r\n\t\t\t\t_1: _elm_lang$core$Dict$empty,\r\n\t\t\t\t_2: _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t{ctor: '_Tuple0'})\r\n\t\t\t});\r\n\t\tvar spawnList = _p19._0;\r\n\t\tvar existingDict = _p19._1;\r\n\t\tvar killTask = _p19._2;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tkillTask,\r\n\t\t\tfunction (_p20) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\tA3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict),\r\n\t\t\t\t\tfunction (newProcesses) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$Time$State, newTaggers, newProcesses));\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Time$Every = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Every', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$core$Time$every = F2(\r\n\tfunction (interval, tagger) {\r\n\t\treturn _elm_lang$core$Time$subscription(\r\n\t\t\tA2(_elm_lang$core$Time$Every, interval, tagger));\r\n\t});\r\nvar _elm_lang$core$Time$subMap = F2(\r\n\tfunction (f, _p21) {\r\n\t\tvar _p22 = _p21;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Time$Every,\r\n\t\t\t_p22._0,\r\n\t\t\tfunction (_p23) {\r\n\t\t\t\treturn f(\r\n\t\t\t\t\t_p22._1(_p23));\r\n\t\t\t});\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};\r\n\r\nvar _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;\r\nvar _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;\r\n\r\n//import Maybe, Native.Array, Native.List, Native.Utils, Result //\r\n\r\nvar _elm_lang$core$Native_Json = function() {\r\n\r\n\r\n// CORE DECODERS\r\n\r\nfunction succeed(msg)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'succeed',\r\n\t\tmsg: msg\r\n\t};\r\n}\r\n\r\nfunction fail(msg)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'fail',\r\n\t\tmsg: msg\r\n\t};\r\n}\r\n\r\nfunction decodePrimitive(tag)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: tag\r\n\t};\r\n}\r\n\r\nfunction decodeContainer(tag, decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: tag,\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction decodeNull(value)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'null',\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\nfunction decodeField(field, decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'field',\r\n\t\tfield: field,\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction decodeKeyValuePairs(decoder)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'key-value',\r\n\t\tdecoder: decoder\r\n\t};\r\n}\r\n\r\nfunction decodeObject(f, decoders)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'map-many',\r\n\t\tfunc: f,\r\n\t\tdecoders: decoders\r\n\t};\r\n}\r\n\r\nfunction decodeTuple(f, decoders)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'tuple',\r\n\t\tfunc: f,\r\n\t\tdecoders: decoders\r\n\t};\r\n}\r\n\r\nfunction andThen(decoder, callback)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'andThen',\r\n\t\tdecoder: decoder,\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\nfunction customAndThen(decoder, callback)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'customAndThen',\r\n\t\tdecoder: decoder,\r\n\t\tcallback: callback\r\n\t};\r\n}\r\n\r\nfunction oneOf(decoders)\r\n{\r\n\treturn {\r\n\t\tctor: '<decoder>',\r\n\t\ttag: 'oneOf',\r\n\t\tdecoders: decoders\r\n\t};\r\n}\r\n\r\n\r\n// DECODING OBJECTS\r\n\r\nfunction decodeObject1(f, d1)\r\n{\r\n\treturn decodeObject(f, [d1]);\r\n}\r\n\r\nfunction decodeObject2(f, d1, d2)\r\n{\r\n\treturn decodeObject(f, [d1, d2]);\r\n}\r\n\r\nfunction decodeObject3(f, d1, d2, d3)\r\n{\r\n\treturn decodeObject(f, [d1, d2, d3]);\r\n}\r\n\r\nfunction decodeObject4(f, d1, d2, d3, d4)\r\n{\r\n\treturn decodeObject(f, [d1, d2, d3, d4]);\r\n}\r\n\r\nfunction decodeObject5(f, d1, d2, d3, d4, d5)\r\n{\r\n\treturn decodeObject(f, [d1, d2, d3, d4, d5]);\r\n}\r\n\r\nfunction decodeObject6(f, d1, d2, d3, d4, d5, d6)\r\n{\r\n\treturn decodeObject(f, [d1, d2, d3, d4, d5, d6]);\r\n}\r\n\r\nfunction decodeObject7(f, d1, d2, d3, d4, d5, d6, d7)\r\n{\r\n\treturn decodeObject(f, [d1, d2, d3, d4, d5, d6, d7]);\r\n}\r\n\r\nfunction decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8)\r\n{\r\n\treturn decodeObject(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\r\n}\r\n\r\n\r\n// DECODING TUPLES\r\n\r\nfunction decodeTuple1(f, d1)\r\n{\r\n\treturn decodeTuple(f, [d1]);\r\n}\r\n\r\nfunction decodeTuple2(f, d1, d2)\r\n{\r\n\treturn decodeTuple(f, [d1, d2]);\r\n}\r\n\r\nfunction decodeTuple3(f, d1, d2, d3)\r\n{\r\n\treturn decodeTuple(f, [d1, d2, d3]);\r\n}\r\n\r\nfunction decodeTuple4(f, d1, d2, d3, d4)\r\n{\r\n\treturn decodeTuple(f, [d1, d2, d3, d4]);\r\n}\r\n\r\nfunction decodeTuple5(f, d1, d2, d3, d4, d5)\r\n{\r\n\treturn decodeTuple(f, [d1, d2, d3, d4, d5]);\r\n}\r\n\r\nfunction decodeTuple6(f, d1, d2, d3, d4, d5, d6)\r\n{\r\n\treturn decodeTuple(f, [d1, d2, d3, d4, d5, d6]);\r\n}\r\n\r\nfunction decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7)\r\n{\r\n\treturn decodeTuple(f, [d1, d2, d3, d4, d5, d6, d7]);\r\n}\r\n\r\nfunction decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8)\r\n{\r\n\treturn decodeTuple(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\r\n}\r\n\r\n\r\n// DECODE HELPERS\r\n\r\nfunction ok(value)\r\n{\r\n\treturn { tag: 'ok', value: value };\r\n}\r\n\r\nfunction badPrimitive(type, value)\r\n{\r\n\treturn { tag: 'primitive', type: type, value: value };\r\n}\r\n\r\nfunction badIndex(index, nestedProblems)\r\n{\r\n\treturn { tag: 'index', index: index, rest: nestedProblems };\r\n}\r\n\r\nfunction badField(field, nestedProblems)\r\n{\r\n\treturn { tag: 'field', field: field, rest: nestedProblems };\r\n}\r\n\r\nfunction badOneOf(problems)\r\n{\r\n\treturn { tag: 'oneOf', problems: problems };\r\n}\r\n\r\nvar bad = { tag: 'fail' };\r\n\r\nfunction badToString(problem)\r\n{\r\n\tvar context = '_';\r\n\twhile (problem)\r\n\t{\r\n\t\tswitch (problem.tag)\r\n\t\t{\r\n\t\t\tcase 'primitive':\r\n\t\t\t\treturn 'Expecting ' + problem.type\r\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\r\n\t\t\t\t\t+ ' but instead got: ' + jsToString(problem.value);\r\n\r\n\t\t\tcase 'index':\r\n\t\t\t\tcontext += '[' + problem.index + ']';\r\n\t\t\t\tproblem = problem.rest;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'field':\r\n\t\t\t\tcontext += '.' + problem.field;\r\n\t\t\t\tproblem = problem.rest;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'oneOf':\r\n\t\t\t\tvar problems = problem.problems;\r\n\t\t\t\tfor (var i = 0; i < problems.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tproblems[i] = badToString(problems[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn 'I ran into the following problems'\r\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\r\n\t\t\t\t\t+ ':\\n\\n' + problems.join('\\n');\r\n\r\n\t\t\tcase 'fail':\r\n\t\t\t\treturn 'I ran into a `fail` decoder'\r\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction jsToString(value)\r\n{\r\n\treturn value === undefined\r\n\t\t? 'undefined'\r\n\t\t: JSON.stringify(value);\r\n}\r\n\r\n\r\n// DECODE\r\n\r\nfunction runOnString(decoder, string)\r\n{\r\n\tvar json;\r\n\ttry\r\n\t{\r\n\t\tjson = JSON.parse(string);\r\n\t}\r\n\tcatch (e)\r\n\t{\r\n\t\treturn _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);\r\n\t}\r\n\treturn run(decoder, json);\r\n}\r\n\r\nfunction run(decoder, value)\r\n{\r\n\tvar result = runHelp(decoder, value);\r\n\treturn (result.tag === 'ok')\r\n\t\t? _elm_lang$core$Result$Ok(result.value)\r\n\t\t: _elm_lang$core$Result$Err(badToString(result));\r\n}\r\n\r\nfunction runHelp(decoder, value)\r\n{\r\n\tswitch (decoder.tag)\r\n\t{\r\n\t\tcase 'bool':\r\n\t\t\treturn (typeof value === 'boolean')\r\n\t\t\t\t? ok(value)\r\n\t\t\t\t: badPrimitive('a Bool', value);\r\n\r\n\t\tcase 'int':\r\n\t\t\tvar isNotInt =\r\n\t\t\t\ttypeof value !== 'number'\r\n\t\t\t\t|| !(-2147483647 < value && value < 2147483647 && (value | 0) === value)\r\n\t\t\t\t|| !(isFinite(value) && !(value % 1));\r\n\r\n\t\t\treturn isNotInt\r\n\t\t\t\t? badPrimitive('an Int', value)\r\n\t\t\t\t: ok(value);\r\n\r\n\t\tcase 'float':\r\n\t\t\treturn (typeof value === 'number')\r\n\t\t\t\t? ok(value)\r\n\t\t\t\t: badPrimitive('a Float', value);\r\n\r\n\t\tcase 'string':\r\n\t\t\treturn (typeof value === 'string')\r\n\t\t\t\t? ok(value)\r\n\t\t\t\t: (value instanceof String)\r\n\t\t\t\t\t? ok(value + '')\r\n\t\t\t\t\t: badPrimitive('a String', value);\r\n\r\n\t\tcase 'null':\r\n\t\t\treturn (value === null)\r\n\t\t\t\t? ok(decoder.value)\r\n\t\t\t\t: badPrimitive('null', value);\r\n\r\n\t\tcase 'value':\r\n\t\t\treturn ok(value);\r\n\r\n\t\tcase 'list':\r\n\t\t\tif (!(value instanceof Array))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('a List', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar list = _elm_lang$core$Native_List.Nil;\r\n\t\t\tfor (var i = value.length; i--; )\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badIndex(i, result)\r\n\t\t\t\t}\r\n\t\t\t\tlist = _elm_lang$core$Native_List.Cons(result.value, list);\r\n\t\t\t}\r\n\t\t\treturn ok(list);\r\n\r\n\t\tcase 'array':\r\n\t\t\tif (!(value instanceof Array))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('an Array', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar len = value.length;\r\n\t\t\tvar array = new Array(len);\r\n\t\t\tfor (var i = len; i--; )\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badIndex(i, result);\r\n\t\t\t\t}\r\n\t\t\t\tarray[i] = result.value;\r\n\t\t\t}\r\n\t\t\treturn ok(_elm_lang$core$Native_Array.fromJSArray(array));\r\n\r\n\t\tcase 'maybe':\r\n\t\t\tvar result = runHelp(decoder.decoder, value);\r\n\t\t\treturn (result.tag === 'ok')\r\n\t\t\t\t? ok(_elm_lang$core$Maybe$Just(result.value))\r\n\t\t\t\t: ok(_elm_lang$core$Maybe$Nothing);\r\n\r\n\t\tcase 'field':\r\n\t\t\tvar field = decoder.field;\r\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('an object with a field named `' + field + '`', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar result = runHelp(decoder.decoder, value[field]);\r\n\t\t\treturn (result.tag === 'ok')\r\n\t\t\t\t? result\r\n\t\t\t\t: badField(field, result);\r\n\r\n\t\tcase 'key-value':\r\n\t\t\tif (typeof value !== 'object' || value === null || value instanceof Array)\r\n\t\t\t{\r\n\t\t\t\treturn err('an object', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar keyValuePairs = _elm_lang$core$Native_List.Nil;\r\n\t\t\tfor (var key in value)\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoder.decoder, value[key]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badField(key, result);\r\n\t\t\t\t}\r\n\t\t\t\tvar pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);\r\n\t\t\t\tkeyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);\r\n\t\t\t}\r\n\t\t\treturn ok(keyValuePairs);\r\n\r\n\t\tcase 'map-many':\r\n\t\t\tvar answer = decoder.func;\r\n\t\t\tvar decoders = decoder.decoders;\r\n\t\t\tfor (var i = 0; i < decoders.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoders[i], value);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tanswer = answer(result.value);\r\n\t\t\t}\r\n\t\t\treturn ok(answer);\r\n\r\n\t\tcase 'tuple':\r\n\t\t\tvar decoders = decoder.decoders;\r\n\t\t\tvar len = decoders.length;\r\n\r\n\t\t\tif ( !(value instanceof Array) || value.length !== len )\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('a Tuple with ' + len + ' entries', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar answer = decoder.func;\r\n\t\t\tfor (var i = 0; i < len; i++)\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(decoders[i], value[i]);\r\n\t\t\t\tif (result.tag !== 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn badIndex(i, result);\r\n\t\t\t\t}\r\n\t\t\t\tanswer = answer(result.value);\r\n\t\t\t}\r\n\t\t\treturn ok(answer);\r\n\r\n\t\tcase 'customAndThen':\r\n\t\t\tvar result = runHelp(decoder.decoder, value);\r\n\t\t\tif (result.tag !== 'ok')\r\n\t\t\t{\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tvar realResult = decoder.callback(result.value);\r\n\t\t\tif (realResult.ctor === 'Err')\r\n\t\t\t{\r\n\t\t\t\treturn badPrimitive('something custom', value);\r\n\t\t\t}\r\n\t\t\treturn ok(realResult._0);\r\n\r\n\t\tcase 'andThen':\r\n\t\t\tvar result = runHelp(decoder.decoder, value);\r\n\t\t\treturn (result.tag !== 'ok')\r\n\t\t\t\t? result\r\n\t\t\t\t: runHelp(decoder.callback(result.value), value);\r\n\r\n\t\tcase 'oneOf':\r\n\t\t\tvar errors = [];\r\n\t\t\tvar temp = decoder.decoders;\r\n\t\t\twhile (temp.ctor !== '[]')\r\n\t\t\t{\r\n\t\t\t\tvar result = runHelp(temp._0, value);\r\n\r\n\t\t\t\tif (result.tag === 'ok')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\terrors.push(result);\r\n\r\n\t\t\t\ttemp = temp._1;\r\n\t\t\t}\r\n\t\t\treturn badOneOf(errors);\r\n\r\n\t\tcase 'fail':\r\n\t\t\treturn bad;\r\n\r\n\t\tcase 'succeed':\r\n\t\t\treturn ok(decoder.msg);\r\n\t}\r\n}\r\n\r\n\r\n// EQUALITY\r\n\r\nfunction equality(a, b)\r\n{\r\n\tif (a === b)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (a.tag !== b.tag)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tswitch (a.tag)\r\n\t{\r\n\t\tcase 'succeed':\r\n\t\tcase 'fail':\r\n\t\t\treturn a.msg === b.msg;\r\n\r\n\t\tcase 'bool':\r\n\t\tcase 'int':\r\n\t\tcase 'float':\r\n\t\tcase 'string':\r\n\t\tcase 'value':\r\n\t\t\treturn true;\r\n\r\n\t\tcase 'null':\r\n\t\t\treturn a.value === b.value;\r\n\r\n\t\tcase 'list':\r\n\t\tcase 'array':\r\n\t\tcase 'maybe':\r\n\t\tcase 'key-value':\r\n\t\t\treturn equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'field':\r\n\t\t\treturn a.field === b.field && equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'map-many':\r\n\t\tcase 'tuple':\r\n\t\t\tif (a.func !== b.func)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn listEquality(a.decoders, b.decoders);\r\n\r\n\t\tcase 'andThen':\r\n\t\tcase 'customAndThen':\r\n\t\t\treturn a.callback === b.callback && equality(a.decoder, b.decoder);\r\n\r\n\t\tcase 'oneOf':\r\n\t\t\treturn listEquality(a.decoders, b.decoders);\r\n\t}\r\n}\r\n\r\nfunction listEquality(aDecoders, bDecoders)\r\n{\r\n\tvar len = aDecoders.length;\r\n\tif (len !== bDecoders.length)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < len; i++)\r\n\t{\r\n\t\tif (!equality(aDecoders[i], bDecoders[i]))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n\r\n// ENCODE\r\n\r\nfunction encode(indentLevel, value)\r\n{\r\n\treturn JSON.stringify(value, null, indentLevel);\r\n}\r\n\r\nfunction identity(value)\r\n{\r\n\treturn value;\r\n}\r\n\r\nfunction encodeObject(keyValuePairs)\r\n{\r\n\tvar obj = {};\r\n\twhile (keyValuePairs.ctor !== '[]')\r\n\t{\r\n\t\tvar pair = keyValuePairs._0;\r\n\t\tobj[pair._0] = pair._1;\r\n\t\tkeyValuePairs = keyValuePairs._1;\r\n\t}\r\n\treturn obj;\r\n}\r\n\r\nreturn {\r\n\tencode: F2(encode),\r\n\trunOnString: F2(runOnString),\r\n\trun: F2(run),\r\n\r\n\tdecodeNull: decodeNull,\r\n\tdecodePrimitive: decodePrimitive,\r\n\tdecodeContainer: F2(decodeContainer),\r\n\r\n\tdecodeField: F2(decodeField),\r\n\r\n\tdecodeObject1: F2(decodeObject1),\r\n\tdecodeObject2: F3(decodeObject2),\r\n\tdecodeObject3: F4(decodeObject3),\r\n\tdecodeObject4: F5(decodeObject4),\r\n\tdecodeObject5: F6(decodeObject5),\r\n\tdecodeObject6: F7(decodeObject6),\r\n\tdecodeObject7: F8(decodeObject7),\r\n\tdecodeObject8: F9(decodeObject8),\r\n\tdecodeKeyValuePairs: decodeKeyValuePairs,\r\n\r\n\tdecodeTuple1: F2(decodeTuple1),\r\n\tdecodeTuple2: F3(decodeTuple2),\r\n\tdecodeTuple3: F4(decodeTuple3),\r\n\tdecodeTuple4: F5(decodeTuple4),\r\n\tdecodeTuple5: F6(decodeTuple5),\r\n\tdecodeTuple6: F7(decodeTuple6),\r\n\tdecodeTuple7: F8(decodeTuple7),\r\n\tdecodeTuple8: F9(decodeTuple8),\r\n\r\n\tandThen: F2(andThen),\r\n\tcustomAndThen: F2(customAndThen),\r\n\tfail: fail,\r\n\tsucceed: succeed,\r\n\toneOf: oneOf,\r\n\r\n\tidentity: identity,\r\n\tencodeNull: null,\r\n\tencodeArray: _elm_lang$core$Native_Array.toJSArray,\r\n\tencodeList: _elm_lang$core$Native_List.toArray,\r\n\tencodeObject: encodeObject,\r\n\r\n\tequality: equality\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;\r\nvar _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;\r\nvar _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;\r\nvar _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;\r\nvar _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;\r\nvar _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;\r\nvar _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};\r\n\r\nvar _elm_lang$core$Json_Decode$tuple8 = _elm_lang$core$Native_Json.decodeTuple8;\r\nvar _elm_lang$core$Json_Decode$tuple7 = _elm_lang$core$Native_Json.decodeTuple7;\r\nvar _elm_lang$core$Json_Decode$tuple6 = _elm_lang$core$Native_Json.decodeTuple6;\r\nvar _elm_lang$core$Json_Decode$tuple5 = _elm_lang$core$Native_Json.decodeTuple5;\r\nvar _elm_lang$core$Json_Decode$tuple4 = _elm_lang$core$Native_Json.decodeTuple4;\r\nvar _elm_lang$core$Json_Decode$tuple3 = _elm_lang$core$Native_Json.decodeTuple3;\r\nvar _elm_lang$core$Json_Decode$tuple2 = _elm_lang$core$Native_Json.decodeTuple2;\r\nvar _elm_lang$core$Json_Decode$tuple1 = _elm_lang$core$Native_Json.decodeTuple1;\r\nvar _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;\r\nvar _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;\r\nvar _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;\r\nvar _elm_lang$core$Json_Decode$customDecoder = _elm_lang$core$Native_Json.customAndThen;\r\nvar _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;\r\nvar _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');\r\nvar _elm_lang$core$Json_Decode$maybe = function (decoder) {\r\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);\r\n};\r\nvar _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;\r\nvar _elm_lang$core$Json_Decode$array = function (decoder) {\r\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);\r\n};\r\nvar _elm_lang$core$Json_Decode$list = function (decoder) {\r\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);\r\n};\r\nvar _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');\r\nvar _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');\r\nvar _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');\r\nvar _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');\r\nvar _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;\r\nvar _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;\r\nvar _elm_lang$core$Json_Decode$object8 = _elm_lang$core$Native_Json.decodeObject8;\r\nvar _elm_lang$core$Json_Decode$object7 = _elm_lang$core$Native_Json.decodeObject7;\r\nvar _elm_lang$core$Json_Decode$object6 = _elm_lang$core$Native_Json.decodeObject6;\r\nvar _elm_lang$core$Json_Decode$object5 = _elm_lang$core$Native_Json.decodeObject5;\r\nvar _elm_lang$core$Json_Decode$object4 = _elm_lang$core$Native_Json.decodeObject4;\r\nvar _elm_lang$core$Json_Decode$object3 = _elm_lang$core$Native_Json.decodeObject3;\r\nvar _elm_lang$core$Json_Decode$object2 = _elm_lang$core$Native_Json.decodeObject2;\r\nvar _elm_lang$core$Json_Decode$object1 = _elm_lang$core$Native_Json.decodeObject1;\r\nvar _elm_lang$core$Json_Decode_ops = _elm_lang$core$Json_Decode_ops || {};\r\n_elm_lang$core$Json_Decode_ops[':='] = _elm_lang$core$Native_Json.decodeField;\r\nvar _elm_lang$core$Json_Decode$at = F2(\r\n\tfunction (fields, decoder) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$List$foldr,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (x, y) {\r\n\t\t\t\t\treturn A2(_elm_lang$core$Json_Decode_ops[':='], x, y);\r\n\t\t\t\t}),\r\n\t\t\tdecoder,\r\n\t\t\tfields);\r\n\t});\r\nvar _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;\r\nvar _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.decodeObject1;\r\nvar _elm_lang$core$Json_Decode$dict = function (decoder) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Json_Decode$map,\r\n\t\t_elm_lang$core$Dict$fromList,\r\n\t\t_elm_lang$core$Json_Decode$keyValuePairs(decoder));\r\n};\r\nvar _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};\r\n\r\n//import Maybe, Native.List //\r\n\r\nvar _elm_lang$core$Native_Regex = function() {\r\n\r\nfunction escape(str)\r\n{\r\n\treturn str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\nfunction caseInsensitive(re)\r\n{\r\n\treturn new RegExp(re.source, 'gi');\r\n}\r\nfunction regex(raw)\r\n{\r\n\treturn new RegExp(raw, 'g');\r\n}\r\n\r\nfunction contains(re, string)\r\n{\r\n\treturn string.match(re) !== null;\r\n}\r\n\r\nfunction find(n, re, str)\r\n{\r\n\tn = n.ctor === 'All' ? Infinity : n._0;\r\n\tvar out = [];\r\n\tvar number = 0;\r\n\tvar string = str;\r\n\tvar lastIndex = re.lastIndex;\r\n\tvar prevLastIndex = -1;\r\n\tvar result;\r\n\twhile (number++ < n && (result = re.exec(string)))\r\n\t{\r\n\t\tif (prevLastIndex === re.lastIndex) break;\r\n\t\tvar i = result.length - 1;\r\n\t\tvar subs = new Array(i);\r\n\t\twhile (i > 0)\r\n\t\t{\r\n\t\t\tvar submatch = result[i];\r\n\t\t\tsubs[--i] = submatch === undefined\r\n\t\t\t\t? _elm_lang$core$Maybe$Nothing\r\n\t\t\t\t: _elm_lang$core$Maybe$Just(submatch);\r\n\t\t}\r\n\t\tout.push({\r\n\t\t\tmatch: result[0],\r\n\t\t\tsubmatches: _elm_lang$core$Native_List.fromArray(subs),\r\n\t\t\tindex: result.index,\r\n\t\t\tnumber: number\r\n\t\t});\r\n\t\tprevLastIndex = re.lastIndex;\r\n\t}\r\n\tre.lastIndex = lastIndex;\r\n\treturn _elm_lang$core$Native_List.fromArray(out);\r\n}\r\n\r\nfunction replace(n, re, replacer, string)\r\n{\r\n\tn = n.ctor === 'All' ? Infinity : n._0;\r\n\tvar count = 0;\r\n\tfunction jsReplacer(match)\r\n\t{\r\n\t\tif (count++ >= n)\r\n\t\t{\r\n\t\t\treturn match;\r\n\t\t}\r\n\t\tvar i = arguments.length - 3;\r\n\t\tvar submatches = new Array(i);\r\n\t\twhile (i > 0)\r\n\t\t{\r\n\t\t\tvar submatch = arguments[i];\r\n\t\t\tsubmatches[--i] = submatch === undefined\r\n\t\t\t\t? _elm_lang$core$Maybe$Nothing\r\n\t\t\t\t: _elm_lang$core$Maybe$Just(submatch);\r\n\t\t}\r\n\t\treturn replacer({\r\n\t\t\tmatch: match,\r\n\t\t\tsubmatches: _elm_lang$core$Native_List.fromArray(submatches),\r\n\t\t\tindex: arguments[i - 1],\r\n\t\t\tnumber: count\r\n\t\t});\r\n\t}\r\n\treturn string.replace(re, jsReplacer);\r\n}\r\n\r\nfunction split(n, re, str)\r\n{\r\n\tn = n.ctor === 'All' ? Infinity : n._0;\r\n\tif (n === Infinity)\r\n\t{\r\n\t\treturn _elm_lang$core$Native_List.fromArray(str.split(re));\r\n\t}\r\n\tvar string = str;\r\n\tvar result;\r\n\tvar out = [];\r\n\tvar start = re.lastIndex;\r\n\twhile (n--)\r\n\t{\r\n\t\tif (!(result = re.exec(string))) break;\r\n\t\tout.push(string.slice(start, result.index));\r\n\t\tstart = re.lastIndex;\r\n\t}\r\n\tout.push(string.slice(start));\r\n\treturn _elm_lang$core$Native_List.fromArray(out);\r\n}\r\n\r\nreturn {\r\n\tregex: regex,\r\n\tcaseInsensitive: caseInsensitive,\r\n\tescape: escape,\r\n\r\n\tcontains: F2(contains),\r\n\tfind: F3(find),\r\n\treplace: F4(replace),\r\n\tsplit: F3(split)\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;\r\nvar _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;\r\nvar _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;\r\n\r\nvar _elm_lang$core$Random$onSelfMsg = F3(\r\n\tfunction (_p1, _p0, seed) {\r\n\t\treturn _elm_lang$core$Task$succeed(seed);\r\n\t});\r\nvar _elm_lang$core$Random$magicNum8 = 2147483562;\r\nvar _elm_lang$core$Random$range = function (_p2) {\r\n\treturn {ctor: '_Tuple2', _0: 0, _1: _elm_lang$core$Random$magicNum8};\r\n};\r\nvar _elm_lang$core$Random$magicNum7 = 2137383399;\r\nvar _elm_lang$core$Random$magicNum6 = 2147483563;\r\nvar _elm_lang$core$Random$magicNum5 = 3791;\r\nvar _elm_lang$core$Random$magicNum4 = 40692;\r\nvar _elm_lang$core$Random$magicNum3 = 52774;\r\nvar _elm_lang$core$Random$magicNum2 = 12211;\r\nvar _elm_lang$core$Random$magicNum1 = 53668;\r\nvar _elm_lang$core$Random$magicNum0 = 40014;\r\nvar _elm_lang$core$Random$step = F2(\r\n\tfunction (_p3, seed) {\r\n\t\tvar _p4 = _p3;\r\n\t\treturn _p4._0(seed);\r\n\t});\r\nvar _elm_lang$core$Random$onEffects = F3(\r\n\tfunction (router, commands, seed) {\r\n\t\tvar _p5 = commands;\r\n\t\tif (_p5.ctor === '[]') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(seed);\r\n\t\t} else {\r\n\t\t\tvar _p6 = A2(_elm_lang$core$Random$step, _p5._0._0, seed);\r\n\t\t\tvar value = _p6._0;\r\n\t\t\tvar newSeed = _p6._1;\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\tA2(_elm_lang$core$Platform$sendToApp, router, value),\r\n\t\t\t\tfunction (_p7) {\r\n\t\t\t\t\treturn A3(_elm_lang$core$Random$onEffects, router, _p5._1, newSeed);\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Random$listHelp = F4(\r\n\tfunction (list, n, generate, seed) {\r\n\t\tlistHelp:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 1) < 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$List$reverse(list),\r\n\t\t\t\t\t_1: seed\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tvar _p8 = generate(seed);\r\n\t\t\t\tvar value = _p8._0;\r\n\t\t\t\tvar newSeed = _p8._1;\r\n\t\t\t\tvar _v2 = A2(_elm_lang$core$List_ops['::'], value, list),\r\n\t\t\t\t\t_v3 = n - 1,\r\n\t\t\t\t\t_v4 = generate,\r\n\t\t\t\t\t_v5 = newSeed;\r\n\t\t\t\tlist = _v2;\r\n\t\t\t\tn = _v3;\r\n\t\t\t\tgenerate = _v4;\r\n\t\t\t\tseed = _v5;\r\n\t\t\t\tcontinue listHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$core$Random$minInt = -2147483648;\r\nvar _elm_lang$core$Random$maxInt = 2147483647;\r\nvar _elm_lang$core$Random$iLogBase = F2(\r\n\tfunction (b, i) {\r\n\t\treturn (_elm_lang$core$Native_Utils.cmp(i, b) < 0) ? 1 : (1 + A2(_elm_lang$core$Random$iLogBase, b, (i / b) | 0));\r\n\t});\r\nvar _elm_lang$core$Random$command = _elm_lang$core$Native_Platform.leaf('Random');\r\nvar _elm_lang$core$Random$Generator = function (a) {\r\n\treturn {ctor: 'Generator', _0: a};\r\n};\r\nvar _elm_lang$core$Random$list = F2(\r\n\tfunction (n, _p9) {\r\n\t\tvar _p10 = _p9;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed) {\r\n\t\t\t\treturn A4(\r\n\t\t\t\t\t_elm_lang$core$Random$listHelp,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]),\r\n\t\t\t\t\tn,\r\n\t\t\t\t\t_p10._0,\r\n\t\t\t\t\tseed);\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$map = F2(\r\n\tfunction (func, _p11) {\r\n\t\tvar _p12 = _p11;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed0) {\r\n\t\t\t\tvar _p13 = _p12._0(seed0);\r\n\t\t\t\tvar a = _p13._0;\r\n\t\t\t\tvar seed1 = _p13._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: func(a),\r\n\t\t\t\t\t_1: seed1\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$map2 = F3(\r\n\tfunction (func, _p15, _p14) {\r\n\t\tvar _p16 = _p15;\r\n\t\tvar _p17 = _p14;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed0) {\r\n\t\t\t\tvar _p18 = _p16._0(seed0);\r\n\t\t\t\tvar a = _p18._0;\r\n\t\t\t\tvar seed1 = _p18._1;\r\n\t\t\t\tvar _p19 = _p17._0(seed1);\r\n\t\t\t\tvar b = _p19._0;\r\n\t\t\t\tvar seed2 = _p19._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A2(func, a, b),\r\n\t\t\t\t\t_1: seed2\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$pair = F2(\r\n\tfunction (genA, genB) {\r\n\t\treturn A3(\r\n\t\t\t_elm_lang$core$Random$map2,\r\n\t\t\tF2(\r\n\t\t\t\tfunction (v0, v1) {\r\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\r\n\t\t\t\t}),\r\n\t\t\tgenA,\r\n\t\t\tgenB);\r\n\t});\r\nvar _elm_lang$core$Random$map3 = F4(\r\n\tfunction (func, _p22, _p21, _p20) {\r\n\t\tvar _p23 = _p22;\r\n\t\tvar _p24 = _p21;\r\n\t\tvar _p25 = _p20;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed0) {\r\n\t\t\t\tvar _p26 = _p23._0(seed0);\r\n\t\t\t\tvar a = _p26._0;\r\n\t\t\t\tvar seed1 = _p26._1;\r\n\t\t\t\tvar _p27 = _p24._0(seed1);\r\n\t\t\t\tvar b = _p27._0;\r\n\t\t\t\tvar seed2 = _p27._1;\r\n\t\t\t\tvar _p28 = _p25._0(seed2);\r\n\t\t\t\tvar c = _p28._0;\r\n\t\t\t\tvar seed3 = _p28._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A3(func, a, b, c),\r\n\t\t\t\t\t_1: seed3\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$map4 = F5(\r\n\tfunction (func, _p32, _p31, _p30, _p29) {\r\n\t\tvar _p33 = _p32;\r\n\t\tvar _p34 = _p31;\r\n\t\tvar _p35 = _p30;\r\n\t\tvar _p36 = _p29;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed0) {\r\n\t\t\t\tvar _p37 = _p33._0(seed0);\r\n\t\t\t\tvar a = _p37._0;\r\n\t\t\t\tvar seed1 = _p37._1;\r\n\t\t\t\tvar _p38 = _p34._0(seed1);\r\n\t\t\t\tvar b = _p38._0;\r\n\t\t\t\tvar seed2 = _p38._1;\r\n\t\t\t\tvar _p39 = _p35._0(seed2);\r\n\t\t\t\tvar c = _p39._0;\r\n\t\t\t\tvar seed3 = _p39._1;\r\n\t\t\t\tvar _p40 = _p36._0(seed3);\r\n\t\t\t\tvar d = _p40._0;\r\n\t\t\t\tvar seed4 = _p40._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A4(func, a, b, c, d),\r\n\t\t\t\t\t_1: seed4\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$map5 = F6(\r\n\tfunction (func, _p45, _p44, _p43, _p42, _p41) {\r\n\t\tvar _p46 = _p45;\r\n\t\tvar _p47 = _p44;\r\n\t\tvar _p48 = _p43;\r\n\t\tvar _p49 = _p42;\r\n\t\tvar _p50 = _p41;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed0) {\r\n\t\t\t\tvar _p51 = _p46._0(seed0);\r\n\t\t\t\tvar a = _p51._0;\r\n\t\t\t\tvar seed1 = _p51._1;\r\n\t\t\t\tvar _p52 = _p47._0(seed1);\r\n\t\t\t\tvar b = _p52._0;\r\n\t\t\t\tvar seed2 = _p52._1;\r\n\t\t\t\tvar _p53 = _p48._0(seed2);\r\n\t\t\t\tvar c = _p53._0;\r\n\t\t\t\tvar seed3 = _p53._1;\r\n\t\t\t\tvar _p54 = _p49._0(seed3);\r\n\t\t\t\tvar d = _p54._0;\r\n\t\t\t\tvar seed4 = _p54._1;\r\n\t\t\t\tvar _p55 = _p50._0(seed4);\r\n\t\t\t\tvar e = _p55._0;\r\n\t\t\t\tvar seed5 = _p55._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: A5(func, a, b, c, d, e),\r\n\t\t\t\t\t_1: seed5\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$andThen = F2(\r\n\tfunction (_p56, callback) {\r\n\t\tvar _p57 = _p56;\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed) {\r\n\t\t\t\tvar _p58 = _p57._0(seed);\r\n\t\t\t\tvar result = _p58._0;\r\n\t\t\t\tvar newSeed = _p58._1;\r\n\t\t\t\tvar _p59 = callback(result);\r\n\t\t\t\tvar genB = _p59._0;\r\n\t\t\t\treturn genB(newSeed);\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$State = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'State', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$core$Random$initState = function (s$) {\r\n\tvar s = A2(_elm_lang$core$Basics$max, s$, 0 - s$);\r\n\tvar q = (s / (_elm_lang$core$Random$magicNum6 - 1)) | 0;\r\n\tvar s2 = A2(_elm_lang$core$Basics_ops['%'], q, _elm_lang$core$Random$magicNum7 - 1);\r\n\tvar s1 = A2(_elm_lang$core$Basics_ops['%'], s, _elm_lang$core$Random$magicNum6 - 1);\r\n\treturn A2(_elm_lang$core$Random$State, s1 + 1, s2 + 1);\r\n};\r\nvar _elm_lang$core$Random$next = function (_p60) {\r\n\tvar _p61 = _p60;\r\n\tvar _p63 = _p61._1;\r\n\tvar _p62 = _p61._0;\r\n\tvar k$ = (_p63 / _elm_lang$core$Random$magicNum3) | 0;\r\n\tvar s2$ = (_elm_lang$core$Random$magicNum4 * (_p63 - (k$ * _elm_lang$core$Random$magicNum3))) - (k$ * _elm_lang$core$Random$magicNum5);\r\n\tvar s2$$ = (_elm_lang$core$Native_Utils.cmp(s2$, 0) < 0) ? (s2$ + _elm_lang$core$Random$magicNum7) : s2$;\r\n\tvar k = (_p62 / _elm_lang$core$Random$magicNum1) | 0;\r\n\tvar s1$ = (_elm_lang$core$Random$magicNum0 * (_p62 - (k * _elm_lang$core$Random$magicNum1))) - (k * _elm_lang$core$Random$magicNum2);\r\n\tvar s1$$ = (_elm_lang$core$Native_Utils.cmp(s1$, 0) < 0) ? (s1$ + _elm_lang$core$Random$magicNum6) : s1$;\r\n\tvar z = s1$$ - s2$$;\r\n\tvar z$ = (_elm_lang$core$Native_Utils.cmp(z, 1) < 0) ? (z + _elm_lang$core$Random$magicNum8) : z;\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: z$,\r\n\t\t_1: A2(_elm_lang$core$Random$State, s1$$, s2$$)\r\n\t};\r\n};\r\nvar _elm_lang$core$Random$split = function (_p64) {\r\n\tvar _p65 = _p64;\r\n\tvar _p68 = _p65._1;\r\n\tvar _p67 = _p65._0;\r\n\tvar _p66 = _elm_lang$core$Basics$snd(\r\n\t\t_elm_lang$core$Random$next(_p65));\r\n\tvar t1 = _p66._0;\r\n\tvar t2 = _p66._1;\r\n\tvar new_s2 = _elm_lang$core$Native_Utils.eq(_p68, 1) ? (_elm_lang$core$Random$magicNum7 - 1) : (_p68 - 1);\r\n\tvar new_s1 = _elm_lang$core$Native_Utils.eq(_p67, _elm_lang$core$Random$magicNum6 - 1) ? 1 : (_p67 + 1);\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: A2(_elm_lang$core$Random$State, new_s1, t2),\r\n\t\t_1: A2(_elm_lang$core$Random$State, t1, new_s2)\r\n\t};\r\n};\r\nvar _elm_lang$core$Random$Seed = function (a) {\r\n\treturn {ctor: 'Seed', _0: a};\r\n};\r\nvar _elm_lang$core$Random$int = F2(\r\n\tfunction (a, b) {\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (_p69) {\r\n\t\t\t\tvar _p70 = _p69;\r\n\t\t\t\tvar _p75 = _p70._0;\r\n\t\t\t\tvar base = 2147483561;\r\n\t\t\t\tvar f = F3(\r\n\t\t\t\t\tfunction (n, acc, state) {\r\n\t\t\t\t\t\tf:\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tvar _p71 = n;\r\n\t\t\t\t\t\t\tif (_p71 === 0) {\r\n\t\t\t\t\t\t\t\treturn {ctor: '_Tuple2', _0: acc, _1: state};\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar _p72 = _p75.next(state);\r\n\t\t\t\t\t\t\t\tvar x = _p72._0;\r\n\t\t\t\t\t\t\t\tvar state$ = _p72._1;\r\n\t\t\t\t\t\t\t\tvar _v27 = n - 1,\r\n\t\t\t\t\t\t\t\t\t_v28 = x + (acc * base),\r\n\t\t\t\t\t\t\t\t\t_v29 = state$;\r\n\t\t\t\t\t\t\t\tn = _v27;\r\n\t\t\t\t\t\t\t\tacc = _v28;\r\n\t\t\t\t\t\t\t\tstate = _v29;\r\n\t\t\t\t\t\t\t\tcontinue f;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tvar _p73 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};\r\n\t\t\t\tvar lo = _p73._0;\r\n\t\t\t\tvar hi = _p73._1;\r\n\t\t\t\tvar k = (hi - lo) + 1;\r\n\t\t\t\tvar n = A2(_elm_lang$core$Random$iLogBase, base, k);\r\n\t\t\t\tvar _p74 = A3(f, n, 1, _p75.state);\r\n\t\t\t\tvar v = _p74._0;\r\n\t\t\t\tvar state$ = _p74._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: lo + A2(_elm_lang$core$Basics_ops['%'], v, k),\r\n\t\t\t\t\t_1: _elm_lang$core$Random$Seed(\r\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\t_p75,\r\n\t\t\t\t\t\t\t{state: state$}))\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$bool = A2(\r\n\t_elm_lang$core$Random$map,\r\n\tF2(\r\n\t\tfunction (x, y) {\r\n\t\t\treturn _elm_lang$core$Native_Utils.eq(x, y);\r\n\t\t})(1),\r\n\tA2(_elm_lang$core$Random$int, 0, 1));\r\nvar _elm_lang$core$Random$float = F2(\r\n\tfunction (a, b) {\r\n\t\treturn _elm_lang$core$Random$Generator(\r\n\t\t\tfunction (seed) {\r\n\t\t\t\tvar _p76 = A2(\r\n\t\t\t\t\t_elm_lang$core$Random$step,\r\n\t\t\t\t\tA2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt),\r\n\t\t\t\t\tseed);\r\n\t\t\t\tvar number = _p76._0;\r\n\t\t\t\tvar newSeed = _p76._1;\r\n\t\t\t\tvar negativeOneToOne = _elm_lang$core$Basics$toFloat(number) / _elm_lang$core$Basics$toFloat(_elm_lang$core$Random$maxInt - _elm_lang$core$Random$minInt);\r\n\t\t\t\tvar _p77 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};\r\n\t\t\t\tvar lo = _p77._0;\r\n\t\t\t\tvar hi = _p77._1;\r\n\t\t\t\tvar scaled = ((lo + hi) / 2) + ((hi - lo) * negativeOneToOne);\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: scaled, _1: newSeed};\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$core$Random$initialSeed = function (n) {\r\n\treturn _elm_lang$core$Random$Seed(\r\n\t\t{\r\n\t\t\tstate: _elm_lang$core$Random$initState(n),\r\n\t\t\tnext: _elm_lang$core$Random$next,\r\n\t\t\tsplit: _elm_lang$core$Random$split,\r\n\t\t\trange: _elm_lang$core$Random$range\r\n\t\t});\r\n};\r\nvar _elm_lang$core$Random$init = A2(\r\n\t_elm_lang$core$Task$andThen,\r\n\t_elm_lang$core$Time$now,\r\n\tfunction (t) {\r\n\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t_elm_lang$core$Random$initialSeed(\r\n\t\t\t\t_elm_lang$core$Basics$round(t)));\r\n\t});\r\nvar _elm_lang$core$Random$Generate = function (a) {\r\n\treturn {ctor: 'Generate', _0: a};\r\n};\r\nvar _elm_lang$core$Random$generate = F2(\r\n\tfunction (tagger, generator) {\r\n\t\treturn _elm_lang$core$Random$command(\r\n\t\t\t_elm_lang$core$Random$Generate(\r\n\t\t\t\tA2(_elm_lang$core$Random$map, tagger, generator)));\r\n\t});\r\nvar _elm_lang$core$Random$cmdMap = F2(\r\n\tfunction (func, _p78) {\r\n\t\tvar _p79 = _p78;\r\n\t\treturn _elm_lang$core$Random$Generate(\r\n\t\t\tA2(_elm_lang$core$Random$map, func, _p79._0));\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Random'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Random$init, onEffects: _elm_lang$core$Random$onEffects, onSelfMsg: _elm_lang$core$Random$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Random$cmdMap};\r\n\r\nvar _elm_lang$core$Regex$split = _elm_lang$core$Native_Regex.split;\r\nvar _elm_lang$core$Regex$replace = _elm_lang$core$Native_Regex.replace;\r\nvar _elm_lang$core$Regex$find = _elm_lang$core$Native_Regex.find;\r\nvar _elm_lang$core$Regex$contains = _elm_lang$core$Native_Regex.contains;\r\nvar _elm_lang$core$Regex$caseInsensitive = _elm_lang$core$Native_Regex.caseInsensitive;\r\nvar _elm_lang$core$Regex$regex = _elm_lang$core$Native_Regex.regex;\r\nvar _elm_lang$core$Regex$escape = _elm_lang$core$Native_Regex.escape;\r\nvar _elm_lang$core$Regex$Match = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {match: a, submatches: b, index: c, number: d};\r\n\t});\r\nvar _elm_lang$core$Regex$Regex = {ctor: 'Regex'};\r\nvar _elm_lang$core$Regex$AtMost = function (a) {\r\n\treturn {ctor: 'AtMost', _0: a};\r\n};\r\nvar _elm_lang$core$Regex$All = {ctor: 'All'};\r\n\r\nvar _elm_lang$dom$Native_Dom = function() {\r\n\r\nfunction on(node)\r\n{\r\n\treturn function(eventName, decoder, toTask)\r\n\t{\r\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\r\n\r\n\t\t\tfunction performTask(event)\r\n\t\t\t{\r\n\t\t\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, event);\r\n\t\t\t\tif (result.ctor === 'Ok')\r\n\t\t\t\t{\r\n\t\t\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(toTask(result._0));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnode.addEventListener(eventName, performTask);\r\n\r\n\t\t\treturn function()\r\n\t\t\t{\r\n\t\t\t\tnode.removeEventListener(eventName, performTask);\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n}\r\n\r\nreturn {\r\n\tonDocument: F3(on(document)),\r\n\tonWindow: F3(on(window))\r\n};\r\n\r\n}();\r\n\r\nvar _elm_lang$dom$Dom_LowLevel$onWindow = _elm_lang$dom$Native_Dom.onWindow;\r\nvar _elm_lang$dom$Dom_LowLevel$onDocument = _elm_lang$dom$Native_Dom.onDocument;\r\n\r\n//import Native.Json //\r\n\r\nvar _elm_lang$virtual_dom$Native_VirtualDom = function() {\r\n\r\nvar STYLE_KEY = 'STYLE';\r\nvar EVENT_KEY = 'EVENT';\r\nvar ATTR_KEY = 'ATTR';\r\nvar ATTR_NS_KEY = 'ATTR_NS';\r\n\r\n\r\n\r\n////////////  VIRTUAL DOM NODES  ////////////\r\n\r\n\r\nfunction text(string)\r\n{\r\n\treturn {\r\n\t\ttype: 'text',\r\n\t\ttext: string\r\n\t};\r\n}\r\n\r\n\r\nfunction node(tag)\r\n{\r\n\treturn F2(function(factList, kidList) {\r\n\t\treturn nodeHelp(tag, factList, kidList);\r\n\t});\r\n}\r\n\r\n\r\nfunction nodeHelp(tag, factList, kidList)\r\n{\r\n\tvar organized = organizeFacts(factList);\r\n\tvar namespace = organized.namespace;\r\n\tvar facts = organized.facts;\r\n\r\n\tvar children = [];\r\n\tvar descendantsCount = 0;\r\n\twhile (kidList.ctor !== '[]')\r\n\t{\r\n\t\tvar kid = kidList._0;\r\n\t\tdescendantsCount += (kid.descendantsCount || 0);\r\n\t\tchildren.push(kid);\r\n\t\tkidList = kidList._1;\r\n\t}\r\n\tdescendantsCount += children.length;\r\n\r\n\treturn {\r\n\t\ttype: 'node',\r\n\t\ttag: tag,\r\n\t\tfacts: facts,\r\n\t\tchildren: children,\r\n\t\tnamespace: namespace,\r\n\t\tdescendantsCount: descendantsCount\r\n\t};\r\n}\r\n\r\n\r\nfunction custom(factList, model, impl)\r\n{\r\n\tvar facts = organizeFacts(factList).facts;\r\n\r\n\treturn {\r\n\t\ttype: 'custom',\r\n\t\tfacts: facts,\r\n\t\tmodel: model,\r\n\t\timpl: impl\r\n\t};\r\n}\r\n\r\n\r\nfunction map(tagger, node)\r\n{\r\n\treturn {\r\n\t\ttype: 'tagger',\r\n\t\ttagger: tagger,\r\n\t\tnode: node,\r\n\t\tdescendantsCount: 1 + (node.descendantsCount || 0)\r\n\t};\r\n}\r\n\r\n\r\nfunction thunk(func, args, thunk)\r\n{\r\n\treturn {\r\n\t\ttype: 'thunk',\r\n\t\tfunc: func,\r\n\t\targs: args,\r\n\t\tthunk: thunk,\r\n\t\tnode: null\r\n\t};\r\n}\r\n\r\nfunction lazy(fn, a)\r\n{\r\n\treturn thunk(fn, [a], function() {\r\n\t\treturn fn(a);\r\n\t});\r\n}\r\n\r\nfunction lazy2(fn, a, b)\r\n{\r\n\treturn thunk(fn, [a,b], function() {\r\n\t\treturn A2(fn, a, b);\r\n\t});\r\n}\r\n\r\nfunction lazy3(fn, a, b, c)\r\n{\r\n\treturn thunk(fn, [a,b,c], function() {\r\n\t\treturn A3(fn, a, b, c);\r\n\t});\r\n}\r\n\r\n\r\n\r\n// FACTS\r\n\r\n\r\nfunction organizeFacts(factList)\r\n{\r\n\tvar namespace, facts = {};\r\n\r\n\twhile (factList.ctor !== '[]')\r\n\t{\r\n\t\tvar entry = factList._0;\r\n\t\tvar key = entry.key;\r\n\r\n\t\tif (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)\r\n\t\t{\r\n\t\t\tvar subFacts = facts[key] || {};\r\n\t\t\tsubFacts[entry.realKey] = entry.value;\r\n\t\t\tfacts[key] = subFacts;\r\n\t\t}\r\n\t\telse if (key === STYLE_KEY)\r\n\t\t{\r\n\t\t\tvar styles = facts[key] || {};\r\n\t\t\tvar styleList = entry.value;\r\n\t\t\twhile (styleList.ctor !== '[]')\r\n\t\t\t{\r\n\t\t\t\tvar style = styleList._0;\r\n\t\t\t\tstyles[style._0] = style._1;\r\n\t\t\t\tstyleList = styleList._1;\r\n\t\t\t}\r\n\t\t\tfacts[key] = styles;\r\n\t\t}\r\n\t\telse if (key === 'namespace')\r\n\t\t{\r\n\t\t\tnamespace = entry.value;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfacts[key] = entry.value;\r\n\t\t}\r\n\t\tfactList = factList._1;\r\n\t}\r\n\r\n\treturn {\r\n\t\tfacts: facts,\r\n\t\tnamespace: namespace\r\n\t};\r\n}\r\n\r\n\r\n\r\n////////////  PROPERTIES AND ATTRIBUTES  ////////////\r\n\r\n\r\nfunction style(value)\r\n{\r\n\treturn {\r\n\t\tkey: STYLE_KEY,\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\n\r\nfunction property(key, value)\r\n{\r\n\treturn {\r\n\t\tkey: key,\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\n\r\nfunction attribute(key, value)\r\n{\r\n\treturn {\r\n\t\tkey: ATTR_KEY,\r\n\t\trealKey: key,\r\n\t\tvalue: value\r\n\t};\r\n}\r\n\r\n\r\nfunction attributeNS(namespace, key, value)\r\n{\r\n\treturn {\r\n\t\tkey: ATTR_NS_KEY,\r\n\t\trealKey: key,\r\n\t\tvalue: {\r\n\t\t\tvalue: value,\r\n\t\t\tnamespace: namespace\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nfunction on(name, options, decoder)\r\n{\r\n\treturn {\r\n\t\tkey: EVENT_KEY,\r\n\t\trealKey: name,\r\n\t\tvalue: {\r\n\t\t\toptions: options,\r\n\t\t\tdecoder: decoder\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nfunction equalEvents(a, b)\r\n{\r\n\tif (!a.options === b.options)\r\n\t{\r\n\t\tif (a.stopPropagation !== b.stopPropagation || a.preventDefault !== b.preventDefault)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);\r\n}\r\n\r\n\r\n\r\n////////////  RENDERER  ////////////\r\n\r\n\r\nfunction renderer(parent, tagger, initialVirtualNode)\r\n{\r\n\tvar eventNode = { tagger: tagger, parent: null };\r\n\r\n\tvar domNode = render(initialVirtualNode, eventNode);\r\n\tparent.appendChild(domNode);\r\n\r\n\tvar state = 'NO_REQUEST';\r\n\tvar currentVirtualNode = initialVirtualNode;\r\n\tvar nextVirtualNode = initialVirtualNode;\r\n\r\n\tfunction registerVirtualNode(vNode)\r\n\t{\r\n\t\tif (state === 'NO_REQUEST')\r\n\t\t{\r\n\t\t\trAF(updateIfNeeded);\r\n\t\t}\r\n\t\tstate = 'PENDING_REQUEST';\r\n\t\tnextVirtualNode = vNode;\r\n\t}\r\n\r\n\tfunction updateIfNeeded()\r\n\t{\r\n\t\tswitch (state)\r\n\t\t{\r\n\t\t\tcase 'NO_REQUEST':\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t'Unexpected draw callback.\\n' +\r\n\t\t\t\t\t'Please report this to <https://github.com/elm-lang/core/issues>.'\r\n\t\t\t\t);\r\n\r\n\t\t\tcase 'PENDING_REQUEST':\r\n\t\t\t\trAF(updateIfNeeded);\r\n\t\t\t\tstate = 'EXTRA_REQUEST';\r\n\r\n\t\t\t\tvar patches = diff(currentVirtualNode, nextVirtualNode);\r\n\t\t\t\tdomNode = applyPatches(domNode, currentVirtualNode, patches, eventNode);\r\n\t\t\t\tcurrentVirtualNode = nextVirtualNode;\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\tcase 'EXTRA_REQUEST':\r\n\t\t\t\tstate = 'NO_REQUEST';\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\treturn { update: registerVirtualNode };\r\n}\r\n\r\n\r\nvar rAF =\r\n\ttypeof requestAnimationFrame !== 'undefined'\r\n\t\t? requestAnimationFrame\r\n\t\t: function(cb) { setTimeout(cb, 1000 / 60); };\r\n\r\n\r\n\r\n////////////  RENDER  ////////////\r\n\r\n\r\nfunction render(vNode, eventNode)\r\n{\r\n\tswitch (vNode.type)\r\n\t{\r\n\t\tcase 'thunk':\r\n\t\t\tif (!vNode.node)\r\n\t\t\t{\r\n\t\t\t\tvNode.node = vNode.thunk();\r\n\t\t\t}\r\n\t\t\treturn render(vNode.node, eventNode);\r\n\r\n\t\tcase 'tagger':\r\n\t\t\tvar subEventRoot = {\r\n\t\t\t\ttagger: vNode.tagger,\r\n\t\t\t\tparent: eventNode\r\n\t\t\t};\r\n\t\t\tvar domNode = render(vNode.node, subEventRoot);\r\n\t\t\tdomNode.elm_event_node_ref = subEventRoot;\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'text':\r\n\t\t\treturn document.createTextNode(vNode.text);\r\n\r\n\t\tcase 'node':\r\n\t\t\tvar domNode = vNode.namespace\r\n\t\t\t\t? document.createElementNS(vNode.namespace, vNode.tag)\r\n\t\t\t\t: document.createElement(vNode.tag);\r\n\r\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\r\n\r\n\t\t\tvar children = vNode.children;\r\n\r\n\t\t\tfor (var i = 0; i < children.length; i++)\r\n\t\t\t{\r\n\t\t\t\tdomNode.appendChild(render(children[i], eventNode));\r\n\t\t\t}\r\n\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'custom':\r\n\t\t\tvar domNode = vNode.impl.render(vNode.model);\r\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\r\n\t\t\treturn domNode;\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  APPLY FACTS  ////////////\r\n\r\n\r\nfunction applyFacts(domNode, eventNode, facts)\r\n{\r\n\tfor (var key in facts)\r\n\t{\r\n\t\tvar value = facts[key];\r\n\r\n\t\tswitch (key)\r\n\t\t{\r\n\t\t\tcase STYLE_KEY:\r\n\t\t\t\tapplyStyles(domNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase EVENT_KEY:\r\n\t\t\t\tapplyEvents(domNode, eventNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ATTR_KEY:\r\n\t\t\t\tapplyAttrs(domNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ATTR_NS_KEY:\r\n\t\t\t\tapplyAttrsNS(domNode, value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'value':\r\n\t\t\t\tif (domNode[key] !== value)\r\n\t\t\t\t{\r\n\t\t\t\t\tdomNode[key] = value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tdomNode[key] = value;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyStyles(domNode, styles)\r\n{\r\n\tvar domNodeStyle = domNode.style;\r\n\r\n\tfor (var key in styles)\r\n\t{\r\n\t\tdomNodeStyle[key] = styles[key];\r\n\t}\r\n}\r\n\r\nfunction applyEvents(domNode, eventNode, events)\r\n{\r\n\tvar allHandlers = domNode.elm_handlers || {};\r\n\r\n\tfor (var key in events)\r\n\t{\r\n\t\tvar handler = allHandlers[key];\r\n\t\tvar value = events[key];\r\n\r\n\t\tif (typeof value === 'undefined')\r\n\t\t{\r\n\t\t\tdomNode.removeEventListener(key, handler);\r\n\t\t}\r\n\t\telse if (typeof handler === 'undefined')\r\n\t\t{\r\n\t\t\tvar handler = makeEventHandler(eventNode, value);\r\n\t\t\tdomNode.addEventListener(key, handler);\r\n\t\t\tallHandlers[key] = handler;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\thandler.info = value;\r\n\t\t}\r\n\t}\r\n\r\n\tdomNode.elm_handlers = allHandlers;\r\n}\r\n\r\nfunction makeEventHandler(eventNode, info)\r\n{\r\n\tfunction eventHandler(event)\r\n\t{\r\n\t\tvar info = eventHandler.info;\r\n\r\n\t\tvar value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);\r\n\r\n\t\tif (value.ctor === 'Ok')\r\n\t\t{\r\n\t\t\tvar options = info.options;\r\n\t\t\tif (options.stopPropagation)\r\n\t\t\t{\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t}\r\n\t\t\tif (options.preventDefault)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tvar message = value._0;\r\n\r\n\t\t\tvar currentEventNode = eventNode;\r\n\t\t\twhile (currentEventNode)\r\n\t\t\t{\r\n\t\t\t\tvar tagger = currentEventNode.tagger;\r\n\t\t\t\tif (typeof tagger === 'function')\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = tagger(message);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = tagger.length; i--; )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessage = tagger[i](message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcurrentEventNode = currentEventNode.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\teventHandler.info = info;\r\n\r\n\treturn eventHandler;\r\n}\r\n\r\nfunction applyAttrs(domNode, attrs)\r\n{\r\n\tfor (var key in attrs)\r\n\t{\r\n\t\tvar value = attrs[key];\r\n\t\tif (typeof value === 'undefined')\r\n\t\t{\r\n\t\t\tdomNode.removeAttribute(key);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdomNode.setAttribute(key, value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyAttrsNS(domNode, nsAttrs)\r\n{\r\n\tfor (var key in nsAttrs)\r\n\t{\r\n\t\tvar pair = nsAttrs[key];\r\n\t\tvar namespace = pair.namespace;\r\n\t\tvar value = pair.value;\r\n\r\n\t\tif (typeof value === 'undefined')\r\n\t\t{\r\n\t\t\tdomNode.removeAttributeNS(namespace, key);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdomNode.setAttributeNS(namespace, key, value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  DIFF  ////////////\r\n\r\n\r\nfunction diff(a, b)\r\n{\r\n\tvar patches = [];\r\n\tdiffHelp(a, b, patches, 0);\r\n\treturn patches;\r\n}\r\n\r\n\r\nfunction makePatch(type, index, data)\r\n{\r\n\treturn {\r\n\t\tindex: index,\r\n\t\ttype: type,\r\n\t\tdata: data,\r\n\t\tdomNode: null,\r\n\t\teventNode: null\r\n\t};\r\n}\r\n\r\n\r\nfunction diffHelp(a, b, patches, index)\r\n{\r\n\tif (a === b)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar aType = a.type;\r\n\tvar bType = b.type;\r\n\r\n\t// Bail if you run into different types of nodes. Implies that the\r\n\t// structure has changed significantly and it's not worth a diff.\r\n\tif (aType !== bType)\r\n\t{\r\n\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Now we know that both nodes are the same type.\r\n\tswitch (bType)\r\n\t{\r\n\t\tcase 'thunk':\r\n\t\t\tvar aArgs = a.args;\r\n\t\t\tvar bArgs = b.args;\r\n\t\t\tvar i = aArgs.length;\r\n\t\t\tvar same = a.func === b.func && i === bArgs.length;\r\n\t\t\twhile (same && i--)\r\n\t\t\t{\r\n\t\t\t\tsame = aArgs[i] === bArgs[i];\r\n\t\t\t}\r\n\t\t\tif (same)\r\n\t\t\t{\r\n\t\t\t\tb.node = a.node;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tb.node = b.thunk();\r\n\t\t\tvar subPatches = [];\r\n\t\t\tdiffHelp(a.node, b.node, subPatches, 0);\r\n\t\t\tif (subPatches.length > 0)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-thunk', index, subPatches));\r\n\t\t\t}\r\n\t\t\treturn;\r\n\r\n\t\tcase 'tagger':\r\n\t\t\t// gather nested taggers\r\n\t\t\tvar aTaggers = a.tagger;\r\n\t\t\tvar bTaggers = b.tagger;\r\n\t\t\tvar nesting = false;\r\n\r\n\t\t\tvar aSubNode = a.node;\r\n\t\t\twhile (aSubNode.type === 'tagger')\r\n\t\t\t{\r\n\t\t\t\tnesting = true;\r\n\r\n\t\t\t\ttypeof aTaggers !== 'object'\r\n\t\t\t\t\t? aTaggers = [aTaggers, aSubNode.tagger]\r\n\t\t\t\t\t: aTaggers.push(aSubNode.tagger);\r\n\r\n\t\t\t\taSubNode = aSubNode.node;\r\n\t\t\t}\r\n\r\n\t\t\tvar bSubNode = b.node;\r\n\t\t\twhile (bSubNode.type === 'tagger')\r\n\t\t\t{\r\n\t\t\t\tnesting = true;\r\n\r\n\t\t\t\ttypeof bTaggers !== 'object'\r\n\t\t\t\t\t? bTaggers = [bTaggers, bSubNode.tagger]\r\n\t\t\t\t\t: bTaggers.push(bSubNode.tagger);\r\n\r\n\t\t\t\tbSubNode = bSubNode.node;\r\n\t\t\t}\r\n\r\n\t\t\t// Just bail if different numbers of taggers. This implies the\r\n\t\t\t// structure of the virtual DOM has changed.\r\n\t\t\tif (nesting && aTaggers.length !== bTaggers.length)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// check if taggers are \"the same\"\r\n\t\t\tif (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-tagger', index, bTaggers));\r\n\t\t\t}\r\n\r\n\t\t\t// diff everything below the taggers\r\n\t\t\tdiffHelp(aSubNode, bSubNode, patches, index + 1);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'text':\r\n\t\t\tif (a.text !== b.text)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-text', index, b.text));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\tcase 'node':\r\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\r\n\t\t\t// structural changes such that it's not worth it to diff.\r\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\r\n\r\n\t\t\tif (typeof factsDiff !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\r\n\t\t\t}\r\n\r\n\t\t\tdiffChildren(a, b, patches, index);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'custom':\r\n\t\t\tif (a.impl !== b.impl)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\r\n\t\t\tif (typeof factsDiff !== 'undefined')\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\r\n\t\t\t}\r\n\r\n\t\t\tvar patch = b.impl.diff(a,b);\r\n\t\t\tif (patch)\r\n\t\t\t{\r\n\t\t\t\tpatches.push(makePatch('p-custom', index, patch));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t}\r\n}\r\n\r\n\r\n// assumes the incoming arrays are the same length\r\nfunction pairwiseRefEqual(as, bs)\r\n{\r\n\tfor (var i = 0; i < as.length; i++)\r\n\t{\r\n\t\tif (as[i] !== bs[i])\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n\r\n// TODO Instead of creating a new diff object, it's possible to just test if\r\n// there *is* a diff. During the actual patch, do the diff again and make the\r\n// modifications directly. This way, there's no new allocations. Worth it?\r\nfunction diffFacts(a, b, category)\r\n{\r\n\tvar diff;\r\n\r\n\t// look for changes and removals\r\n\tfor (var aKey in a)\r\n\t{\r\n\t\tif (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)\r\n\t\t{\r\n\t\t\tvar subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);\r\n\t\t\tif (subDiff)\r\n\t\t\t{\r\n\t\t\t\tdiff = diff || {};\r\n\t\t\t\tdiff[aKey] = subDiff;\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// remove if not in the new facts\r\n\t\tif (!(aKey in b))\r\n\t\t{\r\n\t\t\tdiff = diff || {};\r\n\t\t\tdiff[aKey] =\r\n\t\t\t\t(typeof category === 'undefined')\r\n\t\t\t\t\t? (typeof a[aKey] === 'string' ? '' : null)\r\n\t\t\t\t\t:\r\n\t\t\t\t(category === STYLE_KEY)\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t:\r\n\t\t\t\t(category === EVENT_KEY)\r\n\t\t\t\t\t? null\r\n\t\t\t\t\t:\r\n\t\t\t\t(category === ATTR_KEY)\r\n\t\t\t\t\t? undefined\r\n\t\t\t\t\t:\r\n\t\t\t\t{ namespace: a[aKey].namespace, value: undefined };\r\n\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar aValue = a[aKey];\r\n\t\tvar bValue = b[aKey];\r\n\r\n\t\t// reference equal, so don't worry about it\r\n\t\tif (aValue === bValue && aKey !== 'value'\r\n\t\t\t|| category === EVENT_KEY && equalEvents(aValue, bValue))\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tdiff = diff || {};\r\n\t\tdiff[aKey] = bValue;\r\n\t}\r\n\r\n\t// add new stuff\r\n\tfor (var bKey in b)\r\n\t{\r\n\t\tif (!(bKey in a))\r\n\t\t{\r\n\t\t\tdiff = diff || {};\r\n\t\t\tdiff[bKey] = b[bKey];\r\n\t\t}\r\n\t}\r\n\r\n\treturn diff;\r\n}\r\n\r\n\r\nfunction diffChildren(aParent, bParent, patches, rootIndex)\r\n{\r\n\tvar aChildren = aParent.children;\r\n\tvar bChildren = bParent.children;\r\n\r\n\tvar aLen = aChildren.length;\r\n\tvar bLen = bChildren.length;\r\n\r\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\r\n\r\n\tif (aLen > bLen)\r\n\t{\r\n\t\tpatches.push(makePatch('p-remove', rootIndex, aLen - bLen));\r\n\t}\r\n\telse if (aLen < bLen)\r\n\t{\r\n\t\tpatches.push(makePatch('p-insert', rootIndex, bChildren.slice(aLen)));\r\n\t}\r\n\r\n\t// PAIRWISE DIFF EVERYTHING ELSE\r\n\r\n\tvar index = rootIndex;\r\n\tvar minLen = aLen < bLen ? aLen : bLen;\r\n\tfor (var i = 0; i < minLen; i++)\r\n\t{\r\n\t\tindex++;\r\n\t\tvar aChild = aChildren[i];\r\n\t\tdiffHelp(aChild, bChildren[i], patches, index);\r\n\t\tindex += aChild.descendantsCount || 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  ADD DOM NODES  ////////////\r\n//\r\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\r\n// to minimize our crawl over the actual DOM, so these indexes (along with the\r\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\r\n// the DOM if we know there are no patches there.\r\n\r\n\r\nfunction addDomNodes(domNode, vNode, patches, eventNode)\r\n{\r\n\taddDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);\r\n}\r\n\r\n\r\n// assumes `patches` is non-empty and indexes increase monotonically.\r\nfunction addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\r\n{\r\n\tvar patch = patches[i];\r\n\tvar index = patch.index;\r\n\r\n\twhile (index === low)\r\n\t{\r\n\t\tvar patchType = patch.type;\r\n\r\n\t\tif (patchType === 'p-thunk')\r\n\t\t{\r\n\t\t\taddDomNodes(domNode, vNode.node, patch.data, eventNode);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpatch.domNode = domNode;\r\n\t\t\tpatch.eventNode = eventNode;\r\n\t\t}\r\n\r\n\t\ti++;\r\n\r\n\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\r\n\t\t{\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (vNode.type)\r\n\t{\r\n\t\tcase 'tagger':\r\n\t\t\treturn addDomNodesHelp(domNode, vNode.node, patches, i, low + 1, high, domNode.elm_event_node_ref);\r\n\r\n\t\tcase 'node':\r\n\t\t\tvar vChildren = vNode.children;\r\n\t\t\tvar childNodes = domNode.childNodes;\r\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\r\n\t\t\t{\r\n\t\t\t\tlow++;\r\n\t\t\t\tvar vChild = vChildren[j];\r\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\r\n\t\t\t\tif (low <= index && index <= nextLow)\r\n\t\t\t\t{\r\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\r\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlow = nextLow;\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\r\n\t\tcase 'text':\r\n\t\tcase 'thunk':\r\n\t\t\tthrow new Error('should never traverse `text` or `thunk` nodes like this');\r\n\t}\r\n}\r\n\r\n\r\n\r\n////////////  APPLY PATCHES  ////////////\r\n\r\n\r\nfunction applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\r\n{\r\n\tif (patches.length === 0)\r\n\t{\r\n\t\treturn rootDomNode;\r\n\t}\r\n\r\n\taddDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\r\n\treturn applyPatchesHelp(rootDomNode, patches);\r\n}\r\n\r\nfunction applyPatchesHelp(rootDomNode, patches)\r\n{\r\n\tfor (var i = 0; i < patches.length; i++)\r\n\t{\r\n\t\tvar patch = patches[i];\r\n\t\tvar localDomNode = patch.domNode\r\n\t\tvar newNode = applyPatch(localDomNode, patch);\r\n\t\tif (localDomNode === rootDomNode)\r\n\t\t{\r\n\t\t\trootDomNode = newNode;\r\n\t\t}\r\n\t}\r\n\treturn rootDomNode;\r\n}\r\n\r\nfunction applyPatch(domNode, patch)\r\n{\r\n\tswitch (patch.type)\r\n\t{\r\n\t\tcase 'p-redraw':\r\n\t\t\treturn redraw(domNode, patch.data, patch.eventNode);\r\n\r\n\t\tcase 'p-facts':\r\n\t\t\tapplyFacts(domNode, patch.eventNode, patch.data);\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-text':\r\n\t\t\tdomNode.replaceData(0, domNode.length, patch.data);\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-thunk':\r\n\t\t\treturn applyPatchesHelp(domNode, patch.data);\r\n\r\n\t\tcase 'p-tagger':\r\n\t\t\tdomNode.elm_event_node_ref.tagger = patch.data;\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-remove':\r\n\t\t\tvar i = patch.data;\r\n\t\t\twhile (i--)\r\n\t\t\t{\r\n\t\t\t\tdomNode.removeChild(domNode.lastChild);\r\n\t\t\t}\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-insert':\r\n\t\t\tvar newNodes = patch.data;\r\n\t\t\tfor (var i = 0; i < newNodes.length; i++)\r\n\t\t\t{\r\n\t\t\t\tdomNode.appendChild(render(newNodes[i], patch.eventNode));\r\n\t\t\t}\r\n\t\t\treturn domNode;\r\n\r\n\t\tcase 'p-custom':\r\n\t\t\tvar impl = patch.data;\r\n\t\t\treturn impl.applyPatch(domNode, impl.data);\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Ran into an unknown patch!');\r\n\t}\r\n}\r\n\r\n\r\nfunction redraw(domNode, vNode, eventNode)\r\n{\r\n\tvar parentNode = domNode.parentNode;\r\n\tvar newNode = render(vNode, eventNode);\r\n\r\n\tvar ref = domNode.elm_event_node_ref\r\n\tif (typeof ref !== 'undefined')\r\n\t{\r\n\t\tnewNode.elm_event_node_ref = ref;\r\n\t}\r\n\r\n\tif (parentNode && newNode !== domNode)\r\n\t{\r\n\t\tparentNode.replaceChild(newNode, domNode);\r\n\t}\r\n\treturn newNode;\r\n}\r\n\r\n\r\n\r\n////////////  PROGRAMS  ////////////\r\n\r\n\r\nfunction programWithFlags(details)\r\n{\r\n\treturn {\r\n\t\tinit: details.init,\r\n\t\tupdate: details.update,\r\n\t\tsubscriptions: details.subscriptions,\r\n\t\tview: details.view,\r\n\t\trenderer: renderer\r\n\t};\r\n}\r\n\r\n\r\nreturn {\r\n\tnode: node,\r\n\ttext: text,\r\n\r\n\tcustom: custom,\r\n\r\n\tmap: F2(map),\r\n\r\n\ton: F3(on),\r\n\tstyle: style,\r\n\tproperty: F2(property),\r\n\tattribute: F2(attribute),\r\n\tattributeNS: F3(attributeNS),\r\n\r\n\tlazy: F2(lazy),\r\n\tlazy2: F3(lazy2),\r\n\tlazy3: F4(lazy3),\r\n\r\n\tprogramWithFlags: programWithFlags\r\n};\r\n\r\n}();\r\nvar _elm_lang$virtual_dom$VirtualDom$programWithFlags = _elm_lang$virtual_dom$Native_VirtualDom.programWithFlags;\r\nvar _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;\r\nvar _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;\r\nvar _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;\r\nvar _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};\r\nvar _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;\r\nvar _elm_lang$virtual_dom$VirtualDom$on = F2(\r\n\tfunction (eventName, decoder) {\r\n\t\treturn A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;\r\nvar _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;\r\nvar _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;\r\nvar _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;\r\nvar _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;\r\nvar _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;\r\nvar _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;\r\nvar _elm_lang$virtual_dom$VirtualDom$Options = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {stopPropagation: a, preventDefault: b};\r\n\t});\r\nvar _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};\r\nvar _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};\r\n\r\nvar _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;\r\nvar _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;\r\nvar _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');\r\nvar _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');\r\nvar _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');\r\nvar _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');\r\nvar _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');\r\nvar _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');\r\nvar _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');\r\nvar _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');\r\nvar _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');\r\nvar _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');\r\nvar _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');\r\nvar _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');\r\nvar _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');\r\nvar _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');\r\nvar _elm_lang$html$Html$main$ = _elm_lang$html$Html$node('main');\r\nvar _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');\r\nvar _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');\r\nvar _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');\r\nvar _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');\r\nvar _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');\r\nvar _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');\r\nvar _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');\r\nvar _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');\r\nvar _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');\r\nvar _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');\r\nvar _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');\r\nvar _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');\r\nvar _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');\r\nvar _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');\r\nvar _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');\r\nvar _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');\r\nvar _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');\r\nvar _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');\r\nvar _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');\r\nvar _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');\r\nvar _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');\r\nvar _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');\r\nvar _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');\r\nvar _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');\r\nvar _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');\r\nvar _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');\r\nvar _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');\r\nvar _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');\r\nvar _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');\r\nvar _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');\r\nvar _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');\r\nvar _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');\r\nvar _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');\r\nvar _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');\r\nvar _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');\r\nvar _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');\r\nvar _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');\r\nvar _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');\r\nvar _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');\r\nvar _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');\r\nvar _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');\r\nvar _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');\r\nvar _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');\r\nvar _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');\r\nvar _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');\r\nvar _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');\r\nvar _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');\r\nvar _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');\r\nvar _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');\r\nvar _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');\r\nvar _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');\r\nvar _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');\r\nvar _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');\r\nvar _elm_lang$html$Html$svg = _elm_lang$html$Html$node('svg');\r\nvar _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');\r\nvar _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');\r\nvar _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');\r\nvar _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');\r\nvar _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');\r\nvar _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');\r\nvar _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');\r\nvar _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');\r\nvar _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');\r\nvar _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');\r\nvar _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');\r\nvar _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');\r\nvar _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');\r\nvar _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');\r\nvar _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');\r\nvar _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');\r\nvar _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');\r\nvar _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');\r\nvar _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');\r\nvar _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');\r\nvar _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');\r\nvar _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');\r\nvar _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');\r\nvar _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');\r\nvar _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');\r\nvar _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');\r\nvar _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');\r\nvar _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');\r\nvar _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');\r\nvar _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');\r\n\r\nvar _elm_lang$html$Html_App$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;\r\nvar _elm_lang$html$Html_App$program = function (app) {\r\n\treturn _elm_lang$html$Html_App$programWithFlags(\r\n\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\tapp,\r\n\t\t\t{\r\n\t\t\t\tinit: function (_p0) {\r\n\t\t\t\t\treturn app.init;\r\n\t\t\t\t}\r\n\t\t\t}));\r\n};\r\nvar _elm_lang$html$Html_App$beginnerProgram = function (_p1) {\r\n\tvar _p2 = _p1;\r\n\treturn _elm_lang$html$Html_App$programWithFlags(\r\n\t\t{\r\n\t\t\tinit: function (_p3) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t_p2.model,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]));\r\n\t\t\t},\r\n\t\t\tupdate: F2(\r\n\t\t\t\tfunction (msg, model) {\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\r\n\t\t\t\t\t\tA2(_p2.update, msg, model),\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[]));\r\n\t\t\t\t}),\r\n\t\t\tview: _p2.view,\r\n\t\t\tsubscriptions: function (_p4) {\r\n\t\t\t\treturn _elm_lang$core$Platform_Sub$none;\r\n\t\t\t}\r\n\t\t});\r\n};\r\nvar _elm_lang$html$Html_App$map = _elm_lang$virtual_dom$VirtualDom$map;\r\n\r\nvar _elm_lang$html$Html_Attributes$attribute = _elm_lang$virtual_dom$VirtualDom$attribute;\r\nvar _elm_lang$html$Html_Attributes$contextmenu = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'contextmenu', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$property = _elm_lang$virtual_dom$VirtualDom$property;\r\nvar _elm_lang$html$Html_Attributes$stringProperty = F2(\r\n\tfunction (name, string) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$html$Html_Attributes$property,\r\n\t\t\tname,\r\n\t\t\t_elm_lang$core$Json_Encode$string(string));\r\n\t});\r\nvar _elm_lang$html$Html_Attributes$class = function (name) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'className', name);\r\n};\r\nvar _elm_lang$html$Html_Attributes$id = function (name) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'id', name);\r\n};\r\nvar _elm_lang$html$Html_Attributes$title = function (name) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'title', name);\r\n};\r\nvar _elm_lang$html$Html_Attributes$accesskey = function ($char) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'accessKey',\r\n\t\t_elm_lang$core$String$fromChar($char));\r\n};\r\nvar _elm_lang$html$Html_Attributes$dir = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dir', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$draggable = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'draggable', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$dropzone = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dropzone', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$itemprop = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'itemprop', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$lang = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'lang', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$tabindex = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'tabIndex',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$charset = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'charset', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$content = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'content', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$httpEquiv = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'httpEquiv', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$language = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'language', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$src = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'src', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$height = function (value) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'height',\r\n\t\t_elm_lang$core$Basics$toString(value));\r\n};\r\nvar _elm_lang$html$Html_Attributes$width = function (value) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'width',\r\n\t\t_elm_lang$core$Basics$toString(value));\r\n};\r\nvar _elm_lang$html$Html_Attributes$alt = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'alt', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$preload = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'preload', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$poster = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'poster', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$kind = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'kind', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$srclang = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srclang', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$sandbox = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'sandbox', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$srcdoc = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srcdoc', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$type$ = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'type', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$value = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'value', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$defaultValue = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'defaultValue', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$placeholder = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'placeholder', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$accept = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'accept', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$acceptCharset = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'acceptCharset', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$action = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'action', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$autocomplete = function (bool) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'autocomplete',\r\n\t\tbool ? 'on' : 'off');\r\n};\r\nvar _elm_lang$html$Html_Attributes$autosave = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'autosave', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$enctype = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'enctype', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$formaction = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'formAction', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$list = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'list', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$minlength = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'minLength',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$maxlength = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'maxLength',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$method = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'method', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$name = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'name', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$pattern = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'pattern', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$size = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'size',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$for = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'htmlFor', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$form = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'form', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$max = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'max', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$min = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'min', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$step = function (n) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'step', n);\r\n};\r\nvar _elm_lang$html$Html_Attributes$cols = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'cols',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$rows = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'rows',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$wrap = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'wrap', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$usemap = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'useMap', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$shape = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'shape', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$coords = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'coords', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$challenge = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'challenge', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$keytype = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'keytype', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$align = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'align', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$cite = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'cite', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$href = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'href', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$target = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'target', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$downloadAs = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'download', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$hreflang = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'hreflang', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$media = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'media', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$ping = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'ping', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$rel = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'rel', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$datetime = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'datetime', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$pubdate = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'pubdate', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$start = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'start',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$colspan = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'colSpan',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$headers = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'headers', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$rowspan = function (n) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\r\n\t\t'rowSpan',\r\n\t\t_elm_lang$core$Basics$toString(n));\r\n};\r\nvar _elm_lang$html$Html_Attributes$scope = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'scope', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$manifest = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'manifest', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$boolProperty = F2(\r\n\tfunction (name, bool) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$html$Html_Attributes$property,\r\n\t\t\tname,\r\n\t\t\t_elm_lang$core$Json_Encode$bool(bool));\r\n\t});\r\nvar _elm_lang$html$Html_Attributes$hidden = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'hidden', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$contenteditable = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'contentEditable', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$spellcheck = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'spellcheck', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$async = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'async', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$defer = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'defer', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$scoped = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'scoped', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$autoplay = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autoplay', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$controls = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'controls', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$loop = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'loop', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$default = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'default', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$seamless = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'seamless', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$checked = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'checked', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$selected = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'selected', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$autofocus = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autofocus', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$disabled = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'disabled', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$multiple = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'multiple', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$novalidate = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'noValidate', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$readonly = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'readOnly', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$required = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'required', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$ismap = function (value) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'isMap', value);\r\n};\r\nvar _elm_lang$html$Html_Attributes$download = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'download', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$reversed = function (bool) {\r\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'reversed', bool);\r\n};\r\nvar _elm_lang$html$Html_Attributes$classList = function (list) {\r\n\treturn _elm_lang$html$Html_Attributes$class(\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$String$join,\r\n\t\t\t' ',\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t_elm_lang$core$Basics$fst,\r\n\t\t\t\tA2(_elm_lang$core$List$filter, _elm_lang$core$Basics$snd, list))));\r\n};\r\nvar _elm_lang$html$Html_Attributes$style = _elm_lang$virtual_dom$VirtualDom$style;\r\n\r\nvar _elm_lang$html$Html_Events$keyCode = A2(_elm_lang$core$Json_Decode_ops[':='], 'keyCode', _elm_lang$core$Json_Decode$int);\r\nvar _elm_lang$html$Html_Events$targetChecked = A2(\r\n\t_elm_lang$core$Json_Decode$at,\r\n\t_elm_lang$core$Native_List.fromArray(\r\n\t\t['target', 'checked']),\r\n\t_elm_lang$core$Json_Decode$bool);\r\nvar _elm_lang$html$Html_Events$targetValue = A2(\r\n\t_elm_lang$core$Json_Decode$at,\r\n\t_elm_lang$core$Native_List.fromArray(\r\n\t\t['target', 'value']),\r\n\t_elm_lang$core$Json_Decode$string);\r\nvar _elm_lang$html$Html_Events$defaultOptions = _elm_lang$virtual_dom$VirtualDom$defaultOptions;\r\nvar _elm_lang$html$Html_Events$onWithOptions = _elm_lang$virtual_dom$VirtualDom$onWithOptions;\r\nvar _elm_lang$html$Html_Events$on = _elm_lang$virtual_dom$VirtualDom$on;\r\nvar _elm_lang$html$Html_Events$onFocus = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'focus',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onBlur = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'blur',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onSubmitOptions = _elm_lang$core$Native_Utils.update(\r\n\t_elm_lang$html$Html_Events$defaultOptions,\r\n\t{preventDefault: true});\r\nvar _elm_lang$html$Html_Events$onSubmit = function (msg) {\r\n\treturn A3(\r\n\t\t_elm_lang$html$Html_Events$onWithOptions,\r\n\t\t'submit',\r\n\t\t_elm_lang$html$Html_Events$onSubmitOptions,\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onCheck = function (tagger) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'change',\r\n\t\tA2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetChecked));\r\n};\r\nvar _elm_lang$html$Html_Events$onInput = function (tagger) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'input',\r\n\t\tA2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetValue));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseOut = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseout',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseOver = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseover',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseLeave = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseleave',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseEnter = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseenter',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseUp = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mouseup',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onMouseDown = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'mousedown',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onDoubleClick = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'dblclick',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$onClick = function (msg) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html_Events$on,\r\n\t\t'click',\r\n\t\t_elm_lang$core$Json_Decode$succeed(msg));\r\n};\r\nvar _elm_lang$html$Html_Events$Options = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {stopPropagation: a, preventDefault: b};\r\n\t});\r\n\r\nvar _elm_lang$keyboard$Keyboard$onSelfMsg = F3(\r\n\tfunction (router, _p0, state) {\r\n\t\tvar _p1 = _p0;\r\n\t\tvar _p2 = A2(_elm_lang$core$Dict$get, _p1.category, state);\r\n\t\tif (_p2.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t} else {\r\n\t\t\tvar send = function (tagger) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\r\n\t\t\t\t\trouter,\r\n\t\t\t\t\ttagger(_p1.keyCode));\r\n\t\t\t};\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t_elm_lang$core$Task$sequence(\r\n\t\t\t\t\tA2(_elm_lang$core$List$map, send, _p2._0.taggers)),\r\n\t\t\t\tfunction (_p3) {\r\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard_ops = _elm_lang$keyboard$Keyboard_ops || {};\r\n_elm_lang$keyboard$Keyboard_ops['&>'] = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tt1,\r\n\t\t\tfunction (_p4) {\r\n\t\t\t\treturn t2;\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$init = _elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty);\r\nvar _elm_lang$keyboard$Keyboard$categorizeHelpHelp = F2(\r\n\tfunction (value, maybeValues) {\r\n\t\tvar _p5 = maybeValues;\r\n\t\tif (_p5.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[value]));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(\r\n\t\t\t\tA2(_elm_lang$core$List_ops['::'], value, _p5._0));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$categorizeHelp = F2(\r\n\tfunction (subs, subDict) {\r\n\t\tcategorizeHelp:\r\n\t\twhile (true) {\r\n\t\t\tvar _p6 = subs;\r\n\t\t\tif (_p6.ctor === '[]') {\r\n\t\t\t\treturn subDict;\r\n\t\t\t} else {\r\n\t\t\t\tvar _v4 = _p6._1,\r\n\t\t\t\t\t_v5 = A3(\r\n\t\t\t\t\t_elm_lang$core$Dict$update,\r\n\t\t\t\t\t_p6._0._0,\r\n\t\t\t\t\t_elm_lang$keyboard$Keyboard$categorizeHelpHelp(_p6._0._1),\r\n\t\t\t\t\tsubDict);\r\n\t\t\t\tsubs = _v4;\r\n\t\t\t\tsubDict = _v5;\r\n\t\t\t\tcontinue categorizeHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$categorize = function (subs) {\r\n\treturn A2(_elm_lang$keyboard$Keyboard$categorizeHelp, subs, _elm_lang$core$Dict$empty);\r\n};\r\nvar _elm_lang$keyboard$Keyboard$keyCode = A2(_elm_lang$core$Json_Decode_ops[':='], 'keyCode', _elm_lang$core$Json_Decode$int);\r\nvar _elm_lang$keyboard$Keyboard$subscription = _elm_lang$core$Native_Platform.leaf('Keyboard');\r\nvar _elm_lang$keyboard$Keyboard$Watcher = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {taggers: a, pid: b};\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$Msg = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {category: a, keyCode: b};\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$onEffects = F3(\r\n\tfunction (router, newSubs, oldState) {\r\n\t\tvar rightStep = F3(\r\n\t\t\tfunction (category, taggers, task) {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttask,\r\n\t\t\t\t\tfunction (state) {\r\n\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t_elm_lang$core$Process$spawn(\r\n\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$dom$Dom_LowLevel$onDocument,\r\n\t\t\t\t\t\t\t\t\tcategory,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$keyboard$Keyboard$keyCode,\r\n\t\t\t\t\t\t\t\t\tfunction (_p7) {\r\n\t\t\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf,\r\n\t\t\t\t\t\t\t\t\t\t\trouter,\r\n\t\t\t\t\t\t\t\t\t\t\tA2(_elm_lang$keyboard$Keyboard$Msg, category, _p7));\r\n\t\t\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t\tfunction (pid) {\r\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t\t\t\t\t\t\tcategory,\r\n\t\t\t\t\t\t\t\t\t\tA2(_elm_lang$keyboard$Keyboard$Watcher, taggers, pid),\r\n\t\t\t\t\t\t\t\t\t\tstate));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\tvar bothStep = F4(\r\n\t\t\tfunction (category, _p8, taggers, task) {\r\n\t\t\t\tvar _p9 = _p8;\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\ttask,\r\n\t\t\t\t\tfunction (state) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Dict$insert,\r\n\t\t\t\t\t\t\t\tcategory,\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$keyboard$Keyboard$Watcher, taggers, _p9.pid),\r\n\t\t\t\t\t\t\t\tstate));\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\tvar leftStep = F3(\r\n\t\t\tfunction (category, _p10, task) {\r\n\t\t\t\tvar _p11 = _p10;\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$keyboard$Keyboard_ops['&>'],\r\n\t\t\t\t\t_elm_lang$core$Process$kill(_p11.pid),\r\n\t\t\t\t\ttask);\r\n\t\t\t});\r\n\t\treturn A6(\r\n\t\t\t_elm_lang$core$Dict$merge,\r\n\t\t\tleftStep,\r\n\t\t\tbothStep,\r\n\t\t\trightStep,\r\n\t\t\toldState,\r\n\t\t\t_elm_lang$keyboard$Keyboard$categorize(newSubs),\r\n\t\t\t_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$MySub = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'MySub', _0: a, _1: b};\r\n\t});\r\nvar _elm_lang$keyboard$Keyboard$presses = function (tagger) {\r\n\treturn _elm_lang$keyboard$Keyboard$subscription(\r\n\t\tA2(_elm_lang$keyboard$Keyboard$MySub, 'keypress', tagger));\r\n};\r\nvar _elm_lang$keyboard$Keyboard$downs = function (tagger) {\r\n\treturn _elm_lang$keyboard$Keyboard$subscription(\r\n\t\tA2(_elm_lang$keyboard$Keyboard$MySub, 'keydown', tagger));\r\n};\r\nvar _elm_lang$keyboard$Keyboard$ups = function (tagger) {\r\n\treturn _elm_lang$keyboard$Keyboard$subscription(\r\n\t\tA2(_elm_lang$keyboard$Keyboard$MySub, 'keyup', tagger));\r\n};\r\nvar _elm_lang$keyboard$Keyboard$subMap = F2(\r\n\tfunction (func, _p12) {\r\n\t\tvar _p13 = _p12;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$keyboard$Keyboard$MySub,\r\n\t\t\t_p13._0,\r\n\t\t\tfunction (_p14) {\r\n\t\t\t\treturn func(\r\n\t\t\t\t\t_p13._1(_p14));\r\n\t\t\t});\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Keyboard'] = {pkg: 'elm-lang/keyboard', init: _elm_lang$keyboard$Keyboard$init, onEffects: _elm_lang$keyboard$Keyboard$onEffects, onSelfMsg: _elm_lang$keyboard$Keyboard$onSelfMsg, tag: 'sub', subMap: _elm_lang$keyboard$Keyboard$subMap};\r\n\r\nvar _elm_lang$window$Native_Window = function()\r\n{\r\n\r\nvar size = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\t{\r\n\tcallback(_elm_lang$core$Native_Scheduler.succeed({\r\n\t\twidth: window.innerWidth,\r\n\t\theight: window.innerHeight\r\n\t}));\r\n});\r\n\r\nreturn {\r\n\tsize: size\r\n};\r\n\r\n}();\r\nvar _elm_lang$window$Window_ops = _elm_lang$window$Window_ops || {};\r\n_elm_lang$window$Window_ops['&>'] = F2(\r\n\tfunction (t1, t2) {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\tt1,\r\n\t\t\tfunction (_p0) {\r\n\t\t\t\treturn t2;\r\n\t\t\t});\r\n\t});\r\nvar _elm_lang$window$Window$onSelfMsg = F3(\r\n\tfunction (router, dimensions, state) {\r\n\t\tvar _p1 = state;\r\n\t\tif (_p1.ctor === 'Nothing') {\r\n\t\t\treturn _elm_lang$core$Task$succeed(state);\r\n\t\t} else {\r\n\t\t\tvar send = function (_p2) {\r\n\t\t\t\tvar _p3 = _p2;\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\r\n\t\t\t\t\trouter,\r\n\t\t\t\t\t_p3._0(dimensions));\r\n\t\t\t};\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$window$Window_ops['&>'],\r\n\t\t\t\t_elm_lang$core$Task$sequence(\r\n\t\t\t\t\tA2(_elm_lang$core$List$map, send, _p1._0.subs)),\r\n\t\t\t\t_elm_lang$core$Task$succeed(state));\r\n\t\t}\r\n\t});\r\nvar _elm_lang$window$Window$init = _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\r\nvar _elm_lang$window$Window$size = _elm_lang$window$Native_Window.size;\r\nvar _elm_lang$window$Window$width = A2(\r\n\t_elm_lang$core$Task$map,\r\n\tfunction (_) {\r\n\t\treturn _.width;\r\n\t},\r\n\t_elm_lang$window$Window$size);\r\nvar _elm_lang$window$Window$height = A2(\r\n\t_elm_lang$core$Task$map,\r\n\tfunction (_) {\r\n\t\treturn _.height;\r\n\t},\r\n\t_elm_lang$window$Window$size);\r\nvar _elm_lang$window$Window$onEffects = F3(\r\n\tfunction (router, newSubs, oldState) {\r\n\t\tvar _p4 = {ctor: '_Tuple2', _0: oldState, _1: newSubs};\r\n\t\tif (_p4._0.ctor === 'Nothing') {\r\n\t\t\tif (_p4._1.ctor === '[]') {\r\n\t\t\t\treturn _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\r\n\t\t\t} else {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t_elm_lang$core$Process$spawn(\r\n\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t_elm_lang$dom$Dom_LowLevel$onWindow,\r\n\t\t\t\t\t\t\t'resize',\r\n\t\t\t\t\t\t\t_elm_lang$core$Json_Decode$succeed(\r\n\t\t\t\t\t\t\t\t{ctor: '_Tuple0'}),\r\n\t\t\t\t\t\t\tfunction (_p5) {\r\n\t\t\t\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$window$Window$size,\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router));\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\tfunction (pid) {\r\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\t\t\t{subs: newSubs, pid: pid}));\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_p4._1.ctor === '[]') {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$window$Window_ops['&>'],\r\n\t\t\t\t\t_elm_lang$core$Process$kill(_p4._0._0.pid),\r\n\t\t\t\t\t_elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing));\r\n\t\t\t} else {\r\n\t\t\t\treturn _elm_lang$core$Task$succeed(\r\n\t\t\t\t\t_elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\t{subs: newSubs, pid: _p4._0._0.pid}));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _elm_lang$window$Window$subscription = _elm_lang$core$Native_Platform.leaf('Window');\r\nvar _elm_lang$window$Window$Size = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {width: a, height: b};\r\n\t});\r\nvar _elm_lang$window$Window$MySub = function (a) {\r\n\treturn {ctor: 'MySub', _0: a};\r\n};\r\nvar _elm_lang$window$Window$resizes = function (tagger) {\r\n\treturn _elm_lang$window$Window$subscription(\r\n\t\t_elm_lang$window$Window$MySub(tagger));\r\n};\r\nvar _elm_lang$window$Window$subMap = F2(\r\n\tfunction (func, _p6) {\r\n\t\tvar _p7 = _p6;\r\n\t\treturn _elm_lang$window$Window$MySub(\r\n\t\t\tfunction (_p8) {\r\n\t\t\t\treturn func(\r\n\t\t\t\t\t_p7._0(_p8));\r\n\t\t\t});\r\n\t});\r\n_elm_lang$core$Native_Platform.effectManagers['Window'] = {pkg: 'elm-lang/window', init: _elm_lang$window$Window$init, onEffects: _elm_lang$window$Window$onEffects, onSelfMsg: _elm_lang$window$Window$onSelfMsg, tag: 'sub', subMap: _elm_lang$window$Window$subMap};\r\n\r\nvar _evancz$elm_graphics$Native_Element = function()\r\n{\r\n\r\n\r\n// CREATION\r\n\r\nvar createNode =\r\n\ttypeof document === 'undefined'\r\n\t\t?\r\n\t\t\tfunction(_)\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstyle: {},\r\n\t\t\t\t\tappendChild: function() {}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t:\r\n\t\t\tfunction(elementType)\r\n\t\t\t{\r\n\t\t\t\tvar node = document.createElement(elementType);\r\n\t\t\t\tnode.style.padding = '0';\r\n\t\t\t\tnode.style.margin = '0';\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t;\r\n\r\n\r\nfunction newElement(width, height, elementPrim)\r\n{\r\n\treturn {\r\n\t\tctor: 'Element_elm_builtin',\r\n\t\t_0: {\r\n\t\t\telement: elementPrim,\r\n\t\t\tprops: {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tcolor: _elm_lang$core$Maybe$Nothing,\r\n\t\t\t\thref: '',\r\n\t\t\t\ttag: ''\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\n// PROPERTIES\r\n\r\nfunction setProps(elem, node)\r\n{\r\n\tvar props = elem.props;\r\n\r\n\tvar element = elem.element;\r\n\tvar width = props.width - (element.adjustWidth || 0);\r\n\tvar height = props.height - (element.adjustHeight || 0);\r\n\tnode.style.width  = (width | 0) + 'px';\r\n\tnode.style.height = (height | 0) + 'px';\r\n\r\n\tif (props.opacity !== 1)\r\n\t{\r\n\t\tnode.style.opacity = props.opacity;\r\n\t}\r\n\r\n\tif (props.color.ctor === 'Just')\r\n\t{\r\n\t\tnode.style.backgroundColor = _evancz$elm_graphics$Text$colorToCss(props.color._0);\r\n\t}\r\n\r\n\tif (props.tag !== '')\r\n\t{\r\n\t\tnode.id = props.tag;\r\n\t}\r\n\r\n\tif (props.href !== '')\r\n\t{\r\n\t\tvar anchor = createNode('a');\r\n\t\tanchor.href = props.href;\r\n\t\tanchor.style.display = 'block';\r\n\t\tanchor.style.pointerEvents = 'auto';\r\n\t\tanchor.appendChild(node);\r\n\t\tnode = anchor;\r\n\t}\r\n\r\n\treturn node;\r\n}\r\n\r\n\r\n// IMAGES\r\n\r\nfunction image(props, img)\r\n{\r\n\tswitch (img._0.ctor)\r\n\t{\r\n\t\tcase 'Plain':\r\n\t\t\treturn plainImage(img._3);\r\n\r\n\t\tcase 'Fitted':\r\n\t\t\treturn fittedImage(props.width, props.height, img._3);\r\n\r\n\t\tcase 'Cropped':\r\n\t\t\treturn croppedImage(img, props.width, props.height, img._3);\r\n\r\n\t\tcase 'Tiled':\r\n\t\t\treturn tiledImage(img._3);\r\n\t}\r\n}\r\n\r\nfunction plainImage(src)\r\n{\r\n\tvar img = createNode('img');\r\n\timg.src = src;\r\n\timg.name = src;\r\n\timg.style.display = 'block';\r\n\treturn img;\r\n}\r\n\r\nfunction tiledImage(src)\r\n{\r\n\tvar div = createNode('div');\r\n\tdiv.style.backgroundImage = 'url(' + src + ')';\r\n\treturn div;\r\n}\r\n\r\nfunction fittedImage(w, h, src)\r\n{\r\n\tvar div = createNode('div');\r\n\tdiv.style.background = 'url(' + src + ') no-repeat center';\r\n\tdiv.style.webkitBackgroundSize = 'cover';\r\n\tdiv.style.MozBackgroundSize = 'cover';\r\n\tdiv.style.OBackgroundSize = 'cover';\r\n\tdiv.style.backgroundSize = 'cover';\r\n\treturn div;\r\n}\r\n\r\nfunction croppedImage(elem, w, h, src)\r\n{\r\n\tvar pos = elem._0._0;\r\n\tvar e = createNode('div');\r\n\te.style.overflow = 'hidden';\r\n\r\n\tvar img = createNode('img');\r\n\timg.onload = function() {\r\n\t\tvar sw = w / elem._1, sh = h / elem._2;\r\n\t\timg.style.width = ((this.width * sw) | 0) + 'px';\r\n\t\timg.style.height = ((this.height * sh) | 0) + 'px';\r\n\t\timg.style.marginLeft = ((- pos._0 * sw) | 0) + 'px';\r\n\t\timg.style.marginTop = ((- pos._1 * sh) | 0) + 'px';\r\n\t};\r\n\timg.src = src;\r\n\timg.name = src;\r\n\te.appendChild(img);\r\n\treturn e;\r\n}\r\n\r\n\r\n// FLOW\r\n\r\nfunction goOut(node)\r\n{\r\n\tnode.style.position = 'absolute';\r\n\treturn node;\r\n}\r\nfunction goDown(node)\r\n{\r\n\treturn node;\r\n}\r\nfunction goRight(node)\r\n{\r\n\tnode.style.styleFloat = 'left';\r\n\tnode.style.cssFloat = 'left';\r\n\treturn node;\r\n}\r\n\r\nvar directionTable = {\r\n\tDUp: goDown,\r\n\tDDown: goDown,\r\n\tDLeft: goRight,\r\n\tDRight: goRight,\r\n\tDIn: goOut,\r\n\tDOut: goOut\r\n};\r\nfunction needsReversal(dir)\r\n{\r\n\treturn dir === 'DUp' || dir === 'DLeft' || dir === 'DIn';\r\n}\r\n\r\nfunction flow(dir, elist)\r\n{\r\n\tvar array = _elm_lang$core$Native_List.toArray(elist);\r\n\tvar container = createNode('div');\r\n\tvar goDir = directionTable[dir];\r\n\tif (goDir === goOut)\r\n\t{\r\n\t\tcontainer.style.pointerEvents = 'none';\r\n\t}\r\n\tif (needsReversal(dir))\r\n\t{\r\n\t\tarray.reverse();\r\n\t}\r\n\tvar len = array.length;\r\n\tfor (var i = 0; i < len; ++i)\r\n\t{\r\n\t\tcontainer.appendChild(goDir(render(array[i])));\r\n\t}\r\n\treturn container;\r\n}\r\n\r\n\r\n// CONTAINER\r\n\r\nfunction toPos(pos)\r\n{\r\n\treturn pos.ctor === 'Absolute'\r\n\t\t? pos._0 + 'px'\r\n\t\t: (pos._0 * 100) + '%';\r\n}\r\n\r\n// must clear right, left, top, bottom, and transform\r\n// before calling this function\r\nfunction setPos(pos, wrappedElement, e)\r\n{\r\n\tvar elem = wrappedElement._0;\r\n\tvar element = elem.element;\r\n\tvar props = elem.props;\r\n\tvar w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\r\n\tvar h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\r\n\r\n\te.style.position = 'absolute';\r\n\te.style.margin = 'auto';\r\n\tvar transform = '';\r\n\r\n\tswitch (pos.horizontal.ctor)\r\n\t{\r\n\t\tcase 'P':\r\n\t\t\te.style.right = toPos(pos.x);\r\n\t\t\te.style.removeProperty('left');\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'Z':\r\n\t\t\ttransform = 'translateX(' + ((-w / 2) | 0) + 'px) ';\r\n\r\n\t\tcase 'N':\r\n\t\t\te.style.left = toPos(pos.x);\r\n\t\t\te.style.removeProperty('right');\r\n\t\t\tbreak;\r\n\t}\r\n\tswitch (pos.vertical.ctor)\r\n\t{\r\n\t\tcase 'N':\r\n\t\t\te.style.bottom = toPos(pos.y);\r\n\t\t\te.style.removeProperty('top');\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'Z':\r\n\t\t\ttransform += 'translateY(' + ((-h / 2) | 0) + 'px)';\r\n\r\n\t\tcase 'P':\r\n\t\t\te.style.top = toPos(pos.y);\r\n\t\t\te.style.removeProperty('bottom');\r\n\t\t\tbreak;\r\n\t}\r\n\tif (transform !== '')\r\n\t{\r\n\t\taddTransform(e.style, transform);\r\n\t}\r\n\treturn e;\r\n}\r\n\r\nfunction addTransform(style, transform)\r\n{\r\n\tstyle.transform       = transform;\r\n\tstyle.msTransform     = transform;\r\n\tstyle.MozTransform    = transform;\r\n\tstyle.webkitTransform = transform;\r\n\tstyle.OTransform      = transform;\r\n}\r\n\r\nfunction container(pos, elem)\r\n{\r\n\tvar e = render(elem);\r\n\tsetPos(pos, elem, e);\r\n\tvar div = createNode('div');\r\n\tdiv.style.position = 'relative';\r\n\tdiv.style.overflow = 'hidden';\r\n\tdiv.appendChild(e);\r\n\treturn div;\r\n}\r\n\r\n\r\nfunction rawHtml(elem)\r\n{\r\n\tvar html = elem.html;\r\n\tvar align = elem.align;\r\n\r\n\tvar div = createNode('div');\r\n\tdiv.innerHTML = html;\r\n\tdiv.style.visibility = 'hidden';\r\n\tif (align)\r\n\t{\r\n\t\tdiv.style.textAlign = align;\r\n\t}\r\n\tdiv.style.visibility = 'visible';\r\n\tdiv.style.pointerEvents = 'auto';\r\n\treturn div;\r\n}\r\n\r\n\r\n// TO HTML\r\n\r\nfunction toHtml(element)\r\n{\r\n\treturn _elm_lang$virtual_dom$Native_VirtualDom.custom(\r\n\t\t_elm_lang$core$Native_List.Nil,\r\n\t\telement,\r\n\t\timplementation\r\n\t);\r\n}\r\n\r\n\r\n// WIDGET IMPLEMENTATION\r\n\r\nvar implementation = {\r\n\trender: render,\r\n\tdiff: diff\r\n};\r\n\r\nfunction diff(a, b)\r\n{\r\n\tvar aModel = a.model;\r\n\tvar bModel = b.model;\r\n\r\n\tif (aModel === bModel)\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\tapplyPatch: applyPatch,\r\n\t\tdata: { a: aModel, b: bModel }\r\n\t};\r\n}\r\n\r\nfunction applyPatch(domNode, data)\r\n{\r\n\treturn updateAndReplace(domNode, data.a, data.b);\r\n}\r\n\r\n\r\n// RENDER\r\n\r\nfunction render(wrappedElement)\r\n{\r\n\tvar elem = wrappedElement._0;\r\n\treturn setProps(elem, makeElement(elem));\r\n}\r\n\r\nfunction makeElement(e)\r\n{\r\n\tvar elem = e.element;\r\n\tswitch (elem.ctor)\r\n\t{\r\n\t\tcase 'Image':\r\n\t\t\treturn image(e.props, elem);\r\n\r\n\t\tcase 'Flow':\r\n\t\t\treturn flow(elem._0.ctor, elem._1);\r\n\r\n\t\tcase 'Container':\r\n\t\t\treturn container(elem._0, elem._1);\r\n\r\n\t\tcase 'Spacer':\r\n\t\t\treturn createNode('div');\r\n\r\n\t\tcase 'RawHtml':\r\n\t\t\treturn rawHtml(elem);\r\n\r\n\t\tcase 'Custom':\r\n\t\t\treturn elem.render(elem.model);\r\n\t}\r\n}\r\n\r\nfunction updateAndReplace(node, curr, next)\r\n{\r\n\tvar newNode = update(node, curr, next);\r\n\tif (newNode !== node)\r\n\t{\r\n\t\tnode.parentNode.replaceChild(newNode, node);\r\n\t}\r\n\treturn newNode;\r\n}\r\n\r\n\r\n// UPDATE\r\n\r\nfunction update(node, wrappedCurrent, wrappedNext)\r\n{\r\n\tvar curr = wrappedCurrent._0;\r\n\tvar next = wrappedNext._0;\r\n\tvar rootNode = node;\r\n\r\n\tif (curr === next)\r\n\t{\r\n\t\treturn rootNode;\r\n\t}\r\n\r\n\tif (node.tagName === 'A')\r\n\t{\r\n\t\tnode = node.firstChild;\r\n\t}\r\n\tif (curr.element.ctor !== next.element.ctor)\r\n\t{\r\n\t\treturn render(wrappedNext);\r\n\t}\r\n\tvar nextE = next.element;\r\n\tvar currE = curr.element;\r\n\tswitch (nextE.ctor)\r\n\t{\r\n\t\tcase 'Spacer':\r\n\t\t\tupdateProps(node, curr, next);\r\n\t\t\treturn rootNode;\r\n\r\n\t\tcase 'RawHtml':\r\n\t\t\tif(currE.html.valueOf() !== nextE.html.valueOf())\r\n\t\t\t{\r\n\t\t\t\tnode.innerHTML = nextE.html;\r\n\t\t\t}\r\n\t\t\tupdateProps(node, curr, next);\r\n\t\t\treturn rootNode;\r\n\r\n\t\tcase 'Image':\r\n\t\t\tif (nextE._0.ctor === 'Plain')\r\n\t\t\t{\r\n\t\t\t\tif (nextE._3 !== currE._3)\r\n\t\t\t\t{\r\n\t\t\t\t\tnode.src = nextE._3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!_elm_lang$core$Native_Utils.eq(nextE, currE)\r\n\t\t\t\t|| next.props.width !== curr.props.width\r\n\t\t\t\t|| next.props.height !== curr.props.height)\r\n\t\t\t{\r\n\t\t\t\treturn render(wrappedNext);\r\n\t\t\t}\r\n\t\t\tupdateProps(node, curr, next);\r\n\t\t\treturn rootNode;\r\n\r\n\t\tcase 'Flow':\r\n\t\t\tvar arr = _elm_lang$core$Native_List.toArray(nextE._1);\r\n\t\t\tfor (var i = arr.length; i--; )\r\n\t\t\t{\r\n\t\t\t\tarr[i] = arr[i]._0.element.ctor;\r\n\t\t\t}\r\n\t\t\tif (nextE._0.ctor !== currE._0.ctor)\r\n\t\t\t{\r\n\t\t\t\treturn render(wrappedNext);\r\n\t\t\t}\r\n\t\t\tvar nexts = _elm_lang$core$Native_List.toArray(nextE._1);\r\n\t\t\tvar kids = node.childNodes;\r\n\t\t\tif (nexts.length !== kids.length)\r\n\t\t\t{\r\n\t\t\t\treturn render(wrappedNext);\r\n\t\t\t}\r\n\t\t\tvar currs = _elm_lang$core$Native_List.toArray(currE._1);\r\n\t\t\tvar dir = nextE._0.ctor;\r\n\t\t\tvar goDir = directionTable[dir];\r\n\t\t\tvar toReverse = needsReversal(dir);\r\n\t\t\tvar len = kids.length;\r\n\t\t\tfor (var i = len; i--; )\r\n\t\t\t{\r\n\t\t\t\tvar subNode = kids[toReverse ? len - i - 1 : i];\r\n\t\t\t\tgoDir(updateAndReplace(subNode, currs[i], nexts[i]));\r\n\t\t\t}\r\n\t\t\tupdateProps(node, curr, next);\r\n\t\t\treturn rootNode;\r\n\r\n\t\tcase 'Container':\r\n\t\t\tvar subNode = node.firstChild;\r\n\t\t\tvar newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\r\n\t\t\tsetPos(nextE._0, nextE._1, newSubNode);\r\n\t\t\tupdateProps(node, curr, next);\r\n\t\t\treturn rootNode;\r\n\r\n\t\tcase 'Custom':\r\n\t\t\tif (currE.type === nextE.type)\r\n\t\t\t{\r\n\t\t\t\tvar updatedNode = nextE.update(node, currE.model, nextE.model);\r\n\t\t\t\tupdateProps(updatedNode, curr, next);\r\n\t\t\t\treturn updatedNode;\r\n\t\t\t}\r\n\t\t\treturn render(wrappedNext);\r\n\t}\r\n}\r\n\r\nfunction updateProps(node, curr, next)\r\n{\r\n\tvar nextProps = next.props;\r\n\tvar currProps = curr.props;\r\n\r\n\tvar element = next.element;\r\n\tvar width = nextProps.width - (element.adjustWidth || 0);\r\n\tvar height = nextProps.height - (element.adjustHeight || 0);\r\n\tif (width !== currProps.width)\r\n\t{\r\n\t\tnode.style.width = (width | 0) + 'px';\r\n\t}\r\n\tif (height !== currProps.height)\r\n\t{\r\n\t\tnode.style.height = (height | 0) + 'px';\r\n\t}\r\n\r\n\tif (nextProps.opacity !== currProps.opacity)\r\n\t{\r\n\t\tnode.style.opacity = nextProps.opacity;\r\n\t}\r\n\r\n\tvar nextColor = nextProps.color.ctor === 'Just'\r\n\t\t? _evancz$elm_graphics$Text$colorToCss(nextProps.color._0)\r\n\t\t: '';\r\n\tif (node.style.backgroundColor !== nextColor)\r\n\t{\r\n\t\tnode.style.backgroundColor = nextColor;\r\n\t}\r\n\r\n\tif (nextProps.tag !== currProps.tag)\r\n\t{\r\n\t\tnode.id = nextProps.tag;\r\n\t}\r\n\r\n\tif (nextProps.href !== currProps.href)\r\n\t{\r\n\t\tif (currProps.href === '')\r\n\t\t{\r\n\t\t\t// add a surrounding href\r\n\t\t\tvar anchor = createNode('a');\r\n\t\t\tanchor.href = nextProps.href;\r\n\t\t\tanchor.style.display = 'block';\r\n\t\t\tanchor.style.pointerEvents = 'auto';\r\n\r\n\t\t\tnode.parentNode.replaceChild(anchor, node);\r\n\t\t\tanchor.appendChild(node);\r\n\t\t}\r\n\t\telse if (nextProps.href === '')\r\n\t\t{\r\n\t\t\t// remove the surrounding href\r\n\t\t\tvar anchor = node.parentNode;\r\n\t\t\tanchor.parentNode.replaceChild(node, anchor);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// just update the link\r\n\t\t\tnode.parentNode.href = nextProps.href;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// TEXT\r\n\r\nfunction block(align)\r\n{\r\n\treturn function(text)\r\n\t{\r\n\t\tvar raw = {\r\n\t\t\tctor: 'RawHtml',\r\n\t\t\thtml: _evancz$elm_graphics$Text$toHtmlString(text),\r\n\t\t\talign: align\r\n\t\t};\r\n\t\tvar pos = htmlHeight(0, raw);\r\n\t\treturn newElement(pos._0, pos._1, raw);\r\n\t};\r\n}\r\n\r\nvar htmlHeight =\r\n\ttypeof document !== 'undefined'\r\n\t\t? realHtmlHeight\r\n\t\t: function(a, b) { return _elm_lang$core$Native_Utils.Tuple2(0, 0); };\r\n\r\nfunction realHtmlHeight(width, rawHtml)\r\n{\r\n\t// create dummy node\r\n\tvar temp = document.createElement('div');\r\n\ttemp.innerHTML = rawHtml.html;\r\n\tif (width > 0)\r\n\t{\r\n\t\ttemp.style.width = width + 'px';\r\n\t}\r\n\ttemp.style.visibility = 'hidden';\r\n\ttemp.style.styleFloat = 'left';\r\n\ttemp.style.cssFloat = 'left';\r\n\r\n\tdocument.body.appendChild(temp);\r\n\r\n\t// get dimensions\r\n\tvar style = window.getComputedStyle(temp, null);\r\n\tvar w = Math.ceil(style.getPropertyValue('width').slice(0, -2) - 0);\r\n\tvar h = Math.ceil(style.getPropertyValue('height').slice(0, -2) - 0);\r\n\tdocument.body.removeChild(temp);\r\n\treturn _elm_lang$core$Native_Utils.Tuple2(w, h);\r\n}\r\n\r\n\r\nreturn {\r\n\ttoHtml: toHtml,\r\n\r\n\trender: render,\r\n\tupdate: update,\r\n\tcreateNode: createNode,\r\n\tnewElement: F3(newElement),\r\n\taddTransform: addTransform,\r\n\r\n\tblock: block\r\n};\r\n\r\n}();\r\n\r\n\r\nvar _evancz$elm_graphics$Text$wrap = F3(\r\n\tfunction (maybeHref, styles, insides) {\r\n\t\tvar linkedInsides = function () {\r\n\t\t\tvar _p0 = maybeHref;\r\n\t\t\tif (_p0.ctor === 'Nothing') {\r\n\t\t\t\treturn insides;\r\n\t\t\t} else {\r\n\t\t\t\treturn A2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t'<a href=\\\"',\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t_p0._0,\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t'\\\">',\r\n\t\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], insides, '</a>'))));\r\n\t\t\t}\r\n\t\t}();\r\n\t\treturn _elm_lang$core$Native_Utils.eq(styles, '') ? linkedInsides : A2(\r\n\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t'<span style=\\\"',\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\tstyles,\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t'\\\">',\r\n\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], linkedInsides, '</span>'))));\r\n\t});\r\nvar _evancz$elm_graphics$Text$replace = F3(\r\n\tfunction (from, to, str) {\r\n\t\treturn A4(\r\n\t\t\t_elm_lang$core$Regex$replace,\r\n\t\t\t_elm_lang$core$Regex$All,\r\n\t\t\t_elm_lang$core$Regex$regex(from),\r\n\t\t\tfunction (_p1) {\r\n\t\t\t\treturn to;\r\n\t\t\t},\r\n\t\t\tstr);\r\n\t});\r\nvar _evancz$elm_graphics$Text$toHtmlString = function (text) {\r\n\treturn A3(_evancz$elm_graphics$Text$toHtmlStringHelp, _elm_lang$core$Maybe$Nothing, '', text);\r\n};\r\nvar _evancz$elm_graphics$Text$toHtmlStringHelp = F3(\r\n\tfunction (maybeHref, styles, text) {\r\n\t\ttoHtmlStringHelp:\r\n\t\twhile (true) {\r\n\t\t\tvar _p2 = text;\r\n\t\t\tswitch (_p2.ctor) {\r\n\t\t\t\tcase 'Str':\r\n\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t_evancz$elm_graphics$Text$wrap,\r\n\t\t\t\t\t\tmaybeHref,\r\n\t\t\t\t\t\tstyles,\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$String$join,\r\n\t\t\t\t\t\t\t'<br>',\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\t\t\t\t\tA2(_evancz$elm_graphics$Text$replace, ' ', '&nbsp;'),\r\n\t\t\t\t\t\t\t\t_elm_lang$core$String$lines(\r\n\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t_evancz$elm_graphics$Text$replace,\r\n\t\t\t\t\t\t\t\t\t\t'>',\r\n\t\t\t\t\t\t\t\t\t\t'&#62;',\r\n\t\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t\t_evancz$elm_graphics$Text$replace,\r\n\t\t\t\t\t\t\t\t\t\t\t'<',\r\n\t\t\t\t\t\t\t\t\t\t\t'&#60;',\r\n\t\t\t\t\t\t\t\t\t\t\tA3(\r\n\t\t\t\t\t\t\t\t\t\t\t\t_evancz$elm_graphics$Text$replace,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'\\'',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'&#39;',\r\n\t\t\t\t\t\t\t\t\t\t\t\tA3(_evancz$elm_graphics$Text$replace, '\\\"', '&#34;', _p2._0))))))));\r\n\t\t\t\tcase 'Append':\r\n\t\t\t\t\treturn A3(\r\n\t\t\t\t\t\t_evancz$elm_graphics$Text$wrap,\r\n\t\t\t\t\t\tmaybeHref,\r\n\t\t\t\t\t\tstyles,\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t_evancz$elm_graphics$Text$toHtmlString(_p2._0),\r\n\t\t\t\t\t\t\t_evancz$elm_graphics$Text$toHtmlString(_p2._1)));\r\n\t\t\t\tcase 'Link':\r\n\t\t\t\t\tvar _v2 = _elm_lang$core$Maybe$Just(\r\n\t\t\t\t\t\tA2(_elm_lang$core$Maybe$withDefault, _p2._0, maybeHref)),\r\n\t\t\t\t\t\t_v3 = styles,\r\n\t\t\t\t\t\t_v4 = _p2._1;\r\n\t\t\t\t\tmaybeHref = _v2;\r\n\t\t\t\t\tstyles = _v3;\r\n\t\t\t\t\ttext = _v4;\r\n\t\t\t\t\tcontinue toHtmlStringHelp;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvar _v5 = maybeHref,\r\n\t\t\t\t\t\t_v6 = A2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\tstyles,\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t_p2._0,\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t':',\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$core$Basics_ops['++'], _p2._1, ';')))),\r\n\t\t\t\t\t\t_v7 = _p2._2;\r\n\t\t\t\t\tmaybeHref = _v5;\r\n\t\t\t\t\tstyles = _v6;\r\n\t\t\t\t\ttext = _v7;\r\n\t\t\t\t\tcontinue toHtmlStringHelp;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _evancz$elm_graphics$Text$colorToCss = function (color) {\r\n\tvar _p3 = _elm_lang$core$Color$toRgb(color);\r\n\tvar red = _p3.red;\r\n\tvar green = _p3.green;\r\n\tvar blue = _p3.blue;\r\n\tvar alpha = _p3.alpha;\r\n\treturn A2(\r\n\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t'rgba(',\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t_elm_lang$core$Basics$toString(red),\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t', ',\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t_elm_lang$core$Basics$toString(green),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t', ',\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(blue),\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t', ',\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(alpha),\r\n\t\t\t\t\t\t\t\t\t')'))))))));\r\n};\r\nvar _evancz$elm_graphics$Text$typefacesToString = function (faces) {\r\n\treturn A2(\r\n\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t'\\'',\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\tA2(_elm_lang$core$String$join, '\\', \\'', faces),\r\n\t\t\t'\\''));\r\n};\r\nvar _evancz$elm_graphics$Text$maybeAdd = F3(\r\n\tfunction (add, maybeValue, text) {\r\n\t\tvar _p4 = maybeValue;\r\n\t\tif (_p4.ctor === 'Nothing') {\r\n\t\t\treturn text;\r\n\t\t} else {\r\n\t\t\treturn A2(add, _p4._0, text);\r\n\t\t}\r\n\t});\r\nvar _evancz$elm_graphics$Text$defaultStyle = {\r\n\ttypeface: _elm_lang$core$Native_List.fromArray(\r\n\t\t[]),\r\n\theight: _elm_lang$core$Maybe$Nothing,\r\n\tcolor: _elm_lang$core$Color$black,\r\n\tbold: false,\r\n\titalic: false,\r\n\tline: _elm_lang$core$Maybe$Nothing\r\n};\r\nvar _evancz$elm_graphics$Text$Style = F6(\r\n\tfunction (a, b, c, d, e, f) {\r\n\t\treturn {typeface: a, height: b, color: c, bold: d, italic: e, line: f};\r\n\t});\r\nvar _evancz$elm_graphics$Text$Meta = F3(\r\n\tfunction (a, b, c) {\r\n\t\treturn {ctor: 'Meta', _0: a, _1: b, _2: c};\r\n\t});\r\nvar _evancz$elm_graphics$Text$typeface = F2(\r\n\tfunction (faces, text) {\r\n\t\tvar _p5 = faces;\r\n\t\tif (_p5.ctor === '[]') {\r\n\t\t\treturn text;\r\n\t\t} else {\r\n\t\t\treturn A3(\r\n\t\t\t\t_evancz$elm_graphics$Text$Meta,\r\n\t\t\t\t'font-family',\r\n\t\t\t\t_evancz$elm_graphics$Text$typefacesToString(faces),\r\n\t\t\t\ttext);\r\n\t\t}\r\n\t});\r\nvar _evancz$elm_graphics$Text$monospace = function (text) {\r\n\treturn A3(_evancz$elm_graphics$Text$Meta, 'font-family', 'monospace', text);\r\n};\r\nvar _evancz$elm_graphics$Text$height = F2(\r\n\tfunction (px, text) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Text$Meta,\r\n\t\t\t'font-size',\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t_elm_lang$core$Basics$toString(px),\r\n\t\t\t\t'px'),\r\n\t\t\ttext);\r\n\t});\r\nvar _evancz$elm_graphics$Text$color = F2(\r\n\tfunction (color, text) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Text$Meta,\r\n\t\t\t'color',\r\n\t\t\t_evancz$elm_graphics$Text$colorToCss(color),\r\n\t\t\ttext);\r\n\t});\r\nvar _evancz$elm_graphics$Text$bold = function (text) {\r\n\treturn A3(_evancz$elm_graphics$Text$Meta, 'font-weight', 'bold', text);\r\n};\r\nvar _evancz$elm_graphics$Text$italic = function (text) {\r\n\treturn A3(_evancz$elm_graphics$Text$Meta, 'font-style', 'italic', text);\r\n};\r\nvar _evancz$elm_graphics$Text$line = F2(\r\n\tfunction (lineTag, text) {\r\n\t\tvar decoration = function () {\r\n\t\t\tvar _p6 = lineTag;\r\n\t\t\tswitch (_p6.ctor) {\r\n\t\t\t\tcase 'Under':\r\n\t\t\t\t\treturn 'underline';\r\n\t\t\t\tcase 'Over':\r\n\t\t\t\t\treturn 'overline';\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn 'line-through';\r\n\t\t\t}\r\n\t\t}();\r\n\t\treturn A3(_evancz$elm_graphics$Text$Meta, 'text-decoration', decoration, text);\r\n\t});\r\nvar _evancz$elm_graphics$Text$style = F2(\r\n\tfunction (sty, text) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Text$maybeAdd,\r\n\t\t\t_evancz$elm_graphics$Text$height,\r\n\t\t\tsty.height,\r\n\t\t\tA3(\r\n\t\t\t\t_evancz$elm_graphics$Text$maybeAdd,\r\n\t\t\t\t_evancz$elm_graphics$Text$line,\r\n\t\t\t\tsty.line,\r\n\t\t\t\t(sty.italic ? _evancz$elm_graphics$Text$italic : _elm_lang$core$Basics$identity)(\r\n\t\t\t\t\t(sty.bold ? _evancz$elm_graphics$Text$bold : _elm_lang$core$Basics$identity)(\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t_evancz$elm_graphics$Text$typeface,\r\n\t\t\t\t\t\t\tsty.typeface,\r\n\t\t\t\t\t\t\tA2(_evancz$elm_graphics$Text$color, sty.color, text))))));\r\n\t});\r\nvar _evancz$elm_graphics$Text$Link = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Link', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Text$link = _evancz$elm_graphics$Text$Link;\r\nvar _evancz$elm_graphics$Text$Append = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Append', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Text$append = _evancz$elm_graphics$Text$Append;\r\nvar _evancz$elm_graphics$Text$Str = function (a) {\r\n\treturn {ctor: 'Str', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Text$fromString = _evancz$elm_graphics$Text$Str;\r\nvar _evancz$elm_graphics$Text$empty = _evancz$elm_graphics$Text$fromString('');\r\nvar _evancz$elm_graphics$Text$concat = function (texts) {\r\n\treturn A3(_elm_lang$core$List$foldr, _evancz$elm_graphics$Text$append, _evancz$elm_graphics$Text$empty, texts);\r\n};\r\nvar _evancz$elm_graphics$Text$join = F2(\r\n\tfunction (seperator, texts) {\r\n\t\treturn _evancz$elm_graphics$Text$concat(\r\n\t\t\tA2(_elm_lang$core$List$intersperse, seperator, texts));\r\n\t});\r\nvar _evancz$elm_graphics$Text$Through = {ctor: 'Through'};\r\nvar _evancz$elm_graphics$Text$Over = {ctor: 'Over'};\r\nvar _evancz$elm_graphics$Text$Under = {ctor: 'Under'};\r\n\r\nvar _evancz$elm_graphics$Element$justified = _evancz$elm_graphics$Native_Element.block('justify');\r\nvar _evancz$elm_graphics$Element$centered = _evancz$elm_graphics$Native_Element.block('center');\r\nvar _evancz$elm_graphics$Element$rightAligned = _evancz$elm_graphics$Native_Element.block('right');\r\nvar _evancz$elm_graphics$Element$leftAligned = _evancz$elm_graphics$Native_Element.block('left');\r\nvar _evancz$elm_graphics$Element$show = function (value) {\r\n\treturn _evancz$elm_graphics$Element$leftAligned(\r\n\t\t_evancz$elm_graphics$Text$monospace(\r\n\t\t\t_evancz$elm_graphics$Text$fromString(\r\n\t\t\t\t_elm_lang$core$Basics$toString(value))));\r\n};\r\nvar _evancz$elm_graphics$Element$newElement = _evancz$elm_graphics$Native_Element.newElement;\r\nvar _evancz$elm_graphics$Element$sizeOf = function (_p0) {\r\n\tvar _p1 = _p0;\r\n\tvar _p2 = _p1._0;\r\n\treturn {ctor: '_Tuple2', _0: _p2.props.width, _1: _p2.props.height};\r\n};\r\nvar _evancz$elm_graphics$Element$heightOf = function (_p3) {\r\n\tvar _p4 = _p3;\r\n\treturn _p4._0.props.height;\r\n};\r\nvar _evancz$elm_graphics$Element$widthOf = function (_p5) {\r\n\tvar _p6 = _p5;\r\n\treturn _p6._0.props.width;\r\n};\r\nvar _evancz$elm_graphics$Element$toHtml = _evancz$elm_graphics$Native_Element.toHtml;\r\nvar _evancz$elm_graphics$Element$Properties = F6(\r\n\tfunction (a, b, c, d, e, f) {\r\n\t\treturn {width: a, height: b, opacity: c, color: d, href: e, tag: f};\r\n\t});\r\nvar _evancz$elm_graphics$Element$RawPosition = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {horizontal: a, vertical: b, x: c, y: d};\r\n\t});\r\nvar _evancz$elm_graphics$Element$Element_elm_builtin = function (a) {\r\n\treturn {ctor: 'Element_elm_builtin', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Element$width = F2(\r\n\tfunction (newWidth, _p7) {\r\n\t\tvar _p8 = _p7;\r\n\t\tvar _p11 = _p8._0.props;\r\n\t\tvar _p10 = _p8._0.element;\r\n\t\tvar newHeight = function () {\r\n\t\t\tvar _p9 = _p10;\r\n\t\t\tswitch (_p9.ctor) {\r\n\t\t\t\tcase 'Image':\r\n\t\t\t\t\treturn _elm_lang$core$Basics$round(\r\n\t\t\t\t\t\t(_elm_lang$core$Basics$toFloat(_p9._2) / _elm_lang$core$Basics$toFloat(_p9._1)) * _elm_lang$core$Basics$toFloat(newWidth));\r\n\t\t\t\tcase 'RawHtml':\r\n\t\t\t\t\treturn _elm_lang$core$Basics$snd(\r\n\t\t\t\t\t\tA2(_evancz$elm_graphics$Native_Element.htmlHeight, newWidth, _p10));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn _p11.height;\r\n\t\t\t}\r\n\t\t}();\r\n\t\treturn _evancz$elm_graphics$Element$Element_elm_builtin(\r\n\t\t\t{\r\n\t\t\t\telement: _p10,\r\n\t\t\t\tprops: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p11,\r\n\t\t\t\t\t{width: newWidth, height: newHeight})\r\n\t\t\t});\r\n\t});\r\nvar _evancz$elm_graphics$Element$height = F2(\r\n\tfunction (newHeight, _p12) {\r\n\t\tvar _p13 = _p12;\r\n\t\treturn _evancz$elm_graphics$Element$Element_elm_builtin(\r\n\t\t\t{\r\n\t\t\t\telement: _p13._0.element,\r\n\t\t\t\tprops: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p13._0.props,\r\n\t\t\t\t\t{height: newHeight})\r\n\t\t\t});\r\n\t});\r\nvar _evancz$elm_graphics$Element$size = F3(\r\n\tfunction (w, h, e) {\r\n\t\treturn A2(\r\n\t\t\t_evancz$elm_graphics$Element$height,\r\n\t\t\th,\r\n\t\t\tA2(_evancz$elm_graphics$Element$width, w, e));\r\n\t});\r\nvar _evancz$elm_graphics$Element$opacity = F2(\r\n\tfunction (givenOpacity, _p14) {\r\n\t\tvar _p15 = _p14;\r\n\t\treturn _evancz$elm_graphics$Element$Element_elm_builtin(\r\n\t\t\t{\r\n\t\t\t\telement: _p15._0.element,\r\n\t\t\t\tprops: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p15._0.props,\r\n\t\t\t\t\t{opacity: givenOpacity})\r\n\t\t\t});\r\n\t});\r\nvar _evancz$elm_graphics$Element$color = F2(\r\n\tfunction (clr, _p16) {\r\n\t\tvar _p17 = _p16;\r\n\t\treturn _evancz$elm_graphics$Element$Element_elm_builtin(\r\n\t\t\t{\r\n\t\t\t\telement: _p17._0.element,\r\n\t\t\t\tprops: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p17._0.props,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolor: _elm_lang$core$Maybe$Just(clr)\r\n\t\t\t\t\t})\r\n\t\t\t});\r\n\t});\r\nvar _evancz$elm_graphics$Element$tag = F2(\r\n\tfunction (name, _p18) {\r\n\t\tvar _p19 = _p18;\r\n\t\treturn _evancz$elm_graphics$Element$Element_elm_builtin(\r\n\t\t\t{\r\n\t\t\t\telement: _p19._0.element,\r\n\t\t\t\tprops: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p19._0.props,\r\n\t\t\t\t\t{tag: name})\r\n\t\t\t});\r\n\t});\r\nvar _evancz$elm_graphics$Element$link = F2(\r\n\tfunction (href, _p20) {\r\n\t\tvar _p21 = _p20;\r\n\t\treturn _evancz$elm_graphics$Element$Element_elm_builtin(\r\n\t\t\t{\r\n\t\t\t\telement: _p21._0.element,\r\n\t\t\t\tprops: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t_p21._0.props,\r\n\t\t\t\t\t{href: href})\r\n\t\t\t});\r\n\t});\r\nvar _evancz$elm_graphics$Element$Custom = {ctor: 'Custom'};\r\nvar _evancz$elm_graphics$Element$RawHtml = {ctor: 'RawHtml'};\r\nvar _evancz$elm_graphics$Element$Spacer = {ctor: 'Spacer'};\r\nvar _evancz$elm_graphics$Element$spacer = F2(\r\n\tfunction (w, h) {\r\n\t\treturn A3(_evancz$elm_graphics$Element$newElement, w, h, _evancz$elm_graphics$Element$Spacer);\r\n\t});\r\nvar _evancz$elm_graphics$Element$empty = A2(_evancz$elm_graphics$Element$spacer, 0, 0);\r\nvar _evancz$elm_graphics$Element$Flow = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Flow', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Element$flow = F2(\r\n\tfunction (dir, es) {\r\n\t\tvar newFlow = F2(\r\n\t\t\tfunction (w, h) {\r\n\t\t\t\treturn A3(\r\n\t\t\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\t\t\tw,\r\n\t\t\t\t\th,\r\n\t\t\t\t\tA2(_evancz$elm_graphics$Element$Flow, dir, es));\r\n\t\t\t});\r\n\t\tvar maxOrZero = function (list) {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Maybe$withDefault,\r\n\t\t\t\t0,\r\n\t\t\t\t_elm_lang$core$List$maximum(list));\r\n\t\t};\r\n\t\tvar hs = A2(_elm_lang$core$List$map, _evancz$elm_graphics$Element$heightOf, es);\r\n\t\tvar ws = A2(_elm_lang$core$List$map, _evancz$elm_graphics$Element$widthOf, es);\r\n\t\tif (_elm_lang$core$Native_Utils.eq(\r\n\t\t\tes,\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]))) {\r\n\t\t\treturn _evancz$elm_graphics$Element$empty;\r\n\t\t} else {\r\n\t\t\tvar _p22 = dir;\r\n\t\t\tswitch (_p22.ctor) {\r\n\t\t\t\tcase 'DUp':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\tnewFlow,\r\n\t\t\t\t\t\tmaxOrZero(ws),\r\n\t\t\t\t\t\t_elm_lang$core$List$sum(hs));\r\n\t\t\t\tcase 'DDown':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\tnewFlow,\r\n\t\t\t\t\t\tmaxOrZero(ws),\r\n\t\t\t\t\t\t_elm_lang$core$List$sum(hs));\r\n\t\t\t\tcase 'DLeft':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\tnewFlow,\r\n\t\t\t\t\t\t_elm_lang$core$List$sum(ws),\r\n\t\t\t\t\t\tmaxOrZero(hs));\r\n\t\t\t\tcase 'DRight':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\tnewFlow,\r\n\t\t\t\t\t\t_elm_lang$core$List$sum(ws),\r\n\t\t\t\t\t\tmaxOrZero(hs));\r\n\t\t\t\tcase 'DIn':\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\tnewFlow,\r\n\t\t\t\t\t\tmaxOrZero(ws),\r\n\t\t\t\t\t\tmaxOrZero(hs));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn A2(\r\n\t\t\t\t\t\tnewFlow,\r\n\t\t\t\t\t\tmaxOrZero(ws),\r\n\t\t\t\t\t\tmaxOrZero(hs));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _evancz$elm_graphics$Element$Container = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'Container', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Element$container = F4(\r\n\tfunction (w, h, _p23, e) {\r\n\t\tvar _p24 = _p23;\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tw,\r\n\t\t\th,\r\n\t\t\tA2(_evancz$elm_graphics$Element$Container, _p24._0, e));\r\n\t});\r\nvar _evancz$elm_graphics$Element$Image = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {ctor: 'Image', _0: a, _1: b, _2: c, _3: d};\r\n\t});\r\nvar _evancz$elm_graphics$Element$Tiled = {ctor: 'Tiled'};\r\nvar _evancz$elm_graphics$Element$tiledImage = F3(\r\n\tfunction (w, h, src) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tw,\r\n\t\t\th,\r\n\t\t\tA4(_evancz$elm_graphics$Element$Image, _evancz$elm_graphics$Element$Tiled, w, h, src));\r\n\t});\r\nvar _evancz$elm_graphics$Element$Cropped = function (a) {\r\n\treturn {ctor: 'Cropped', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Element$croppedImage = F4(\r\n\tfunction (pos, w, h, src) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tw,\r\n\t\t\th,\r\n\t\t\tA4(\r\n\t\t\t\t_evancz$elm_graphics$Element$Image,\r\n\t\t\t\t_evancz$elm_graphics$Element$Cropped(pos),\r\n\t\t\t\tw,\r\n\t\t\t\th,\r\n\t\t\t\tsrc));\r\n\t});\r\nvar _evancz$elm_graphics$Element$Fitted = {ctor: 'Fitted'};\r\nvar _evancz$elm_graphics$Element$fittedImage = F3(\r\n\tfunction (w, h, src) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tw,\r\n\t\t\th,\r\n\t\t\tA4(_evancz$elm_graphics$Element$Image, _evancz$elm_graphics$Element$Fitted, w, h, src));\r\n\t});\r\nvar _evancz$elm_graphics$Element$Plain = {ctor: 'Plain'};\r\nvar _evancz$elm_graphics$Element$image = F3(\r\n\tfunction (w, h, src) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tw,\r\n\t\t\th,\r\n\t\t\tA4(_evancz$elm_graphics$Element$Image, _evancz$elm_graphics$Element$Plain, w, h, src));\r\n\t});\r\nvar _evancz$elm_graphics$Element$N = {ctor: 'N'};\r\nvar _evancz$elm_graphics$Element$Z = {ctor: 'Z'};\r\nvar _evancz$elm_graphics$Element$P = {ctor: 'P'};\r\nvar _evancz$elm_graphics$Element$Relative = function (a) {\r\n\treturn {ctor: 'Relative', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Element$relative = _evancz$elm_graphics$Element$Relative;\r\nvar _evancz$elm_graphics$Element$Absolute = function (a) {\r\n\treturn {ctor: 'Absolute', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Element$absolute = _evancz$elm_graphics$Element$Absolute;\r\nvar _evancz$elm_graphics$Element$Position = function (a) {\r\n\treturn {ctor: 'Position', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Element$middle = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$Z,\r\n\t\tvertical: _evancz$elm_graphics$Element$Z,\r\n\t\tx: _evancz$elm_graphics$Element$Relative(0.5),\r\n\t\ty: _evancz$elm_graphics$Element$Relative(0.5)\r\n\t});\r\nvar _evancz$elm_graphics$Element$topLeft = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$N,\r\n\t\tvertical: _evancz$elm_graphics$Element$P,\r\n\t\tx: _evancz$elm_graphics$Element$Absolute(0),\r\n\t\ty: _evancz$elm_graphics$Element$Absolute(0)\r\n\t});\r\nvar _evancz$elm_graphics$Element$topRight = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$P,\r\n\t\tvertical: _evancz$elm_graphics$Element$P,\r\n\t\tx: _evancz$elm_graphics$Element$Absolute(0),\r\n\t\ty: _evancz$elm_graphics$Element$Absolute(0)\r\n\t});\r\nvar _evancz$elm_graphics$Element$bottomLeft = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$N,\r\n\t\tvertical: _evancz$elm_graphics$Element$N,\r\n\t\tx: _evancz$elm_graphics$Element$Absolute(0),\r\n\t\ty: _evancz$elm_graphics$Element$Absolute(0)\r\n\t});\r\nvar _evancz$elm_graphics$Element$bottomRight = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$P,\r\n\t\tvertical: _evancz$elm_graphics$Element$N,\r\n\t\tx: _evancz$elm_graphics$Element$Absolute(0),\r\n\t\ty: _evancz$elm_graphics$Element$Absolute(0)\r\n\t});\r\nvar _evancz$elm_graphics$Element$midLeft = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$N,\r\n\t\tvertical: _evancz$elm_graphics$Element$Z,\r\n\t\tx: _evancz$elm_graphics$Element$Absolute(0),\r\n\t\ty: _evancz$elm_graphics$Element$Relative(0.5)\r\n\t});\r\nvar _evancz$elm_graphics$Element$midRight = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$P,\r\n\t\tvertical: _evancz$elm_graphics$Element$Z,\r\n\t\tx: _evancz$elm_graphics$Element$Absolute(0),\r\n\t\ty: _evancz$elm_graphics$Element$Relative(0.5)\r\n\t});\r\nvar _evancz$elm_graphics$Element$midTop = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$Z,\r\n\t\tvertical: _evancz$elm_graphics$Element$P,\r\n\t\tx: _evancz$elm_graphics$Element$Relative(0.5),\r\n\t\ty: _evancz$elm_graphics$Element$Absolute(0)\r\n\t});\r\nvar _evancz$elm_graphics$Element$midBottom = _evancz$elm_graphics$Element$Position(\r\n\t{\r\n\t\thorizontal: _evancz$elm_graphics$Element$Z,\r\n\t\tvertical: _evancz$elm_graphics$Element$N,\r\n\t\tx: _evancz$elm_graphics$Element$Relative(0.5),\r\n\t\ty: _evancz$elm_graphics$Element$Absolute(0)\r\n\t});\r\nvar _evancz$elm_graphics$Element$middleAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$Z, vertical: _evancz$elm_graphics$Element$Z, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$topLeftAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$N, vertical: _evancz$elm_graphics$Element$P, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$topRightAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$P, vertical: _evancz$elm_graphics$Element$P, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$bottomLeftAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$N, vertical: _evancz$elm_graphics$Element$N, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$bottomRightAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$P, vertical: _evancz$elm_graphics$Element$N, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$midLeftAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$N, vertical: _evancz$elm_graphics$Element$Z, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$midRightAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$P, vertical: _evancz$elm_graphics$Element$Z, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$midTopAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$Z, vertical: _evancz$elm_graphics$Element$P, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$midBottomAt = F2(\r\n\tfunction (x, y) {\r\n\t\treturn _evancz$elm_graphics$Element$Position(\r\n\t\t\t{horizontal: _evancz$elm_graphics$Element$Z, vertical: _evancz$elm_graphics$Element$N, x: x, y: y});\r\n\t});\r\nvar _evancz$elm_graphics$Element$DOut = {ctor: 'DOut'};\r\nvar _evancz$elm_graphics$Element$layers = function (es) {\r\n\tvar hs = A2(_elm_lang$core$List$map, _evancz$elm_graphics$Element$heightOf, es);\r\n\tvar ws = A2(_elm_lang$core$List$map, _evancz$elm_graphics$Element$widthOf, es);\r\n\treturn A3(\r\n\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$Maybe$withDefault,\r\n\t\t\t0,\r\n\t\t\t_elm_lang$core$List$maximum(ws)),\r\n\t\tA2(\r\n\t\t\t_elm_lang$core$Maybe$withDefault,\r\n\t\t\t0,\r\n\t\t\t_elm_lang$core$List$maximum(hs)),\r\n\t\tA2(_evancz$elm_graphics$Element$Flow, _evancz$elm_graphics$Element$DOut, es));\r\n};\r\nvar _evancz$elm_graphics$Element$outward = _evancz$elm_graphics$Element$DOut;\r\nvar _evancz$elm_graphics$Element$DIn = {ctor: 'DIn'};\r\nvar _evancz$elm_graphics$Element$inward = _evancz$elm_graphics$Element$DIn;\r\nvar _evancz$elm_graphics$Element$DRight = {ctor: 'DRight'};\r\nvar _evancz$elm_graphics$Element$right = _evancz$elm_graphics$Element$DRight;\r\nvar _evancz$elm_graphics$Element$beside = F2(\r\n\tfunction (lft, rht) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\t_evancz$elm_graphics$Element$widthOf(lft) + _evancz$elm_graphics$Element$widthOf(rht),\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics$max,\r\n\t\t\t\t_evancz$elm_graphics$Element$heightOf(lft),\r\n\t\t\t\t_evancz$elm_graphics$Element$heightOf(rht)),\r\n\t\t\tA2(\r\n\t\t\t\t_evancz$elm_graphics$Element$Flow,\r\n\t\t\t\t_evancz$elm_graphics$Element$right,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[lft, rht])));\r\n\t});\r\nvar _evancz$elm_graphics$Element$DLeft = {ctor: 'DLeft'};\r\nvar _evancz$elm_graphics$Element$left = _evancz$elm_graphics$Element$DLeft;\r\nvar _evancz$elm_graphics$Element$DDown = {ctor: 'DDown'};\r\nvar _evancz$elm_graphics$Element$above = F2(\r\n\tfunction (hi, lo) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics$max,\r\n\t\t\t\t_evancz$elm_graphics$Element$widthOf(hi),\r\n\t\t\t\t_evancz$elm_graphics$Element$widthOf(lo)),\r\n\t\t\t_evancz$elm_graphics$Element$heightOf(hi) + _evancz$elm_graphics$Element$heightOf(lo),\r\n\t\t\tA2(\r\n\t\t\t\t_evancz$elm_graphics$Element$Flow,\r\n\t\t\t\t_evancz$elm_graphics$Element$DDown,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[hi, lo])));\r\n\t});\r\nvar _evancz$elm_graphics$Element$below = F2(\r\n\tfunction (lo, hi) {\r\n\t\treturn A3(\r\n\t\t\t_evancz$elm_graphics$Element$newElement,\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$Basics$max,\r\n\t\t\t\t_evancz$elm_graphics$Element$widthOf(hi),\r\n\t\t\t\t_evancz$elm_graphics$Element$widthOf(lo)),\r\n\t\t\t_evancz$elm_graphics$Element$heightOf(hi) + _evancz$elm_graphics$Element$heightOf(lo),\r\n\t\t\tA2(\r\n\t\t\t\t_evancz$elm_graphics$Element$Flow,\r\n\t\t\t\t_evancz$elm_graphics$Element$DDown,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[hi, lo])));\r\n\t});\r\nvar _evancz$elm_graphics$Element$down = _evancz$elm_graphics$Element$DDown;\r\nvar _evancz$elm_graphics$Element$DUp = {ctor: 'DUp'};\r\nvar _evancz$elm_graphics$Element$up = _evancz$elm_graphics$Element$DUp;\r\n\r\nvar _evancz$elm_graphics$Native_Collage = function()\r\n{\r\n\r\nfunction setStrokeStyle(ctx, style)\r\n{\r\n\tctx.lineWidth = style.width;\r\n\r\n\tvar cap = style.cap.ctor;\r\n\tctx.lineCap = cap === 'Flat'\r\n\t\t? 'butt'\r\n\t\t: cap === 'Round'\r\n\t\t\t? 'round'\r\n\t\t\t: 'square';\r\n\r\n\tvar join = style.join.ctor;\r\n\tctx.lineJoin = join === 'Smooth'\r\n\t\t? 'round'\r\n\t\t: join === 'Sharp'\r\n\t\t\t? 'miter'\r\n\t\t\t: 'bevel';\r\n\r\n\tctx.miterLimit = style.join._0 || 10;\r\n\tctx.strokeStyle = _evancz$elm_graphics$Text$colorToCss(style.color);\r\n}\r\n\r\nfunction setFillStyle(redo, ctx, style)\r\n{\r\n\tvar sty = style.ctor;\r\n\tctx.fillStyle = sty === 'Solid'\r\n\t\t? _evancz$elm_graphics$Text$colorToCss(style._0)\r\n\t\t: sty === 'Texture'\r\n\t\t\t? texture(redo, ctx, style._0)\r\n\t\t\t: gradient(ctx, style._0);\r\n}\r\n\r\nfunction trace(ctx, path)\r\n{\r\n\tvar points = _elm_lang$core$Native_List.toArray(path);\r\n\tvar i = points.length - 1;\r\n\tif (i <= 0)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tctx.moveTo(points[i]._0, points[i]._1);\r\n\twhile (i--)\r\n\t{\r\n\t\tctx.lineTo(points[i]._0, points[i]._1);\r\n\t}\r\n\tif (path.closed)\r\n\t{\r\n\t\ti = points.length - 1;\r\n\t\tctx.lineTo(points[i]._0, points[i]._1);\r\n\t}\r\n}\r\n\r\nfunction line(ctx, style, path)\r\n{\r\n\tif (style.dashing.ctor === '[]')\r\n\t{\r\n\t\ttrace(ctx, path);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcustomLineHelp(ctx, style, path);\r\n\t}\r\n\tctx.scale(1, -1);\r\n\tctx.stroke();\r\n}\r\n\r\nfunction customLineHelp(ctx, style, path)\r\n{\r\n\tvar points = _elm_lang$core$Native_List.toArray(path);\r\n\tif (path.closed)\r\n\t{\r\n\t\tpoints.push(points[0]);\r\n\t}\r\n\tvar pattern = _elm_lang$core$Native_List.toArray(style.dashing);\r\n\tvar i = points.length - 1;\r\n\tif (i <= 0)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tvar x0 = points[i]._0, y0 = points[i]._1;\r\n\tvar x1 = 0, y1 = 0, dx = 0, dy = 0, remaining = 0;\r\n\tvar pindex = 0, plen = pattern.length;\r\n\tvar draw = true, segmentLength = pattern[0];\r\n\tctx.moveTo(x0, y0);\r\n\twhile (i--)\r\n\t{\r\n\t\tx1 = points[i]._0;\r\n\t\ty1 = points[i]._1;\r\n\t\tdx = x1 - x0;\r\n\t\tdy = y1 - y0;\r\n\t\tremaining = Math.sqrt(dx * dx + dy * dy);\r\n\t\twhile (segmentLength <= remaining)\r\n\t\t{\r\n\t\t\tx0 += dx * segmentLength / remaining;\r\n\t\t\ty0 += dy * segmentLength / remaining;\r\n\t\t\tctx[draw ? 'lineTo' : 'moveTo'](x0, y0);\r\n\t\t\t// update starting position\r\n\t\t\tdx = x1 - x0;\r\n\t\t\tdy = y1 - y0;\r\n\t\t\tremaining = Math.sqrt(dx * dx + dy * dy);\r\n\t\t\t// update pattern\r\n\t\t\tdraw = !draw;\r\n\t\t\tpindex = (pindex + 1) % plen;\r\n\t\t\tsegmentLength = pattern[pindex];\r\n\t\t}\r\n\t\tif (remaining > 0)\r\n\t\t{\r\n\t\t\tctx[draw ? 'lineTo' : 'moveTo'](x1, y1);\r\n\t\t\tsegmentLength -= remaining;\r\n\t\t}\r\n\t\tx0 = x1;\r\n\t\ty0 = y1;\r\n\t}\r\n}\r\n\r\nfunction drawLine(ctx, style, path)\r\n{\r\n\tsetStrokeStyle(ctx, style);\r\n\treturn line(ctx, style, path);\r\n}\r\n\r\nfunction texture(redo, ctx, src)\r\n{\r\n\tvar img = new Image();\r\n\timg.src = src;\r\n\timg.onload = redo;\r\n\treturn ctx.createPattern(img, 'repeat');\r\n}\r\n\r\nfunction gradient(ctx, grad)\r\n{\r\n\tvar g;\r\n\tvar stops = [];\r\n\tif (grad.ctor === 'Linear')\r\n\t{\r\n\t\tvar p0 = grad._0, p1 = grad._1;\r\n\t\tg = ctx.createLinearGradient(p0._0, -p0._1, p1._0, -p1._1);\r\n\t\tstops = _elm_lang$core$Native_List.toArray(grad._2);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar p0 = grad._0, p2 = grad._2;\r\n\t\tg = ctx.createRadialGradient(p0._0, -p0._1, grad._1, p2._0, -p2._1, grad._3);\r\n\t\tstops = _elm_lang$core$Native_List.toArray(grad._4);\r\n\t}\r\n\tvar len = stops.length;\r\n\tfor (var i = 0; i < len; ++i)\r\n\t{\r\n\t\tvar stop = stops[i];\r\n\t\tg.addColorStop(stop._0, _evancz$elm_graphics$Text$colorToCss(stop._1));\r\n\t}\r\n\treturn g;\r\n}\r\n\r\nfunction drawShape(redo, ctx, style, path)\r\n{\r\n\ttrace(ctx, path);\r\n\tsetFillStyle(redo, ctx, style);\r\n\tctx.scale(1, -1);\r\n\tctx.fill();\r\n}\r\n\r\n\r\n// TEXT RENDERING\r\n\r\nfunction fillText(redo, ctx, text)\r\n{\r\n\tdrawText(ctx, text, ctx.fillText);\r\n}\r\n\r\nfunction strokeText(redo, ctx, style, text)\r\n{\r\n\tsetStrokeStyle(ctx, style);\r\n\t// Use native canvas API for dashes only for text for now\r\n\t// Degrades to non-dashed on IE 9 + 10\r\n\tif (style.dashing.ctor !== '[]' && ctx.setLineDash)\r\n\t{\r\n\t\tvar pattern = _elm_lang$core$Native_List.toArray(style.dashing);\r\n\t\tctx.setLineDash(pattern);\r\n\t}\r\n\tdrawText(ctx, text, ctx.strokeText);\r\n}\r\n\r\nfunction drawText(ctx, text, canvasDrawFn)\r\n{\r\n\tvar textChunks = chunkText(copy(defaultFacts), text);\r\n\r\n\tvar totalWidth = 0;\r\n\tvar maxHeight = 0;\r\n\tvar numChunks = textChunks.length;\r\n\r\n\tctx.scale(1,-1);\r\n\r\n\tfor (var i = numChunks; i--; )\r\n\t{\r\n\t\tvar chunk = textChunks[i];\r\n\t\tctx.font = chunk.font;\r\n\t\tvar metrics = ctx.measureText(chunk.text);\r\n\t\tchunk.width = metrics.width;\r\n\t\ttotalWidth += chunk.width;\r\n\t\tif (chunk.height > maxHeight)\r\n\t\t{\r\n\t\t\tmaxHeight = chunk.height;\r\n\t\t}\r\n\t}\r\n\r\n\tvar x = -totalWidth / 2.0;\r\n\tfor (var i = 0; i < numChunks; ++i)\r\n\t{\r\n\t\tvar chunk = textChunks[i];\r\n\t\tctx.font = chunk.font;\r\n\t\tctx.fillStyle = chunk.color;\r\n\t\tcanvasDrawFn.call(ctx, chunk.text, x, maxHeight / 2);\r\n\t\tx += chunk.width;\r\n\t}\r\n}\r\n\r\nfunction toFont(facts)\r\n{\r\n\treturn facts['font-style']\r\n\t\t+ ' ' + facts['font-variant']\r\n\t\t+ ' ' + facts['font-weight']\r\n\t\t+ ' ' + facts['font-size']\r\n\t\t+ ' ' + facts['font-family'];\r\n}\r\n\r\n\r\n// Convert the object returned by the text module\r\n// into something we can use for styling canvas text\r\nfunction chunkText(facts, text)\r\n{\r\n\tswitch (text.ctor)\r\n\t{\r\n\t\tcase 'Append':\r\n\t\t\tvar leftChunks = chunkText(copy(facts), text._0);\r\n\t\t\tvar rightChunks = chunkText(copy(facts), text._1);\r\n\t\t\treturn leftChunks.concat(rightChunks);\r\n\r\n\t\tcase 'Str':\r\n\t\t\treturn [{\r\n\t\t\t\ttext: text._0,\r\n\t\t\t\tcolor: facts['color'],\r\n\t\t\t\theight: facts['font-size'].slice(0, -2) | 0,\r\n\t\t\t\tfont: toFont(facts)\r\n\t\t\t}];\r\n\r\n\t\tcase 'Link':\r\n\t\t\treturn chunkText(facts, text._1);\r\n\r\n\t\tcase 'Meta':\r\n\t\t\tfacts[text._0] = text._1;\r\n\t\t\treturn chunkText(facts, text._2);\r\n\t}\r\n}\r\n\r\nfunction copy(facts)\r\n{\r\n\treturn {\r\n\t\t'font-style': facts['font-style'],\r\n\t\t'font-variant': facts['font-variant'],\r\n\t\t'font-weight': facts['font-weight'],\r\n\t\t'font-size': facts['font-size'],\r\n\t\t'font-family': facts['font-family'],\r\n\t\t'color': facts['color']\r\n\t};\r\n}\r\n\r\nvar defaultFacts = {\r\n\t'font-style': 'normal',\r\n\t'font-variant': 'normal',\r\n\t'font-weight': 'normal',\r\n\t'font-size': '12px',\r\n\t'font-family': 'sans-serif',\r\n\t'color': 'black'\r\n};\r\n\r\n\r\n// IMAGES\r\n\r\nfunction drawImage(redo, ctx, form)\r\n{\r\n\tvar img = new Image();\r\n\timg.onload = redo;\r\n\timg.src = form._3;\r\n\tvar w = form._0,\r\n\t\th = form._1,\r\n\t\tpos = form._2,\r\n\t\tsrcX = pos._0,\r\n\t\tsrcY = pos._1,\r\n\t\tsrcW = w,\r\n\t\tsrcH = h,\r\n\t\tdestX = -w / 2,\r\n\t\tdestY = -h / 2,\r\n\t\tdestW = w,\r\n\t\tdestH = h;\r\n\r\n\tctx.scale(1, -1);\r\n\tctx.drawImage(img, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\r\n}\r\n\r\nfunction renderForm(redo, ctx, form)\r\n{\r\n\tctx.save();\r\n\r\n\tvar x = form.x,\r\n\t\ty = form.y,\r\n\t\ttheta = form.theta,\r\n\t\tscale = form.scale;\r\n\r\n\tif (x !== 0 || y !== 0)\r\n\t{\r\n\t\tctx.translate(x, y);\r\n\t}\r\n\tif (theta !== 0)\r\n\t{\r\n\t\tctx.rotate(theta % (Math.PI * 2));\r\n\t}\r\n\tif (scale !== 1)\r\n\t{\r\n\t\tctx.scale(scale, scale);\r\n\t}\r\n\tif (form.alpha !== 1)\r\n\t{\r\n\t\tctx.globalAlpha = ctx.globalAlpha * form.alpha;\r\n\t}\r\n\r\n\tctx.beginPath();\r\n\tvar f = form.form;\r\n\tswitch (f.ctor)\r\n\t{\r\n\t\tcase 'FPath':\r\n\t\t\tdrawLine(ctx, f._0, f._1);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'FImage':\r\n\t\t\tdrawImage(redo, ctx, f);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'FShape':\r\n\t\t\tif (f._0.ctor === 'Line')\r\n\t\t\t{\r\n\t\t\t\tf._1.closed = true;\r\n\t\t\t\tdrawLine(ctx, f._0._0, f._1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdrawShape(redo, ctx, f._0._0, f._1);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'FText':\r\n\t\t\tfillText(redo, ctx, f._0);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'FOutlinedText':\r\n\t\t\tstrokeText(redo, ctx, f._0, f._1);\r\n\t\t\tbreak;\r\n\t}\r\n\tctx.restore();\r\n}\r\n\r\nfunction formToMatrix(form)\r\n{\r\n\tvar scale = form.scale;\r\n\tvar matrix = A6( _evancz$elm_graphics$Transform$matrix, scale, 0, 0, scale, form.x, form.y );\r\n\r\n\tvar theta = form.theta;\r\n\tif (theta !== 0)\r\n\t{\r\n\t\tmatrix = A2(\r\n\t\t\t_evancz$elm_graphics$Transform$multiply,\r\n\t\t\tmatrix,\r\n\t\t\t_evancz$elm_graphics$Transform$rotation(theta)\r\n\t\t);\r\n\t}\r\n\r\n   return matrix;\r\n}\r\n\r\nfunction str(n)\r\n{\r\n\tif (n < 0.00001 && n > -0.00001)\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\treturn n;\r\n}\r\n\r\nfunction makeTransform(w, h, form, matrices)\r\n{\r\n\tvar props = form.form._0._0.props;\r\n\tvar m = A6(\r\n\t\t_evancz$elm_graphics$Transform$matrix,\r\n\t\t1,\r\n\t\t0,\r\n\t\t0,\r\n\t\t-1,\r\n\t\t(w - props.width ) / 2,\r\n\t\t(h - props.height) / 2\r\n\t);\r\n\r\n\tvar len = matrices.length;\r\n\tfor (var i = 0; i < len; ++i)\r\n\t{\r\n\t\tm = A2( _evancz$elm_graphics$Transform$multiply, m, matrices[i] );\r\n\t}\r\n\tm = A2( _evancz$elm_graphics$Transform$multiply, m, formToMatrix(form) );\r\n\r\n\treturn 'matrix(' +\r\n\t\tstr( m[0]) + ', ' + str( m[3]) + ', ' +\r\n\t\tstr(-m[1]) + ', ' + str(-m[4]) + ', ' +\r\n\t\tstr( m[2]) + ', ' + str( m[5]) + ')';\r\n}\r\n\r\nfunction stepperHelp(list)\r\n{\r\n\tvar arr = _elm_lang$core$Native_List.toArray(list);\r\n\tvar i = 0;\r\n\tfunction peekNext()\r\n\t{\r\n\t\treturn i < arr.length ? arr[i]._0.form.ctor : '';\r\n\t}\r\n\t// assumes that there is a next element\r\n\tfunction next()\r\n\t{\r\n\t\tvar out = arr[i]._0;\r\n\t\t++i;\r\n\t\treturn out;\r\n\t}\r\n\treturn {\r\n\t\tpeekNext: peekNext,\r\n\t\tnext: next\r\n\t};\r\n}\r\n\r\nfunction formStepper(forms)\r\n{\r\n\tvar ps = [stepperHelp(forms)];\r\n\tvar matrices = [];\r\n\tvar alphas = [];\r\n\tfunction peekNext()\r\n\t{\r\n\t\tvar len = ps.length;\r\n\t\tvar formType = '';\r\n\t\tfor (var i = 0; i < len; ++i )\r\n\t\t{\r\n\t\t\tif (formType = ps[i].peekNext()) return formType;\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\t// assumes that there is a next element\r\n\tfunction next(ctx)\r\n\t{\r\n\t\twhile (!ps[0].peekNext())\r\n\t\t{\r\n\t\t\tps.shift();\r\n\t\t\tmatrices.pop();\r\n\t\t\talphas.shift();\r\n\t\t\tif (ctx)\r\n\t\t\t{\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar out = ps[0].next();\r\n\t\tvar f = out.form;\r\n\t\tif (f.ctor === 'FGroup')\r\n\t\t{\r\n\t\t\tps.unshift(stepperHelp(f._1));\r\n\t\t\tvar m = A2(_evancz$elm_graphics$Transform$multiply, f._0, formToMatrix(out));\r\n\t\t\tctx.save();\r\n\t\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\r\n\t\t\tmatrices.push(m);\r\n\r\n\t\t\tvar alpha = (alphas[0] || 1) * out.alpha;\r\n\t\t\talphas.unshift(alpha);\r\n\t\t\tctx.globalAlpha = alpha;\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\tfunction transforms()\r\n\t{\r\n\t\treturn matrices;\r\n\t}\r\n\tfunction alpha()\r\n\t{\r\n\t\treturn alphas[0] || 1;\r\n\t}\r\n\treturn {\r\n\t\tpeekNext: peekNext,\r\n\t\tnext: next,\r\n\t\ttransforms: transforms,\r\n\t\talpha: alpha\r\n\t};\r\n}\r\n\r\nfunction makeCanvas(w, h)\r\n{\r\n\tvar canvas = _evancz$elm_graphics$Native_Element.createNode('canvas');\r\n\tcanvas.style.width  = w + 'px';\r\n\tcanvas.style.height = h + 'px';\r\n\tcanvas.style.display = 'block';\r\n\tcanvas.style.position = 'absolute';\r\n\tvar ratio = window.devicePixelRatio || 1;\r\n\tcanvas.width  = w * ratio;\r\n\tcanvas.height = h * ratio;\r\n\treturn canvas;\r\n}\r\n\r\nfunction render(model)\r\n{\r\n\tvar div = _evancz$elm_graphics$Native_Element.createNode('div');\r\n\tdiv.style.overflow = 'hidden';\r\n\tdiv.style.position = 'relative';\r\n\tupdate(div, model, model);\r\n\treturn div;\r\n}\r\n\r\nfunction nodeStepper(w, h, div)\r\n{\r\n\tvar kids = div.childNodes;\r\n\tvar i = 0;\r\n\tvar ratio = window.devicePixelRatio || 1;\r\n\r\n\tfunction transform(transforms, ctx)\r\n\t{\r\n\t\tctx.translate( w / 2 * ratio, h / 2 * ratio );\r\n\t\tctx.scale( ratio, -ratio );\r\n\t\tvar len = transforms.length;\r\n\t\tfor (var i = 0; i < len; ++i)\r\n\t\t{\r\n\t\t\tvar m = transforms[i];\r\n\t\t\tctx.save();\r\n\t\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\r\n\t\t}\r\n\t\treturn ctx;\r\n\t}\r\n\tfunction nextContext(transforms)\r\n\t{\r\n\t\twhile (i < kids.length)\r\n\t\t{\r\n\t\t\tvar node = kids[i];\r\n\t\t\tif (node.getContext)\r\n\t\t\t{\r\n\t\t\t\tnode.width = w * ratio;\r\n\t\t\t\tnode.height = h * ratio;\r\n\t\t\t\tnode.style.width = w + 'px';\r\n\t\t\t\tnode.style.height = h + 'px';\r\n\t\t\t\t++i;\r\n\t\t\t\treturn transform(transforms, node.getContext('2d'));\r\n\t\t\t}\r\n\t\t\tdiv.removeChild(node);\r\n\t\t}\r\n\t\tvar canvas = makeCanvas(w, h);\r\n\t\tdiv.appendChild(canvas);\r\n\t\t// we have added a new node, so we must step our position\r\n\t\t++i;\r\n\t\treturn transform(transforms, canvas.getContext('2d'));\r\n\t}\r\n\tfunction addElement(matrices, alpha, form)\r\n\t{\r\n\t\tvar kid = kids[i];\r\n\t\tvar elem = form.form._0;\r\n\r\n\t\tvar node = (!kid || kid.getContext)\r\n\t\t\t? _evancz$elm_graphics$Native_Element.render(elem)\r\n\t\t\t: _evancz$elm_graphics$Native_Element.update(kid, kid.oldElement, elem);\r\n\r\n\t\tnode.style.position = 'absolute';\r\n\t\tnode.style.opacity = alpha * form.alpha * elem._0.props.opacity;\r\n\t\t_evancz$elm_graphics$Native_Element.addTransform(node.style, makeTransform(w, h, form, matrices));\r\n\t\tnode.oldElement = elem;\r\n\t\t++i;\r\n\t\tif (!kid)\r\n\t\t{\r\n\t\t\tdiv.appendChild(node);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdiv.insertBefore(node, kid);\r\n\t\t}\r\n\t}\r\n\tfunction clearRest()\r\n\t{\r\n\t\twhile (i < kids.length)\r\n\t\t{\r\n\t\t\tdiv.removeChild(kids[i]);\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tnextContext: nextContext,\r\n\t\taddElement: addElement,\r\n\t\tclearRest: clearRest\r\n\t};\r\n}\r\n\r\n\r\nfunction update(div, _, model)\r\n{\r\n\tvar w = model.w;\r\n\tvar h = model.h;\r\n\r\n\tvar forms = formStepper(model.forms);\r\n\tvar nodes = nodeStepper(w, h, div);\r\n\tvar ctx = null;\r\n\tvar formType = '';\r\n\r\n\twhile (formType = forms.peekNext())\r\n\t{\r\n\t\t// make sure we have context if we need it\r\n\t\tif (ctx === null && formType !== 'FElement')\r\n\t\t{\r\n\t\t\tctx = nodes.nextContext(forms.transforms());\r\n\t\t\tctx.globalAlpha = forms.alpha();\r\n\t\t}\r\n\r\n\t\tvar form = forms.next(ctx);\r\n\t\t// if it is FGroup, all updates are made within formStepper when next is called.\r\n\t\tif (formType === 'FElement')\r\n\t\t{\r\n\t\t\t// update or insert an element, get a new context\r\n\t\t\tnodes.addElement(forms.transforms(), forms.alpha(), form);\r\n\t\t\tctx = null;\r\n\t\t}\r\n\t\telse if (formType !== 'FGroup')\r\n\t\t{\r\n\t\t\trenderForm(function() { update(div, model, model); }, ctx, form);\r\n\t\t}\r\n\t}\r\n\tnodes.clearRest();\r\n\treturn div;\r\n}\r\n\r\n\r\nfunction collage(w, h, forms)\r\n{\r\n\treturn A3(_evancz$elm_graphics$Native_Element.newElement, w, h, {\r\n\t\tctor: 'Custom',\r\n\t\ttype: 'Collage',\r\n\t\trender: render,\r\n\t\tupdate: update,\r\n\t\tmodel: {w: w, h: h, forms: forms}\r\n\t});\r\n}\r\n\r\nreturn {\r\n\tcollage: F3(collage)\r\n};\r\n\r\n}();\r\n\r\nvar _evancz$elm_graphics$Native_Transform = function()\r\n{\r\n\r\nvar A;\r\nif (typeof Float32Array === 'undefined')\r\n{\r\n\tA = function(arr)\r\n\t{\r\n\t\tthis.length = arr.length;\r\n\t\tthis[0] = arr[0];\r\n\t\tthis[1] = arr[1];\r\n\t\tthis[2] = arr[2];\r\n\t\tthis[3] = arr[3];\r\n\t\tthis[4] = arr[4];\r\n\t\tthis[5] = arr[5];\r\n\t};\r\n}\r\nelse\r\n{\r\n\tA = Float32Array;\r\n}\r\n\r\n// layout of matrix in an array is\r\n//\r\n//   | m11 m12 dx |\r\n//   | m21 m22 dy |\r\n//   |  0   0   1 |\r\n//\r\n//  new A([ m11, m12, dx, m21, m22, dy ])\r\n\r\nvar identity = new A([1, 0, 0, 0, 1, 0]);\r\n\r\nfunction matrix(m11, m12, m21, m22, dx, dy)\r\n{\r\n\treturn new A([m11, m12, dx, m21, m22, dy]);\r\n}\r\n\r\nfunction rotation(t)\r\n{\r\n\tvar c = Math.cos(t);\r\n\tvar s = Math.sin(t);\r\n\treturn new A([c, -s, 0, s, c, 0]);\r\n}\r\n\r\nfunction rotate(t, m)\r\n{\r\n\tvar c = Math.cos(t);\r\n\tvar s = Math.sin(t);\r\n\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4];\r\n\treturn new A([\r\n\t\tm11 * c + m12 * s,\r\n\t\t-m11 * s + m12 * c,\r\n\t\tm[2],\r\n\t\tm21 * c + m22 * s,\r\n\t\t-m21 * s + m22 * c,\r\n\t\tm[5]\r\n\t]);\r\n}\r\n\r\nfunction multiply(m, n)\r\n{\r\n\tvar m11 = m[0], m12 = m[1], m21 = m[3], m22 = m[4], mdx = m[2], mdy = m[5];\r\n\tvar n11 = n[0], n12 = n[1], n21 = n[3], n22 = n[4], ndx = n[2], ndy = n[5];\r\n\treturn new A([\r\n\t\tm11 * n11 + m12 * n21,\r\n\t\tm11 * n12 + m12 * n22,\r\n\t\tm11 * ndx + m12 * ndy + mdx,\r\n\t\tm21 * n11 + m22 * n21,\r\n\t\tm21 * n12 + m22 * n22,\r\n\t\tm21 * ndx + m22 * ndy + mdy\r\n\t]);\r\n}\r\n\r\nreturn {\r\n\tidentity: identity,\r\n\tmatrix: F6(matrix),\r\n\trotation: rotation,\r\n\tmultiply: F2(multiply)\r\n};\r\n\r\n}();\r\n\r\nvar _evancz$elm_graphics$Transform$multiply = _evancz$elm_graphics$Native_Transform.multiply;\r\nvar _evancz$elm_graphics$Transform$rotation = _evancz$elm_graphics$Native_Transform.rotation;\r\nvar _evancz$elm_graphics$Transform$matrix = _evancz$elm_graphics$Native_Transform.matrix;\r\nvar _evancz$elm_graphics$Transform$translation = F2(\r\n\tfunction (x, y) {\r\n\t\treturn A6(_evancz$elm_graphics$Transform$matrix, 1, 0, 0, 1, x, y);\r\n\t});\r\nvar _evancz$elm_graphics$Transform$scale = function (s) {\r\n\treturn A6(_evancz$elm_graphics$Transform$matrix, s, 0, 0, s, 0, 0);\r\n};\r\nvar _evancz$elm_graphics$Transform$scaleX = function (x) {\r\n\treturn A6(_evancz$elm_graphics$Transform$matrix, x, 0, 0, 1, 0, 0);\r\n};\r\nvar _evancz$elm_graphics$Transform$scaleY = function (y) {\r\n\treturn A6(_evancz$elm_graphics$Transform$matrix, 1, 0, 0, y, 0, 0);\r\n};\r\nvar _evancz$elm_graphics$Transform$identity = _evancz$elm_graphics$Native_Transform.identity;\r\nvar _evancz$elm_graphics$Transform$Transform = {ctor: 'Transform'};\r\n\r\nvar _evancz$elm_graphics$Collage$collage = _evancz$elm_graphics$Native_Collage.collage;\r\nvar _evancz$elm_graphics$Collage$LineStyle = F6(\r\n\tfunction (a, b, c, d, e, f) {\r\n\t\treturn {color: a, width: b, cap: c, join: d, dashing: e, dashOffset: f};\r\n\t});\r\nvar _evancz$elm_graphics$Collage$Form_elm_builtin = function (a) {\r\n\treturn {ctor: 'Form_elm_builtin', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$form = function (f) {\r\n\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t{theta: 0, scale: 1, x: 0, y: 0, alpha: 1, form: f});\r\n};\r\nvar _evancz$elm_graphics$Collage$move = F2(\r\n\tfunction (_p1, _p0) {\r\n\t\tvar _p2 = _p1;\r\n\t\tvar _p3 = _p0;\r\n\t\tvar _p4 = _p3._0;\r\n\t\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t_p4,\r\n\t\t\t\t{x: _p4.x + _p2._0, y: _p4.y + _p2._1}));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$moveX = F2(\r\n\tfunction (x, _p5) {\r\n\t\tvar _p6 = _p5;\r\n\t\tvar _p7 = _p6._0;\r\n\t\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t_p7,\r\n\t\t\t\t{x: _p7.x + x}));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$moveY = F2(\r\n\tfunction (y, _p8) {\r\n\t\tvar _p9 = _p8;\r\n\t\tvar _p10 = _p9._0;\r\n\t\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t_p10,\r\n\t\t\t\t{y: _p10.y + y}));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$scale = F2(\r\n\tfunction (s, _p11) {\r\n\t\tvar _p12 = _p11;\r\n\t\tvar _p13 = _p12._0;\r\n\t\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t_p13,\r\n\t\t\t\t{scale: _p13.scale * s}));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$rotate = F2(\r\n\tfunction (t, _p14) {\r\n\t\tvar _p15 = _p14;\r\n\t\tvar _p16 = _p15._0;\r\n\t\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t_p16,\r\n\t\t\t\t{theta: _p16.theta + t}));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$alpha = F2(\r\n\tfunction (a, _p17) {\r\n\t\tvar _p18 = _p17;\r\n\t\treturn _evancz$elm_graphics$Collage$Form_elm_builtin(\r\n\t\t\t_elm_lang$core$Native_Utils.update(\r\n\t\t\t\t_p18._0,\r\n\t\t\t\t{alpha: a}));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$Grad = function (a) {\r\n\treturn {ctor: 'Grad', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$Texture = function (a) {\r\n\treturn {ctor: 'Texture', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$Solid = function (a) {\r\n\treturn {ctor: 'Solid', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$Padded = {ctor: 'Padded'};\r\nvar _evancz$elm_graphics$Collage$Round = {ctor: 'Round'};\r\nvar _evancz$elm_graphics$Collage$Flat = {ctor: 'Flat'};\r\nvar _evancz$elm_graphics$Collage$Clipped = {ctor: 'Clipped'};\r\nvar _evancz$elm_graphics$Collage$Sharp = function (a) {\r\n\treturn {ctor: 'Sharp', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$defaultLine = {\r\n\tcolor: _elm_lang$core$Color$black,\r\n\twidth: 1,\r\n\tcap: _evancz$elm_graphics$Collage$Flat,\r\n\tjoin: _evancz$elm_graphics$Collage$Sharp(10),\r\n\tdashing: _elm_lang$core$Native_List.fromArray(\r\n\t\t[]),\r\n\tdashOffset: 0\r\n};\r\nvar _evancz$elm_graphics$Collage$solid = function (clr) {\r\n\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t_evancz$elm_graphics$Collage$defaultLine,\r\n\t\t{color: clr});\r\n};\r\nvar _evancz$elm_graphics$Collage$dashed = function (clr) {\r\n\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t_evancz$elm_graphics$Collage$defaultLine,\r\n\t\t{\r\n\t\t\tcolor: clr,\r\n\t\t\tdashing: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[8, 4])\r\n\t\t});\r\n};\r\nvar _evancz$elm_graphics$Collage$dotted = function (clr) {\r\n\treturn _elm_lang$core$Native_Utils.update(\r\n\t\t_evancz$elm_graphics$Collage$defaultLine,\r\n\t\t{\r\n\t\t\tcolor: clr,\r\n\t\t\tdashing: _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[3, 3])\r\n\t\t});\r\n};\r\nvar _evancz$elm_graphics$Collage$Smooth = {ctor: 'Smooth'};\r\nvar _evancz$elm_graphics$Collage$FGroup = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'FGroup', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Collage$group = function (fs) {\r\n\treturn _evancz$elm_graphics$Collage$form(\r\n\t\tA2(_evancz$elm_graphics$Collage$FGroup, _evancz$elm_graphics$Transform$identity, fs));\r\n};\r\nvar _evancz$elm_graphics$Collage$groupTransform = F2(\r\n\tfunction (matrix, fs) {\r\n\t\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t\tA2(_evancz$elm_graphics$Collage$FGroup, matrix, fs));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$FElement = function (a) {\r\n\treturn {ctor: 'FElement', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$toForm = function (e) {\r\n\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t_evancz$elm_graphics$Collage$FElement(e));\r\n};\r\nvar _evancz$elm_graphics$Collage$FImage = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {ctor: 'FImage', _0: a, _1: b, _2: c, _3: d};\r\n\t});\r\nvar _evancz$elm_graphics$Collage$sprite = F4(\r\n\tfunction (w, h, pos, src) {\r\n\t\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t\tA4(_evancz$elm_graphics$Collage$FImage, w, h, pos, src));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$FText = function (a) {\r\n\treturn {ctor: 'FText', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$text = function (t) {\r\n\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t_evancz$elm_graphics$Collage$FText(t));\r\n};\r\nvar _evancz$elm_graphics$Collage$FOutlinedText = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'FOutlinedText', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Collage$outlinedText = F2(\r\n\tfunction (ls, t) {\r\n\t\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t\tA2(_evancz$elm_graphics$Collage$FOutlinedText, ls, t));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$FShape = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'FShape', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Collage$FPath = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'FPath', _0: a, _1: b};\r\n\t});\r\nvar _evancz$elm_graphics$Collage$traced = F2(\r\n\tfunction (style, _p19) {\r\n\t\tvar _p20 = _p19;\r\n\t\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t\tA2(_evancz$elm_graphics$Collage$FPath, style, _p20._0));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$Fill = function (a) {\r\n\treturn {ctor: 'Fill', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$fill = F2(\r\n\tfunction (style, _p21) {\r\n\t\tvar _p22 = _p21;\r\n\t\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t\tA2(\r\n\t\t\t\t_evancz$elm_graphics$Collage$FShape,\r\n\t\t\t\t_evancz$elm_graphics$Collage$Fill(style),\r\n\t\t\t\t_p22._0));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$filled = F2(\r\n\tfunction (color, shape) {\r\n\t\treturn A2(\r\n\t\t\t_evancz$elm_graphics$Collage$fill,\r\n\t\t\t_evancz$elm_graphics$Collage$Solid(color),\r\n\t\t\tshape);\r\n\t});\r\nvar _evancz$elm_graphics$Collage$textured = F2(\r\n\tfunction (src, shape) {\r\n\t\treturn A2(\r\n\t\t\t_evancz$elm_graphics$Collage$fill,\r\n\t\t\t_evancz$elm_graphics$Collage$Texture(src),\r\n\t\t\tshape);\r\n\t});\r\nvar _evancz$elm_graphics$Collage$gradient = F2(\r\n\tfunction (grad, shape) {\r\n\t\treturn A2(\r\n\t\t\t_evancz$elm_graphics$Collage$fill,\r\n\t\t\t_evancz$elm_graphics$Collage$Grad(grad),\r\n\t\t\tshape);\r\n\t});\r\nvar _evancz$elm_graphics$Collage$Line = function (a) {\r\n\treturn {ctor: 'Line', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$outlined = F2(\r\n\tfunction (style, _p23) {\r\n\t\tvar _p24 = _p23;\r\n\t\treturn _evancz$elm_graphics$Collage$form(\r\n\t\t\tA2(\r\n\t\t\t\t_evancz$elm_graphics$Collage$FShape,\r\n\t\t\t\t_evancz$elm_graphics$Collage$Line(style),\r\n\t\t\t\t_p24._0));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$Path = function (a) {\r\n\treturn {ctor: 'Path', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$path = function (ps) {\r\n\treturn _evancz$elm_graphics$Collage$Path(ps);\r\n};\r\nvar _evancz$elm_graphics$Collage$segment = F2(\r\n\tfunction (p1, p2) {\r\n\t\treturn _evancz$elm_graphics$Collage$Path(\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[p1, p2]));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$Shape = function (a) {\r\n\treturn {ctor: 'Shape', _0: a};\r\n};\r\nvar _evancz$elm_graphics$Collage$polygon = function (points) {\r\n\treturn _evancz$elm_graphics$Collage$Shape(points);\r\n};\r\nvar _evancz$elm_graphics$Collage$rect = F2(\r\n\tfunction (w, h) {\r\n\t\tvar hh = h / 2;\r\n\t\tvar hw = w / 2;\r\n\t\treturn _evancz$elm_graphics$Collage$Shape(\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: 0 - hw, _1: 0 - hh},\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: 0 - hw, _1: hh},\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: hw, _1: hh},\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: hw, _1: 0 - hh}\r\n\t\t\t\t]));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$square = function (n) {\r\n\treturn A2(_evancz$elm_graphics$Collage$rect, n, n);\r\n};\r\nvar _evancz$elm_graphics$Collage$oval = F2(\r\n\tfunction (w, h) {\r\n\t\tvar hh = h / 2;\r\n\t\tvar hw = w / 2;\r\n\t\tvar n = 50;\r\n\t\tvar t = (2 * _elm_lang$core$Basics$pi) / n;\r\n\t\tvar f = function (i) {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: hw * _elm_lang$core$Basics$cos(t * i),\r\n\t\t\t\t_1: hh * _elm_lang$core$Basics$sin(t * i)\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn _evancz$elm_graphics$Collage$Shape(\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\tf,\r\n\t\t\t\t_elm_lang$core$Native_List.range(0, n - 1)));\r\n\t});\r\nvar _evancz$elm_graphics$Collage$circle = function (r) {\r\n\treturn A2(_evancz$elm_graphics$Collage$oval, 2 * r, 2 * r);\r\n};\r\nvar _evancz$elm_graphics$Collage$ngon = F2(\r\n\tfunction (n, r) {\r\n\t\tvar m = _elm_lang$core$Basics$toFloat(n);\r\n\t\tvar t = (2 * _elm_lang$core$Basics$pi) / m;\r\n\t\tvar f = function (i) {\r\n\t\t\treturn {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: r * _elm_lang$core$Basics$cos(t * i),\r\n\t\t\t\t_1: r * _elm_lang$core$Basics$sin(t * i)\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn _evancz$elm_graphics$Collage$Shape(\r\n\t\t\tA2(\r\n\t\t\t\t_elm_lang$core$List$map,\r\n\t\t\t\tf,\r\n\t\t\t\t_elm_lang$core$Native_List.range(0, m - 1)));\r\n\t});\r\n\r\nvar _user$project$Agents$Player = F9(\r\n\tfunction (a, b, c, d, e, f, g, h, i) {\r\n\t\treturn {x: a, y: b, angle: c, thrusting: d, id: e, name: f, team: g, speed: h, movingAngle: i};\r\n\t});\r\nvar _user$project$Agents$nullPlayer = A9(_user$project$Agents$Player, 0, 0, 0, false, '', '', '', 0, 0);\r\nvar _user$project$Agents$Asteroid = F6(\r\n\tfunction (a, b, c, d, e, f) {\r\n\t\treturn {x: a, y: b, colour: c, id: d, radius: e, angle: f};\r\n\t});\r\n\r\nvar _user$project$Asteroid_View$asteroid = function (a) {\r\n\treturn A2(\r\n\t\t_evancz$elm_graphics$Collage$rotate,\r\n\t\t_elm_lang$core$Basics$degrees(a.angle),\r\n\t\tA2(\r\n\t\t\t_evancz$elm_graphics$Collage$move,\r\n\t\t\t{ctor: '_Tuple2', _0: a.x, _1: a.y},\r\n\t\t\tA2(\r\n\t\t\t\t_evancz$elm_graphics$Collage$filled,\r\n\t\t\t\tA4(_elm_lang$core$Color$rgba, 255, 14, 93, 0.5),\r\n\t\t\t\tA2(_evancz$elm_graphics$Collage$ngon, 6, a.radius))));\r\n};\r\nvar _user$project$Asteroid_View$root = F2(\r\n\tfunction (asteroids, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn A2(_elm_lang$core$List$map, _user$project$Asteroid_View$asteroid, asteroids);\r\n\t});\r\nvar _user$project$Asteroid_View$line = {\r\n\tcolor: A3(_elm_lang$core$Color$rgb, 255, 14, 93),\r\n\twidth: 1,\r\n\tcap: _evancz$elm_graphics$Collage$Flat,\r\n\tjoin: _evancz$elm_graphics$Collage$Smooth,\r\n\tdashing: _elm_lang$core$Native_List.fromArray(\r\n\t\t[]),\r\n\tdashOffset: 0\r\n};\r\n\r\nvar _user$project$Debug_View$root = function (player) {\r\n\tvar _p0 = player;\r\n\tif (_p0.ctor === 'Just') {\r\n\t\tvar _p1 = _p0._0;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[\r\n\t\t\t\t\t_elm_lang$html$Html_Attributes$class('debug')\r\n\t\t\t\t]),\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]),\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t_elm_lang$html$Html$text(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'name: ',\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p1.name)))\r\n\t\t\t\t\t\t])),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]),\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t_elm_lang$html$Html$text(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'x: ',\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p1.x)))\r\n\t\t\t\t\t\t])),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]),\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t_elm_lang$html$Html$text(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'y: ',\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p1.y)))\r\n\t\t\t\t\t\t])),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]),\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t_elm_lang$html$Html$text(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'speed: ',\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p1.speed)))\r\n\t\t\t\t\t\t])),\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[]),\r\n\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t_elm_lang$html$Html$text(\r\n\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics_ops['++'],\r\n\t\t\t\t\t\t\t\t'a: ',\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p1.angle)))\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t]));\r\n\t} else {\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]),\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]));\r\n\t}\r\n};\r\n\r\nvar _user$project$Messages$asteroidDecoder = A7(\r\n\t_elm_lang$core$Json_Decode$object6,\r\n\t_user$project$Agents$Asteroid,\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'x', _elm_lang$core$Json_Decode$float),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'y', _elm_lang$core$Json_Decode$float),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'c', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'id', _elm_lang$core$Json_Decode$int),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'r', _elm_lang$core$Json_Decode$float),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'a', _elm_lang$core$Json_Decode$float));\r\nvar _user$project$Messages$playerCtr = F7(\r\n\tfunction (a, b, c, d, e, f, g) {\r\n\t\treturn A9(_user$project$Agents$Player, a, b, c, d, e, f, g, 0, 0);\r\n\t});\r\nvar _user$project$Messages$playerDecoder = A8(\r\n\t_elm_lang$core$Json_Decode$object7,\r\n\t_user$project$Messages$playerCtr,\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'x', _elm_lang$core$Json_Decode$float),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'y', _elm_lang$core$Json_Decode$float),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'angle', _elm_lang$core$Json_Decode$float),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'thrusting', _elm_lang$core$Json_Decode$bool),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'id', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'name', _elm_lang$core$Json_Decode$string),\r\n\tA2(_elm_lang$core$Json_Decode_ops[':='], 'team', _elm_lang$core$Json_Decode$string));\r\nvar _user$project$Messages$MessageTypes = F5(\r\n\tfunction (a, b, c, d, e) {\r\n\t\treturn {empty: a, join: b, welcome: c, update: d, delta: e};\r\n\t});\r\nvar _user$project$Messages$messageTypes = A5(_user$project$Messages$MessageTypes, 0, 1, 2, 3, 4);\r\nvar _user$project$Messages$UpdateMessage = function (a) {\r\n\treturn {me: a};\r\n};\r\nvar _user$project$Messages$WelcomeMessage = F4(\r\n\tfunction (a, b, c, d) {\r\n\t\treturn {me: a, players: b, asteroids: c, timestamp: d};\r\n\t});\r\nvar _user$project$Messages$welcomeMessage = function (msg) {\r\n\tif (_elm_lang$core$Native_Utils.eq(msg.messageType, _user$project$Messages$messageTypes.welcome)) {\r\n\t\tvar result = A2(\r\n\t\t\t_elm_lang$core$Json_Decode$decodeValue,\r\n\t\t\tA5(\r\n\t\t\t\t_elm_lang$core$Json_Decode$object4,\r\n\t\t\t\t_user$project$Messages$WelcomeMessage,\r\n\t\t\t\tA2(_elm_lang$core$Json_Decode_ops[':='], 'me', _user$project$Messages$playerDecoder),\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Json_Decode_ops[':='],\r\n\t\t\t\t\t'players',\r\n\t\t\t\t\t_elm_lang$core$Json_Decode$list(_user$project$Messages$playerDecoder)),\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Json_Decode_ops[':='],\r\n\t\t\t\t\t'asteroids',\r\n\t\t\t\t\t_elm_lang$core$Json_Decode$list(_user$project$Messages$asteroidDecoder)),\r\n\t\t\t\tA2(_elm_lang$core$Json_Decode_ops[':='], 'timestamp', _elm_lang$core$Json_Decode$float)),\r\n\t\t\tmsg.payload);\r\n\t\tvar _p0 = result;\r\n\t\tif (_p0.ctor === 'Ok') {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(_p0._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _user$project$Messages$DeltaMessage = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {players: a, asteroids: b};\r\n\t});\r\nvar _user$project$Messages$deltaMessage = function (msg) {\r\n\tif (_elm_lang$core$Native_Utils.eq(msg.messageType, _user$project$Messages$messageTypes.delta)) {\r\n\t\tvar result = A2(\r\n\t\t\t_elm_lang$core$Json_Decode$decodeValue,\r\n\t\t\tA3(\r\n\t\t\t\t_elm_lang$core$Json_Decode$object2,\r\n\t\t\t\t_user$project$Messages$DeltaMessage,\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Json_Decode_ops[':='],\r\n\t\t\t\t\t'players',\r\n\t\t\t\t\t_elm_lang$core$Json_Decode$list(_user$project$Messages$playerDecoder)),\r\n\t\t\t\tA2(\r\n\t\t\t\t\t_elm_lang$core$Json_Decode_ops[':='],\r\n\t\t\t\t\t'asteroids',\r\n\t\t\t\t\t_elm_lang$core$Json_Decode$list(_user$project$Messages$asteroidDecoder))),\r\n\t\t\tmsg.payload);\r\n\t\tvar _p1 = result;\r\n\t\tif (_p1.ctor === 'Ok') {\r\n\t\t\treturn _elm_lang$core$Maybe$Just(_p1._0);\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t\t}\r\n\t} else {\r\n\t\treturn _elm_lang$core$Maybe$Nothing;\r\n\t}\r\n};\r\nvar _user$project$Messages$Message = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {messageType: a, payload: b};\r\n\t});\r\nvar _user$project$Messages$emptyMessage = A2(_user$project$Messages$Message, _user$project$Messages$messageTypes.empty, _elm_lang$core$Json_Encode$null);\r\nvar _user$project$Messages$updateMessage = function (player) {\r\n\treturn A2(\r\n\t\t_user$project$Messages$Message,\r\n\t\t_user$project$Messages$messageTypes.update,\r\n\t\t_elm_lang$core$Json_Encode$object(\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'id',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(player.id)\r\n\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'x',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$float(player.x)\r\n\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'y',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$float(player.y)\r\n\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'angle',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$float(player.angle)\r\n\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: 'thrusting',\r\n\t\t\t\t\t_1: _elm_lang$core$Json_Encode$bool(player.thrusting)\r\n\t\t\t\t}\r\n\t\t\t\t])));\r\n};\r\nvar _user$project$Messages$joinMessage = F2(\r\n\tfunction (name, team) {\r\n\t\treturn A2(\r\n\t\t\t_user$project$Messages$Message,\r\n\t\t\t_user$project$Messages$messageTypes.join,\r\n\t\t\t_elm_lang$core$Json_Encode$object(\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: 'name',\r\n\t\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(name)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t_0: 'team',\r\n\t\t\t\t\t\t_1: _elm_lang$core$Json_Encode$string(team)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t])));\r\n\t});\r\n\r\nvar _user$project$Join_Types$Model = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {name: a, team: b};\r\n\t});\r\nvar _user$project$Join_Types$initialModel = A2(_user$project$Join_Types$Model, '', 'Blue');\r\nvar _user$project$Join_Types$UpdateTeam = function (a) {\r\n\treturn {ctor: 'UpdateTeam', _0: a};\r\n};\r\nvar _user$project$Join_Types$UpdateName = function (a) {\r\n\treturn {ctor: 'UpdateName', _0: a};\r\n};\r\nvar _user$project$Join_Types$JoinGame = F2(\r\n\tfunction (a, b) {\r\n\t\treturn {ctor: 'JoinGame', _0: a, _1: b};\r\n\t});\r\nvar _user$project$Join_Types$TaskDone = function (a) {\r\n\treturn {ctor: 'TaskDone', _0: a};\r\n};\r\n\r\nvar _user$project$Ports$outboundSocket = _elm_lang$core$Native_Platform.outgoingPort(\r\n\t'outboundSocket',\r\n\tfunction (v) {\r\n\t\treturn {messageType: v.messageType, payload: v.payload};\r\n\t});\r\nvar _user$project$Ports$inboundSocket = _elm_lang$core$Native_Platform.incomingPort(\r\n\t'inboundSocket',\r\n\tA2(\r\n\t\t_elm_lang$core$Json_Decode$andThen,\r\n\t\tA2(_elm_lang$core$Json_Decode_ops[':='], 'messageType', _elm_lang$core$Json_Decode$int),\r\n\t\tfunction (messageType) {\r\n\t\t\treturn A2(\r\n\t\t\t\t_elm_lang$core$Json_Decode$andThen,\r\n\t\t\t\tA2(_elm_lang$core$Json_Decode_ops[':='], 'payload', _elm_lang$core$Json_Decode$value),\r\n\t\t\t\tfunction (payload) {\r\n\t\t\t\t\treturn _elm_lang$core$Json_Decode$succeed(\r\n\t\t\t\t\t\t{messageType: messageType, payload: payload});\r\n\t\t\t\t});\r\n\t\t}));\r\n\r\nvar _user$project$Join_State$update = F2(\r\n\tfunction (msg, model) {\r\n\t\tvar _p0 = msg;\r\n\t\tswitch (_p0.ctor) {\r\n\t\t\tcase 'TaskDone':\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\tcase 'UpdateName':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{name: _p0._0}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'UpdateTeam':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{team: _p0._0}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: model,\r\n\t\t\t\t\t_1: _user$project$Ports$outboundSocket(\r\n\t\t\t\t\t\tA2(_user$project$Messages$joinMessage, _p0._0, _p0._1))\r\n\t\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\nvar _user$project$Join_View$view = function (model) {\r\n\treturn A2(\r\n\t\t_elm_lang$html$Html$form,\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[\r\n\t\t\t\t_elm_lang$html$Html_Attributes$class('join-form'),\r\n\t\t\t\t_elm_lang$html$Html_Events$onSubmit(\r\n\t\t\t\tA2(_user$project$Join_Types$JoinGame, model.name, model.team))\r\n\t\t\t]),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[\r\n\t\t\t\tA2(\r\n\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[]),\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$html$Html$label,\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$for('name-field')\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html$text('Name')\r\n\t\t\t\t\t\t\t])),\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$html$Html$input,\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$id('name-field'),\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$autofocus(true),\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Events$onInput(_user$project$Join_Types$UpdateName),\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$placeholder('Enter your name'),\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$value(model.name)\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[]))\r\n\t\t\t\t\t])),\r\n\t\t\t\tA2(\r\n\t\t\t\t_elm_lang$html$Html$div,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[]),\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$html$Html$label,\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$for('team-field')\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html$text('Team')\r\n\t\t\t\t\t\t\t])),\r\n\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_elm_lang$html$Html$select,\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$class('form-control'),\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$id('team'),\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html_Events$on,\r\n\t\t\t\t\t\t\t\t'change',\r\n\t\t\t\t\t\t\t\tA2(_elm_lang$core$Json_Decode$map, _user$project$Join_Types$UpdateTeam, _elm_lang$html$Html_Events$targetValue))\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html$option,\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$value('Blue')\r\n\t\t\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$html$Html$text('Blue')\r\n\t\t\t\t\t\t\t\t\t])),\r\n\t\t\t\t\t\t\t\tA2(\r\n\t\t\t\t\t\t\t\t_elm_lang$html$Html$option,\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$html$Html_Attributes$value('Green')\r\n\t\t\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t_elm_lang$html$Html$text('Green')\r\n\t\t\t\t\t\t\t\t\t]))\r\n\t\t\t\t\t\t\t]))\r\n\t\t\t\t\t])),\r\n\t\t\t\tA2(\r\n\t\t\t\t_elm_lang$html$Html$button,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t_elm_lang$html$Html_Attributes$type$('submit')\r\n\t\t\t\t\t]),\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t_elm_lang$html$Html$text('join the game')\r\n\t\t\t\t\t]))\r\n\t\t\t]));\r\n};\r\n\r\nvar _user$project$Player_Types$Move = function (a) {\r\n\treturn {ctor: 'Move', _0: a};\r\n};\r\nvar _user$project$Player_Types$Tick = function (a) {\r\n\treturn {ctor: 'Tick', _0: a};\r\n};\r\n\r\nvar _user$project$Types$initialModel = {\r\n\tjoin: _user$project$Join_Types$initialModel,\r\n\tjoined: false,\r\n\tjoinedAt: _elm_lang$core$Maybe$Nothing,\r\n\tscreen: {ctor: '_Tuple2', _0: 0, _1: 0},\r\n\tme: _elm_lang$core$Maybe$Nothing,\r\n\tplayers: _elm_lang$core$Native_List.fromArray(\r\n\t\t[]),\r\n\tasteroids: _elm_lang$core$Native_List.fromArray(\r\n\t\t[])\r\n};\r\nvar _user$project$Types$Model = F7(\r\n\tfunction (a, b, c, d, e, f, g) {\r\n\t\treturn {join: a, joined: b, joinedAt: c, screen: d, me: e, players: f, asteroids: g};\r\n\t});\r\nvar _user$project$Types$TaskDone = function (a) {\r\n\treturn {ctor: 'TaskDone', _0: a};\r\n};\r\nvar _user$project$Types$ScreenSizeChanged = function (a) {\r\n\treturn {ctor: 'ScreenSizeChanged', _0: a};\r\n};\r\nvar _user$project$Types$InboundMessage = function (a) {\r\n\treturn {ctor: 'InboundMessage', _0: a};\r\n};\r\nvar _user$project$Types$PlayerMsg = function (a) {\r\n\treturn {ctor: 'PlayerMsg', _0: a};\r\n};\r\nvar _user$project$Types$JoinMsg = function (a) {\r\n\treturn {ctor: 'JoinMsg', _0: a};\r\n};\r\n\r\nvar _user$project$Starfield_View$minMax = function (v) {\r\n\treturn {\r\n\t\tctor: '_Tuple2',\r\n\t\t_0: _elm_lang$core$Basics$negate(\r\n\t\t\t_elm_lang$core$Basics$toFloat(v) / 2),\r\n\t\t_1: _elm_lang$core$Basics$toFloat(v) / 2\r\n\t};\r\n};\r\nvar _user$project$Starfield_View$randomFloat = F2(\r\n\tfunction (seed, _p0) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn A2(\r\n\t\t\t_elm_lang$core$Random$step,\r\n\t\t\tA2(_elm_lang$core$Random$float, _p1._0, _p1._1),\r\n\t\t\tseed);\r\n\t});\r\nvar _user$project$Starfield_View$createStars = F5(\r\n\tfunction (num, stars, seed, width, height) {\r\n\t\tcreateStars:\r\n\t\twhile (true) {\r\n\t\t\tif (_elm_lang$core$Native_Utils.eq(\r\n\t\t\t\t_elm_lang$core$List$length(stars),\r\n\t\t\t\tnum)) {\r\n\t\t\t\treturn stars;\r\n\t\t\t} else {\r\n\t\t\t\tvar _p2 = A2(_user$project$Starfield_View$randomFloat, seed, width);\r\n\t\t\t\tvar w = _p2._0;\r\n\t\t\t\tvar s1 = _p2._1;\r\n\t\t\t\tvar _p3 = A2(_user$project$Starfield_View$randomFloat, s1, height);\r\n\t\t\t\tvar h = _p3._0;\r\n\t\t\t\tvar s2 = _p3._1;\r\n\t\t\t\tvar star = A2(\r\n\t\t\t\t\t_evancz$elm_graphics$Collage$move,\r\n\t\t\t\t\t{ctor: '_Tuple2', _0: w, _1: h},\r\n\t\t\t\t\tA2(\r\n\t\t\t\t\t\t_evancz$elm_graphics$Collage$filled,\r\n\t\t\t\t\t\t_elm_lang$core$Color$white,\r\n\t\t\t\t\t\t_evancz$elm_graphics$Collage$circle(2)));\r\n\t\t\t\tvar _v1 = num,\r\n\t\t\t\t\t_v2 = A2(_elm_lang$core$List_ops['::'], star, stars),\r\n\t\t\t\t\t_v3 = s2,\r\n\t\t\t\t\t_v4 = width,\r\n\t\t\t\t\t_v5 = height;\r\n\t\t\t\tnum = _v1;\r\n\t\t\t\tstars = _v2;\r\n\t\t\t\tseed = _v3;\r\n\t\t\t\twidth = _v4;\r\n\t\t\t\theight = _v5;\r\n\t\t\t\tcontinue createStars;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\nvar _user$project$Starfield_View$root = F2(\r\n\tfunction (maybeTime, _p4) {\r\n\t\tvar _p5 = _p4;\r\n\t\tvar _p6 = maybeTime;\r\n\t\tif (_p6.ctor === 'Just') {\r\n\t\t\treturn A5(\r\n\t\t\t\t_user$project$Starfield_View$createStars,\r\n\t\t\t\t50,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[]),\r\n\t\t\t\t_elm_lang$core$Random$initialSeed(\r\n\t\t\t\t\t_elm_lang$core$Basics$round(\r\n\t\t\t\t\t\t_elm_lang$core$Time$inMilliseconds(_p6._0))),\r\n\t\t\t\t_user$project$Starfield_View$minMax(_p5._0),\r\n\t\t\t\t_user$project$Starfield_View$minMax(_p5._1));\r\n\t\t} else {\r\n\t\t\treturn _elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[]);\r\n\t\t}\r\n\t});\r\n\r\nvar _user$project$Player_View$rocket = _evancz$elm_graphics$Collage$polygon(\r\n\tA2(\r\n\t\t_elm_lang$core$List$map,\r\n\t\tfunction (_p0) {\r\n\t\t\tvar _p1 = _p0;\r\n\t\t\treturn {ctor: '_Tuple2', _0: (_p1._0 - 5) * 2, _1: _p1._1 * 2};\r\n\t\t},\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[\r\n\t\t\t\t{ctor: '_Tuple2', _0: -20, _1: 0},\r\n\t\t\t\t{ctor: '_Tuple2', _0: -8, _1: 5},\r\n\t\t\t\t{ctor: '_Tuple2', _0: -12, _1: 11},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 6, _1: 11},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 8, _1: 12},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 8, _1: 15},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 20, _1: 20},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 20, _1: -20},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 8, _1: -15},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 8, _1: -12},\r\n\t\t\t\t{ctor: '_Tuple2', _0: 6, _1: -11},\r\n\t\t\t\t{ctor: '_Tuple2', _0: -12, _1: -11},\r\n\t\t\t\t{ctor: '_Tuple2', _0: -8, _1: -5}\r\n\t\t\t])));\r\nvar _user$project$Player_View$teamColour = function (p) {\r\n\treturn _elm_lang$core$Native_Utils.eq(p.team, 'Green') ? _elm_lang$core$Color$green : (_elm_lang$core$Native_Utils.eq(p.team, 'Blue') ? _elm_lang$core$Color$blue : _elm_lang$core$Color$yellow);\r\n};\r\nvar _user$project$Player_View$player = function (p) {\r\n\tvar tc = _user$project$Player_View$teamColour(p);\r\n\treturn A2(\r\n\t\t_evancz$elm_graphics$Collage$rotate,\r\n\t\t_elm_lang$core$Basics$degrees(p.angle),\r\n\t\tA2(\r\n\t\t\t_evancz$elm_graphics$Collage$move,\r\n\t\t\t{ctor: '_Tuple2', _0: p.x, _1: p.y},\r\n\t\t\tA2(_evancz$elm_graphics$Collage$filled, tc, _user$project$Player_View$rocket)));\r\n};\r\nvar _user$project$Player_View$root = F2(\r\n\tfunction (players, _p2) {\r\n\t\tvar _p3 = _p2;\r\n\t\treturn A2(_elm_lang$core$List$map, _user$project$Player_View$player, players);\r\n\t});\r\nvar _user$project$Player_View$grad = A3(\r\n\t_elm_lang$core$Color$linear,\r\n\t{ctor: '_Tuple2', _0: 0, _1: 0},\r\n\t{ctor: '_Tuple2', _0: 40, _1: 40},\r\n\t_elm_lang$core$Native_List.fromArray(\r\n\t\t[\r\n\t\t\t{ctor: '_Tuple2', _0: 0, _1: _elm_lang$core$Color$blue},\r\n\t\t\t{ctor: '_Tuple2', _0: 1, _1: _elm_lang$core$Color$green}\r\n\t\t]));\r\n\r\nvar _user$project$View$canvas = F2(\r\n\tfunction (_p0, dim) {\r\n\t\tvar _p1 = _p0;\r\n\t\tvar definitelyMe = A2(_elm_lang$core$Maybe$withDefault, _user$project$Agents$nullPlayer, _p1.me);\r\n\t\tvar plyr = A2(\r\n\t\t\t_user$project$Player_View$root,\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[definitelyMe]),\r\n\t\t\tdim);\r\n\t\tvar notMe = A2(\r\n\t\t\t_elm_lang$core$List$filter,\r\n\t\t\tfunction (p) {\r\n\t\t\t\treturn !_elm_lang$core$Native_Utils.eq(p.id, definitelyMe.id);\r\n\t\t\t},\r\n\t\t\t_p1.players);\r\n\t\tvar asts = A2(_user$project$Asteroid_View$root, _p1.asteroids, dim);\r\n\t\tvar stars = A2(_user$project$Starfield_View$root, _p1.joinedAt, dim);\r\n\t\tvar agents = _elm_lang$core$List$concat(\r\n\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t[\r\n\t\t\t\t\tstars,\r\n\t\t\t\t\tasts,\r\n\t\t\t\t\tplyr,\r\n\t\t\t\t\tA2(_user$project$Player_View$root, notMe, dim)\r\n\t\t\t\t]));\r\n\t\tvar _p2 = dim;\r\n\t\tvar w = _p2._0;\r\n\t\tvar h = _p2._1;\r\n\t\treturn _evancz$elm_graphics$Element$toHtml(\r\n\t\t\tA3(_evancz$elm_graphics$Collage$collage, w, h, agents));\r\n\t});\r\nvar _user$project$View$view = function (model) {\r\n\treturn model.joined ? A2(\r\n\t\t_elm_lang$html$Html$div,\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[\r\n\t\t\t\tA2(\r\n\t\t\t\t_elm_lang$html$Html$h1,\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t_elm_lang$html$Html_Attributes$class('welcome')\r\n\t\t\t\t\t]),\r\n\t\t\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t_elm_lang$html$Html$text('Woohoo, welcome to the game!')\r\n\t\t\t\t\t])),\r\n\t\t\t\tA2(_user$project$View$canvas, model, model.screen),\r\n\t\t\t\t_user$project$Debug_View$root(model.me)\r\n\t\t\t])) : A2(\r\n\t\t_elm_lang$html$Html$div,\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[]),\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[\r\n\t\t\t\tA2(\r\n\t\t\t\t_elm_lang$html$Html_App$map,\r\n\t\t\t\t_user$project$Types$JoinMsg,\r\n\t\t\t\t_user$project$Join_View$view(model.join))\r\n\t\t\t]));\r\n};\r\n\r\nvar _user$project$Player_State$currentAngle = F3(\r\n\tfunction (_p0, yf, angle) {\r\n\t\tvar _p1 = _p0;\r\n\t\treturn (!_elm_lang$core$Native_Utils.eq(yf, 0)) ? angle : _p1.movingAngle;\r\n\t});\r\nvar _user$project$Player_State$constrain = F2(\r\n\tfunction (dim, limit) {\r\n\t\tvar limitf = _elm_lang$core$Basics$toFloat(limit);\r\n\t\tvar upper = limitf / 2;\r\n\t\tvar lower = _elm_lang$core$Basics$negate(upper);\r\n\t\treturn (_elm_lang$core$Native_Utils.cmp(dim, upper) > 0) ? lower : ((_elm_lang$core$Native_Utils.cmp(dim, lower) < 0) ? upper : dim);\r\n\t});\r\nvar _user$project$Player_State$newPosition = F2(\r\n\tfunction (speed, angle) {\r\n\t\tvar dy = speed * _elm_lang$core$Basics$sin(angle);\r\n\t\tvar dx = speed * _elm_lang$core$Basics$cos(angle);\r\n\t\treturn {ctor: '_Tuple2', _0: dx, _1: dy};\r\n\t});\r\nvar _user$project$Player_State$rotationSpeed = 10;\r\nvar _user$project$Player_State$tolerance = 0.5;\r\nvar _user$project$Player_State$currentSpeed = F2(\r\n\tfunction (_p2, yf) {\r\n\t\tvar _p3 = _p2;\r\n\t\tvar _p4 = _p3.speed;\r\n\t\treturn (!_elm_lang$core$Native_Utils.eq(yf, 0)) ? ((_elm_lang$core$Native_Utils.cmp(yf, 0) < 0) ? -15 : 15) : ((_elm_lang$core$Native_Utils.cmp(\r\n\t\t\t_elm_lang$core$Basics$abs(_p4),\r\n\t\t\t_user$project$Player_State$tolerance) > 0) ? (_p4 * 0.95) : 0);\r\n\t});\r\nvar _user$project$Player_State$update = F3(\r\n\tfunction (msg, player, _p5) {\r\n\t\tvar _p6 = _p5;\r\n\t\tvar _p7 = msg;\r\n\t\tif (_p7.ctor === 'Tick') {\r\n\t\t\treturn {ctor: '_Tuple2', _0: player, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t} else {\r\n\t\t\tvar _p10 = _p7._0;\r\n\t\t\tvar py = A2(_user$project$Player_State$constrain, player.y, _p6._1);\r\n\t\t\tvar px = A2(_user$project$Player_State$constrain, player.x, _p6._0);\r\n\t\t\tvar _p8 = {\r\n\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t_0: _elm_lang$core$Basics$toFloat(_p10.x),\r\n\t\t\t\t_1: _elm_lang$core$Basics$toFloat(_p10.y)\r\n\t\t\t};\r\n\t\t\tvar xf = _p8._0;\r\n\t\t\tvar yf = _p8._1;\r\n\t\t\tvar speed = A2(_user$project$Player_State$currentSpeed, player, yf);\r\n\t\t\tvar angle = player.angle + _elm_lang$core$Basics$negate(xf * _user$project$Player_State$rotationSpeed);\r\n\t\t\tvar movingAngle = A3(_user$project$Player_State$currentAngle, player, yf, angle);\r\n\t\t\tvar _p9 = A2(\r\n\t\t\t\t_user$project$Player_State$newPosition,\r\n\t\t\t\tspeed,\r\n\t\t\t\t_elm_lang$core$Basics$degrees(movingAngle));\r\n\t\t\tvar x = _p9._0;\r\n\t\t\tvar y = _p9._1;\r\n\t\t\tvar updatedPlayer = _elm_lang$core$Native_Utils.update(\r\n\t\t\t\tplayer,\r\n\t\t\t\t{angle: angle, x: px + x, y: py + y, speed: speed, movingAngle: movingAngle});\r\n\t\t\treturn {ctor: '_Tuple2', _0: updatedPlayer, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t}\r\n\t});\r\n\r\nvar _user$project$State$update = F2(\r\n\tfunction (msg, model) {\r\n\t\tvar _p0 = msg;\r\n\t\tswitch (_p0.ctor) {\r\n\t\t\tcase 'TaskDone':\r\n\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\tcase 'ScreenSizeChanged':\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tscreen: A2(_elm_lang$core$Debug$log, 'screen size: ', _p0._0)\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t};\r\n\t\t\tcase 'InboundMessage':\r\n\t\t\t\tvar _p5 = _p0._0;\r\n\t\t\t\tif (_elm_lang$core$Native_Utils.eq(_p5.messageType, _user$project$Messages$messageTypes.welcome)) {\r\n\t\t\t\t\tvar maybeWm = _user$project$Messages$welcomeMessage(_p5);\r\n\t\t\t\t\tvar _p1 = maybeWm;\r\n\t\t\t\t\tif (_p1.ctor === 'Just') {\r\n\t\t\t\t\t\tvar _p2 = _p1._0;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tjoined: true,\r\n\t\t\t\t\t\t\t\t\tjoinedAt: _elm_lang$core$Maybe$Just(_p2.timestamp),\r\n\t\t\t\t\t\t\t\t\tme: _elm_lang$core$Maybe$Just(_p2.me),\r\n\t\t\t\t\t\t\t\t\tplayers: _p2.players,\r\n\t\t\t\t\t\t\t\t\tasteroids: _p2.asteroids\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (_elm_lang$core$Native_Utils.eq(_p5.messageType, _user$project$Messages$messageTypes.delta)) {\r\n\t\t\t\t\t\tvar maybeDelta = _user$project$Messages$deltaMessage(_p5);\r\n\t\t\t\t\t\tvar _p3 = maybeDelta;\r\n\t\t\t\t\t\tif (_p3.ctor === 'Just') {\r\n\t\t\t\t\t\t\tvar _p4 = _p3._0;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t\t\t\t{players: _p4.players, asteroids: _p4.asteroids}),\r\n\t\t\t\t\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tcase 'PlayerMsg':\r\n\t\t\t\tvar me = A2(_elm_lang$core$Maybe$withDefault, _user$project$Agents$nullPlayer, model.me);\r\n\t\t\t\tvar _p6 = A3(_user$project$Player_State$update, _p0._0, me, model.screen);\r\n\t\t\t\tvar updated = _p6._0;\r\n\t\t\t\tvar fx = _p6._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tme: _elm_lang$core$Maybe$Just(updated)\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t_1: _user$project$Ports$outboundSocket(\r\n\t\t\t\t\t\t_user$project$Messages$updateMessage(updated))\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\tvar _p7 = A2(_user$project$Join_State$update, _p0._0, model.join);\r\n\t\t\t\tvar updated = _p7._0;\r\n\t\t\t\tvar fx = _p7._1;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tctor: '_Tuple2',\r\n\t\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\t{join: updated}),\r\n\t\t\t\t\t_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Types$JoinMsg, fx)\r\n\t\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\nvar _user$project$Player_Subs$windowResize = _elm_lang$window$Window$resizes(\r\n\tfunction (s) {\r\n\t\treturn _user$project$Types$ScreenSizeChanged(\r\n\t\t\t{ctor: '_Tuple2', _0: s.width, _1: s.height});\r\n\t});\r\nvar _user$project$Player_Subs$eventLoop = A2(\r\n\t_elm_lang$core$Platform_Sub$map,\r\n\t_user$project$Types$PlayerMsg,\r\n\tA2(_elm_lang$core$Time$every, _elm_lang$core$Time$millisecond * 16, _user$project$Player_Types$Tick));\r\n\r\nvar _user$project$Main$subscriptions = function (model) {\r\n\treturn _elm_lang$core$Platform_Sub$batch(\r\n\t\t_elm_lang$core$Native_List.fromArray(\r\n\t\t\t[\r\n\t\t\t\t_user$project$Player_Subs$eventLoop,\r\n\t\t\t\t_user$project$Player_Subs$windowResize,\r\n\t\t\t\t_user$project$Ports$inboundSocket(_user$project$Types$InboundMessage)\r\n\t\t\t]));\r\n};\r\nvar _user$project$Main$initialWindowSize = A3(\r\n\t_elm_lang$core$Task$perform,\r\n\t_user$project$Types$TaskDone,\r\n\t_user$project$Types$ScreenSizeChanged,\r\n\tA2(\r\n\t\t_elm_lang$core$Task$map,\r\n\t\tfunction (s) {\r\n\t\t\treturn {ctor: '_Tuple2', _0: s.width, _1: s.height};\r\n\t\t},\r\n\t\t_elm_lang$window$Window$size));\r\nvar _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Types$initialModel, _1: _user$project$Main$initialWindowSize};\r\nvar _user$project$Main$main = {\r\n\tmain: _elm_lang$html$Html_App$program(\r\n\t\t{init: _user$project$Main$init, update: _user$project$State$update, view: _user$project$View$view, subscriptions: _user$project$Main$subscriptions})\r\n};\r\n\r\nvar Elm = {};\r\nElm['Main'] = Elm['Main'] || {};\r\n_elm_lang$core$Native_Platform.addPublicModule(Elm['Main'], 'Main', typeof _user$project$Main$main === 'undefined' ? null : _user$project$Main$main);\r\n\r\nif (typeof define === \"function\" && define['amd'])\r\n{\r\n  define([], function() { return Elm; });\r\n  return;\r\n}\r\n\r\nif (typeof module === \"object\")\r\n{\r\n  module['exports'] = Elm;\r\n  return;\r\n}\r\n\r\nvar globalElm = this['Elm'];\r\nif (typeof globalElm === \"undefined\")\r\n{\r\n  this['Elm'] = Elm;\r\n  return;\r\n}\r\n\r\nfor (var publicModule in Elm)\r\n{\r\n  if (publicModule in globalElm)\r\n  {\r\n    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');\r\n  }\r\n  globalElm[publicModule] = Elm[publicModule];\r\n}\r\n\r\n}).call(this);\r\n\r\n\nmodule.exports = Elm;//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	eval("\nmodule.exports =  __webpack_require__(36);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1jbGllbnQvaW5kZXguanM/MmE4ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EiLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1vZHVsZS5leHBvcnRzID0gIHJlcXVpcmUoJy4vbGliLycpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZW5naW5lLmlvLWNsaWVudC9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDM1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	eval("\nmodule.exports = __webpack_require__(37);\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = __webpack_require__(2);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1jbGllbnQvbGliL2luZGV4LmpzP2Y3YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vc29ja2V0Jyk7XG5cbi8qKlxuICogRXhwb3J0cyBwYXJzZXJcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMucGFyc2VyID0gcmVxdWlyZSgnZW5naW5lLmlvLXBhcnNlcicpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZW5naW5lLmlvLWNsaWVudC9saWIvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAzNlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar transports = __webpack_require__(12);\nvar Emitter = __webpack_require__(3);\nvar debug = __webpack_require__(1)('engine.io-client:socket');\nvar index = __webpack_require__(15);\nvar parser = __webpack_require__(2);\nvar parseuri = __webpack_require__(16);\nvar parsejson = __webpack_require__(51);\nvar parseqs = __webpack_require__(8);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = __webpack_require__(6);\nSocket.transports = __webpack_require__(12);\nSocket.parser = __webpack_require__(2);\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function(){\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if('function' == typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module requirements.\n */\n\nvar Polling = __webpack_require__(13);\nvar inherit = __webpack_require__(4);\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  }\n  else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = __webpack_require__(7);\nvar Polling = __webpack_require__(13);\nvar Emitter = __webpack_require__(3);\nvar inherit = __webpack_require__(4);\nvar debug = __webpack_require__(1)('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(6);\nvar parser = __webpack_require__(2);\nvar parseqs = __webpack_require__(8);\nvar inherit = __webpack_require__(4);\nvar yeast = __webpack_require__(23);\nvar debug = __webpack_require__(1)('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  try {\n    WebSocket = __webpack_require__(68);\n  } catch (e) { }\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 41 */
/***/ function(module, exports) {

	eval("\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1wYXJzZXIvbGliL2tleXMuanM/ZWJkNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEdldHMgdGhlIGtleXMgZm9yIGFuIG9iamVjdC5cbiAqXG4gKiBAcmV0dXJuIHtBcnJheX0ga2V5c1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzIChvYmope1xuICB2YXIgYXJyID0gW107XG4gIHZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4gIGZvciAodmFyIGkgaW4gb2JqKSB7XG4gICAgaWYgKGhhcy5jYWxsKG9iaiwgaSkpIHtcbiAgICAgIGFyci5wdXNoKGkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYXJyO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2VuZ2luZS5pby1wYXJzZXIvbGliL2tleXMuanNcbiAqKiBtb2R1bGUgaWQgPSA0MVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/*\n * Module requirements.\n */\n\nvar isArray = __webpack_require__(43);\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1wYXJzZXIvfi9oYXMtYmluYXJ5L2luZGV4LmpzPzNiN2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuICogTW9kdWxlIHJlcXVpcmVtZW50cy5cbiAqL1xuXG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc0JpbmFyeTtcblxuLyoqXG4gKiBDaGVja3MgZm9yIGJpbmFyeSBkYXRhLlxuICpcbiAqIFJpZ2h0IG5vdyBvbmx5IEJ1ZmZlciBhbmQgQXJyYXlCdWZmZXIgYXJlIHN1cHBvcnRlZC4uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGFueXRoaW5nXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGhhc0JpbmFyeShkYXRhKSB7XG5cbiAgZnVuY3Rpb24gX2hhc0JpbmFyeShvYmopIHtcbiAgICBpZiAoIW9iaikgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKCAoZ2xvYmFsLkJ1ZmZlciAmJiBnbG9iYWwuQnVmZmVyLmlzQnVmZmVyKG9iaikpIHx8XG4gICAgICAgICAoZ2xvYmFsLkFycmF5QnVmZmVyICYmIG9iaiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB8fFxuICAgICAgICAgKGdsb2JhbC5CbG9iICYmIG9iaiBpbnN0YW5jZW9mIEJsb2IpIHx8XG4gICAgICAgICAoZ2xvYmFsLkZpbGUgJiYgb2JqIGluc3RhbmNlb2YgRmlsZSlcbiAgICAgICAgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChfaGFzQmluYXJ5KG9ialtpXSkpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAob2JqICYmICdvYmplY3QnID09IHR5cGVvZiBvYmopIHtcbiAgICAgIGlmIChvYmoudG9KU09OKSB7XG4gICAgICAgIG9iaiA9IG9iai50b0pTT04oKTtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSAmJiBfaGFzQmluYXJ5KG9ialtrZXldKSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIF9oYXNCaW5hcnkoZGF0YSk7XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9lbmdpbmUuaW8tcGFyc2VyL34vaGFzLWJpbmFyeS9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDQyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 43 */
/***/ function(module, exports) {

	eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2VuZ2luZS5pby1wYXJzZXIvfi9pc2FycmF5L2luZGV4LmpzPzk4ZWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwiZmlsZSI6IjQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZW5naW5lLmlvLXBhcnNlci9+L2lzYXJyYXkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA0M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/*\n * Module requirements.\n */\n\nvar isArray = __webpack_require__(45);\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhcy1iaW5hcnkvaW5kZXguanM/ZDA4YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixnQkFBZ0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLypcbiAqIE1vZHVsZSByZXF1aXJlbWVudHMuXG4gKi9cblxudmFyIGlzQXJyYXkgPSByZXF1aXJlKCdpc2FycmF5Jyk7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNCaW5hcnk7XG5cbi8qKlxuICogQ2hlY2tzIGZvciBiaW5hcnkgZGF0YS5cbiAqXG4gKiBSaWdodCBub3cgb25seSBCdWZmZXIgYW5kIEFycmF5QnVmZmVyIGFyZSBzdXBwb3J0ZWQuLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhbnl0aGluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBoYXNCaW5hcnkoZGF0YSkge1xuXG4gIGZ1bmN0aW9uIF9oYXNCaW5hcnkob2JqKSB7XG4gICAgaWYgKCFvYmopIHJldHVybiBmYWxzZTtcblxuICAgIGlmICggKGdsb2JhbC5CdWZmZXIgJiYgZ2xvYmFsLkJ1ZmZlci5pc0J1ZmZlciAmJiBnbG9iYWwuQnVmZmVyLmlzQnVmZmVyKG9iaikpIHx8XG4gICAgICAgICAoZ2xvYmFsLkFycmF5QnVmZmVyICYmIG9iaiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB8fFxuICAgICAgICAgKGdsb2JhbC5CbG9iICYmIG9iaiBpbnN0YW5jZW9mIEJsb2IpIHx8XG4gICAgICAgICAoZ2xvYmFsLkZpbGUgJiYgb2JqIGluc3RhbmNlb2YgRmlsZSlcbiAgICAgICAgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChfaGFzQmluYXJ5KG9ialtpXSkpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAob2JqICYmICdvYmplY3QnID09IHR5cGVvZiBvYmopIHtcbiAgICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvaGFzLWJpbmFyeS9wdWxsLzRcbiAgICAgIGlmIChvYmoudG9KU09OICYmICdmdW5jdGlvbicgPT0gdHlwZW9mIG9iai50b0pTT04pIHtcbiAgICAgICAgb2JqID0gb2JqLnRvSlNPTigpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpICYmIF9oYXNCaW5hcnkob2JqW2tleV0pKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gX2hhc0JpbmFyeShkYXRhKTtcbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2hhcy1iaW5hcnkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA0NFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 45 */
/***/ function(module, exports) {

	eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhcy1iaW5hcnkvfi9pc2FycmF5L2luZGV4LmpzPzUxOTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwiZmlsZSI6IjQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vaGFzLWJpbmFyeS9+L2lzYXJyYXkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA0NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 46 */
/***/ function(module, exports) {

	eval("\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhcy1jb3JzL2luZGV4LmpzP2U5YmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqXG4gKiBMb2dpYyBib3Jyb3dlZCBmcm9tIE1vZGVybml6cjpcbiAqXG4gKiAgIC0gaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2NvcnMuanNcbiAqL1xuXG50cnkge1xuICBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAnd2l0aENyZWRlbnRpYWxzJyBpbiBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbn0gY2F0Y2ggKGVycikge1xuICAvLyBpZiBYTUxIdHRwIHN1cHBvcnQgaXMgZGlzYWJsZWQgaW4gSUUgdGhlbiBpdCB3aWxsIHRocm93XG4gIC8vIHdoZW4gdHJ5aW5nIHRvIGNyZWF0ZVxuICBtb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vaGFzLWNvcnMvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA0NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = {\n  XmlEntities: __webpack_require__(49),\n  Html4Entities: __webpack_require__(48),\n  Html5Entities: __webpack_require__(14),\n  AllHtmlEntities: __webpack_require__(14)\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2h0bWwtZW50aXRpZXMvaW5kZXguanM/ZWZlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgWG1sRW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL3htbC1lbnRpdGllcy5qcycpLFxuICBIdG1sNEVudGl0aWVzOiByZXF1aXJlKCcuL2xpYi9odG1sNC1lbnRpdGllcy5qcycpLFxuICBIdG1sNUVudGl0aWVzOiByZXF1aXJlKCcuL2xpYi9odG1sNS1lbnRpdGllcy5qcycpLFxuICBBbGxIdG1sRW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL2h0bWw1LWVudGl0aWVzLmpzJylcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9odG1sLWVudGl0aWVzL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gNDdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 48 */
/***/ function(module, exports) {

	eval("var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'Oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'oelig', 'oelig', 'scaron', 'scaron', 'yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 49 */
/***/ function(module, exports) {

	eval("var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    var strLenght = str.length;\n    if (strLenght === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2h0bWwtZW50aXRpZXMvbGliL3htbC1lbnRpdGllcy5qcz9kN2YxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTO0FBQ1QsV0FBVztBQUNYLFdBQVc7QUFDWCxVQUFVO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjO0FBQ2QsY0FBYztBQUNkLGdCQUFnQjtBQUNoQixpQkFBaUI7QUFDakIsZUFBZTtBQUNmOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI0OS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBBTFBIQV9JTkRFWCA9IHtcbiAgICAnJmx0JzogJzwnLFxuICAgICcmZ3QnOiAnPicsXG4gICAgJyZxdW90JzogJ1wiJyxcbiAgICAnJmFwb3MnOiAnXFwnJyxcbiAgICAnJmFtcCc6ICcmJyxcbiAgICAnJmx0Oyc6ICc8JyxcbiAgICAnJmd0Oyc6ICc+JyxcbiAgICAnJnF1b3Q7JzogJ1wiJyxcbiAgICAnJmFwb3M7JzogJ1xcJycsXG4gICAgJyZhbXA7JzogJyYnXG59O1xuXG52YXIgQ0hBUl9JTkRFWCA9IHtcbiAgICA2MDogJ2x0JyxcbiAgICA2MjogJ2d0JyxcbiAgICAzNDogJ3F1b3QnLFxuICAgIDM5OiAnYXBvcycsXG4gICAgMzg6ICdhbXAnXG59O1xuXG52YXIgQ0hBUl9TX0lOREVYID0ge1xuICAgICc8JzogJyZsdDsnLFxuICAgICc+JzogJyZndDsnLFxuICAgICdcIic6ICcmcXVvdDsnLFxuICAgICdcXCcnOiAnJmFwb3M7JyxcbiAgICAnJic6ICcmYW1wOydcbn07XG5cbi8qKlxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFhtbEVudGl0aWVzKCkge31cblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG5YbWxFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKHN0ci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoLzx8PnxcInwnfCYvZywgZnVuY3Rpb24ocykge1xuICAgICAgICByZXR1cm4gQ0hBUl9TX0lOREVYW3NdO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG4gWG1sRW50aXRpZXMuZW5jb2RlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmVuY29kZShzdHIpO1xuIH07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuWG1sRW50aXRpZXMucHJvdG90eXBlLmRlY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIGlmIChzdHIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8mIz9bMC05YS16QS1aXSs7Py9nLCBmdW5jdGlvbihzKSB7XG4gICAgICAgIGlmIChzLmNoYXJBdCgxKSA9PT0gJyMnKSB7XG4gICAgICAgICAgICB2YXIgY29kZSA9IHMuY2hhckF0KDIpLnRvTG93ZXJDYXNlKCkgPT09ICd4JyA/XG4gICAgICAgICAgICAgICAgcGFyc2VJbnQocy5zdWJzdHIoMyksIDE2KSA6XG4gICAgICAgICAgICAgICAgcGFyc2VJbnQocy5zdWJzdHIoMikpO1xuXG4gICAgICAgICAgICBpZiAoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQUxQSEFfSU5ERVhbc10gfHwgcztcbiAgICB9KTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuIFhtbEVudGl0aWVzLmRlY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgWG1sRW50aXRpZXMoKS5kZWNvZGUoc3RyKTtcbiB9O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cblhtbEVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbihzdHIpIHtcbiAgICB2YXIgc3RyTGVuZ3RoID0gc3RyLmxlbmd0aDtcbiAgICBpZiAoc3RyTGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IHN0ckxlbmd0aCkge1xuICAgICAgICB2YXIgYyA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICAgICAgICB2YXIgYWxwaGEgPSBDSEFSX0lOREVYW2NdO1xuICAgICAgICBpZiAoYWxwaGEpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBcIiZcIiArIGFscGhhICsgXCI7XCI7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYyA8IDMyIHx8IGMgPiAxMjYpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSAnJiMnICsgYyArICc7JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBzdHIuY2hhckF0KGkpO1xuICAgICAgICB9XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuIFhtbEVudGl0aWVzLmVuY29kZU5vblVURiA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgWG1sRW50aXRpZXMoKS5lbmNvZGVOb25VVEYoc3RyKTtcbiB9O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cblhtbEVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25BU0NJSSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHZhciBzdHJMZW5naHQgPSBzdHIubGVuZ3RoO1xuICAgIGlmIChzdHJMZW5naHQgPT09IDApIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgc3RyTGVuZ2h0KSB7XG4gICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjIDw9IDI1NSkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IHN0cltpKytdO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ICs9ICcmIycgKyBjICsgJzsnO1xuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbiBYbWxFbnRpdGllcy5lbmNvZGVOb25BU0NJSSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgWG1sRW50aXRpZXMoKS5lbmNvZGVOb25BU0NJSShzdHIpO1xuIH07XG5cbm1vZHVsZS5leHBvcnRzID0gWG1sRW50aXRpZXM7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9odG1sLWVudGl0aWVzL2xpYi94bWwtZW50aXRpZXMuanNcbiAqKiBtb2R1bGUgaWQgPSA0OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 50 */
/***/ function(module, exports) {

	eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21zL2luZGV4LmpzPzZkMzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwO1xudmFyIG0gPSBzICogNjA7XG52YXIgaCA9IG0gKiA2MDtcbnZhciBkID0gaCAqIDI0O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge1N0cmluZ3xOdW1iZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odmFsLCBvcHRpb25zKXtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmICgnc3RyaW5nJyA9PSB0eXBlb2YgdmFsKSByZXR1cm4gcGFyc2UodmFsKTtcbiAgcmV0dXJuIG9wdGlvbnMubG9uZ1xuICAgID8gbG9uZyh2YWwpXG4gICAgOiBzaG9ydCh2YWwpO1xufTtcblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gYHN0cmAgYW5kIHJldHVybiBtaWxsaXNlY29uZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gIHN0ciA9ICcnICsgc3RyO1xuICBpZiAoc3RyLmxlbmd0aCA+IDEwMDAwKSByZXR1cm47XG4gIHZhciBtYXRjaCA9IC9eKCg/OlxcZCspP1xcLj9cXGQrKSAqKG1pbGxpc2Vjb25kcz98bXNlY3M/fG1zfHNlY29uZHM/fHNlY3M/fHN8bWludXRlcz98bWlucz98bXxob3Vycz98aHJzP3xofGRheXM/fGR8eWVhcnM/fHlycz98eSk/JC9pLmV4ZWMoc3RyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuO1xuICB2YXIgbiA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICB2YXIgdHlwZSA9IChtYXRjaFsyXSB8fCAnbXMnKS50b0xvd2VyQ2FzZSgpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHk7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzaG9ydChtcykge1xuICBpZiAobXMgPj0gZCkgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJztcbiAgaWYgKG1zID49IGgpIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gaCkgKyAnaCc7XG4gIGlmIChtcyA+PSBtKSByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG0pICsgJ20nO1xuICBpZiAobXMgPj0gcykgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJztcbiAgcmV0dXJuIG1zICsgJ21zJztcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpXG4gICAgfHwgcGx1cmFsKG1zLCBoLCAnaG91cicpXG4gICAgfHwgcGx1cmFsKG1zLCBtLCAnbWludXRlJylcbiAgICB8fCBwbHVyYWwobXMsIHMsICdzZWNvbmQnKVxuICAgIHx8IG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBuLCBuYW1lKSB7XG4gIGlmIChtcyA8IG4pIHJldHVybjtcbiAgaWYgKG1zIDwgbiAqIDEuNSkgcmV0dXJuIE1hdGguZmxvb3IobXMgLyBuKSArICcgJyArIG5hbWU7XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncyc7XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9tcy9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDUwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 51 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3BhcnNlanNvbi9pbmRleC5qcz9iZDBlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0IsbURBQW1ELEVBQUU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEUiLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEpTT04gcGFyc2UuXG4gKlxuICogQHNlZSBCYXNlZCBvbiBqUXVlcnkjcGFyc2VKU09OIChNSVQpIGFuZCBKU09OMlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxudmFyIHJ2YWxpZGNoYXJzID0gL15bXFxdLDp7fVxcc10qJC87XG52YXIgcnZhbGlkZXNjYXBlID0gL1xcXFwoPzpbXCJcXFxcXFwvYmZucnRdfHVbMC05YS1mQS1GXXs0fSkvZztcbnZhciBydmFsaWR0b2tlbnMgPSAvXCJbXlwiXFxcXFxcblxccl0qXCJ8dHJ1ZXxmYWxzZXxudWxsfC0/XFxkKyg/OlxcLlxcZCopPyg/OltlRV1bK1xcLV0/XFxkKyk/L2c7XG52YXIgcnZhbGlkYnJhY2VzID0gLyg/Ol58OnwsKSg/OlxccypcXFspKy9nO1xudmFyIHJ0cmltTGVmdCA9IC9eXFxzKy87XG52YXIgcnRyaW1SaWdodCA9IC9cXHMrJC87XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2Vqc29uKGRhdGEpIHtcbiAgaWYgKCdzdHJpbmcnICE9IHR5cGVvZiBkYXRhIHx8ICFkYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBkYXRhID0gZGF0YS5yZXBsYWNlKHJ0cmltTGVmdCwgJycpLnJlcGxhY2UocnRyaW1SaWdodCwgJycpO1xuXG4gIC8vIEF0dGVtcHQgdG8gcGFyc2UgdXNpbmcgdGhlIG5hdGl2ZSBKU09OIHBhcnNlciBmaXJzdFxuICBpZiAoZ2xvYmFsLkpTT04gJiYgSlNPTi5wYXJzZSkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpO1xuICB9XG5cbiAgaWYgKHJ2YWxpZGNoYXJzLnRlc3QoZGF0YS5yZXBsYWNlKHJ2YWxpZGVzY2FwZSwgJ0AnKVxuICAgICAgLnJlcGxhY2UocnZhbGlkdG9rZW5zLCAnXScpXG4gICAgICAucmVwbGFjZShydmFsaWRicmFjZXMsICcnKSkpIHtcbiAgICByZXR1cm4gKG5ldyBGdW5jdGlvbigncmV0dXJuICcgKyBkYXRhKSkoKTtcbiAgfVxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9wYXJzZWpzb24vaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA1MVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 52 */
/***/ function(module, exports) {

	eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3F1ZXJ5c3RyaW5nL2RlY29kZS5qcz9jMjUwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLy8gSWYgb2JqLmhhc093blByb3BlcnR5IGhhcyBiZWVuIG92ZXJyaWRkZW4sIHRoZW4gY2FsbGluZ1xuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcwN1xuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGlmICh0eXBlb2YgcXMgIT09ICdzdHJpbmcnIHx8IHFzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xuICBxcyA9IHFzLnNwbGl0KHNlcCk7XG5cbiAgdmFyIG1heEtleXMgPSAxMDAwO1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy5tYXhLZXlzID09PSAnbnVtYmVyJykge1xuICAgIG1heEtleXMgPSBvcHRpb25zLm1heEtleXM7XG4gIH1cblxuICB2YXIgbGVuID0gcXMubGVuZ3RoO1xuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcbiAgaWYgKG1heEtleXMgPiAwICYmIGxlbiA+IG1heEtleXMpIHtcbiAgICBsZW4gPSBtYXhLZXlzO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcbiAgICAgICAgaWR4ID0geC5pbmRleE9mKGVxKSxcbiAgICAgICAga3N0ciwgdnN0ciwgaywgdjtcblxuICAgIGlmIChpZHggPj0gMCkge1xuICAgICAga3N0ciA9IHguc3Vic3RyKDAsIGlkeCk7XG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtzdHIgPSB4O1xuICAgICAgdnN0ciA9ICcnO1xuICAgIH1cblxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XG4gICAgdiA9IGRlY29kZVVSSUNvbXBvbmVudCh2c3RyKTtcblxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xuICAgICAgb2JqW2tdID0gdjtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgb2JqW2tdLnB1c2godik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrXSA9IFtvYmpba10sIHZdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcXVlcnlzdHJpbmcvZGVjb2RlLmpzXG4gKiogbW9kdWxlIGlkID0gNTJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 53 */
/***/ function(module, exports) {

	eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3F1ZXJ5c3RyaW5nL2VuY29kZS5qcz9lODZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHN0cmluZ2lmeVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHYpIHtcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gdjtcblxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIHYgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiBpc0Zpbml0ZSh2KSA/IHYgOiAnJztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICBpZiAob2JqID09PSBudWxsKSB7XG4gICAgb2JqID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uKGspIHtcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIHJldHVybiBvYmpba10ubWFwKGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcbiAgICAgICAgfSkuam9pbihzZXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcbiAgICAgIH1cbiAgICB9KS5qb2luKHNlcCk7XG5cbiAgfVxuXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3F1ZXJ5c3RyaW5nL2VuY29kZS5qc1xuICoqIG1vZHVsZSBpZCA9IDUzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nexports.decode = exports.parse = __webpack_require__(52);\nexports.encode = exports.stringify = __webpack_require__(53);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3F1ZXJ5c3RyaW5nL2luZGV4LmpzP2ZjZTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQSIsImZpbGUiOiI1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9kZWNvZGUnKTtcbmV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy5zdHJpbmdpZnkgPSByZXF1aXJlKCcuL2VuY29kZScpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcXVlcnlzdHJpbmcvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA1NFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar url = __webpack_require__(56);\nvar parser = __webpack_require__(9);\nvar Manager = __webpack_require__(17);\nvar debug = __webpack_require__(1)('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = __webpack_require__(17);\nexports.Socket = __webpack_require__(19);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1jbGllbnQvbGliL2luZGV4LmpzP2MzMDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgdXJsID0gcmVxdWlyZSgnLi91cmwnKTtcbnZhciBwYXJzZXIgPSByZXF1aXJlKCdzb2NrZXQuaW8tcGFyc2VyJyk7XG52YXIgTWFuYWdlciA9IHJlcXVpcmUoJy4vbWFuYWdlcicpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2V0LmlvLWNsaWVudCcpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IGxvb2t1cDtcblxuLyoqXG4gKiBNYW5hZ2VycyBjYWNoZS5cbiAqL1xuXG52YXIgY2FjaGUgPSBleHBvcnRzLm1hbmFnZXJzID0ge307XG5cbi8qKlxuICogTG9va3MgdXAgYW4gZXhpc3RpbmcgYE1hbmFnZXJgIGZvciBtdWx0aXBsZXhpbmcuXG4gKiBJZiB0aGUgdXNlciBzdW1tb25zOlxuICpcbiAqICAgYGlvKCdodHRwOi8vbG9jYWxob3N0L2EnKTtgXG4gKiAgIGBpbygnaHR0cDovL2xvY2FsaG9zdC9iJyk7YFxuICpcbiAqIFdlIHJldXNlIHRoZSBleGlzdGluZyBpbnN0YW5jZSBiYXNlZCBvbiBzYW1lIHNjaGVtZS9wb3J0L2hvc3QsXG4gKiBhbmQgd2UgaW5pdGlhbGl6ZSBzb2NrZXRzIGZvciBlYWNoIG5hbWVzcGFjZS5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGxvb2t1cCh1cmksIG9wdHMpIHtcbiAgaWYgKHR5cGVvZiB1cmkgPT0gJ29iamVjdCcpIHtcbiAgICBvcHRzID0gdXJpO1xuICAgIHVyaSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIG9wdHMgPSBvcHRzIHx8IHt9O1xuXG4gIHZhciBwYXJzZWQgPSB1cmwodXJpKTtcbiAgdmFyIHNvdXJjZSA9IHBhcnNlZC5zb3VyY2U7XG4gIHZhciBpZCA9IHBhcnNlZC5pZDtcbiAgdmFyIHBhdGggPSBwYXJzZWQucGF0aDtcbiAgdmFyIHNhbWVOYW1lc3BhY2UgPSBjYWNoZVtpZF0gJiYgcGF0aCBpbiBjYWNoZVtpZF0ubnNwcztcbiAgdmFyIG5ld0Nvbm5lY3Rpb24gPSBvcHRzLmZvcmNlTmV3IHx8IG9wdHNbJ2ZvcmNlIG5ldyBjb25uZWN0aW9uJ10gfHxcbiAgICAgICAgICAgICAgICAgICAgICBmYWxzZSA9PT0gb3B0cy5tdWx0aXBsZXggfHwgc2FtZU5hbWVzcGFjZTtcblxuICB2YXIgaW87XG5cbiAgaWYgKG5ld0Nvbm5lY3Rpb24pIHtcbiAgICBkZWJ1ZygnaWdub3Jpbmcgc29ja2V0IGNhY2hlIGZvciAlcycsIHNvdXJjZSk7XG4gICAgaW8gPSBNYW5hZ2VyKHNvdXJjZSwgb3B0cyk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCFjYWNoZVtpZF0pIHtcbiAgICAgIGRlYnVnKCduZXcgaW8gaW5zdGFuY2UgZm9yICVzJywgc291cmNlKTtcbiAgICAgIGNhY2hlW2lkXSA9IE1hbmFnZXIoc291cmNlLCBvcHRzKTtcbiAgICB9XG4gICAgaW8gPSBjYWNoZVtpZF07XG4gIH1cblxuICByZXR1cm4gaW8uc29ja2V0KHBhcnNlZC5wYXRoKTtcbn1cblxuLyoqXG4gKiBQcm90b2NvbCB2ZXJzaW9uLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy5wcm90b2NvbCA9IHBhcnNlci5wcm90b2NvbDtcblxuLyoqXG4gKiBgY29ubmVjdGAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVyaVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLmNvbm5lY3QgPSBsb29rdXA7XG5cbi8qKlxuICogRXhwb3NlIGNvbnN0cnVjdG9ycyBmb3Igc3RhbmRhbG9uZSBidWlsZC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmV4cG9ydHMuTWFuYWdlciA9IHJlcXVpcmUoJy4vbWFuYWdlcicpO1xuZXhwb3J0cy5Tb2NrZXQgPSByZXF1aXJlKCcuL3NvY2tldCcpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vc29ja2V0LmlvLWNsaWVudC9saWIvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA1NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module dependencies.\n */\n\nvar parseuri = __webpack_require__(16);\nvar debug = __webpack_require__(1)('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1jbGllbnQvbGliL3VybC5qcz81NzU1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgcGFyc2V1cmkgPSByZXF1aXJlKCdwYXJzZXVyaScpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2V0LmlvLWNsaWVudDp1cmwnKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVybDtcblxuLyoqXG4gKiBVUkwgcGFyc2VyLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7T2JqZWN0fSBBbiBvYmplY3QgbWVhbnQgdG8gbWltaWMgd2luZG93LmxvY2F0aW9uLlxuICogICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIHdpbmRvdy5sb2NhdGlvbi5cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gdXJsKHVyaSwgbG9jKXtcbiAgdmFyIG9iaiA9IHVyaTtcblxuICAvLyBkZWZhdWx0IHRvIHdpbmRvdy5sb2NhdGlvblxuICB2YXIgbG9jID0gbG9jIHx8IGdsb2JhbC5sb2NhdGlvbjtcbiAgaWYgKG51bGwgPT0gdXJpKSB1cmkgPSBsb2MucHJvdG9jb2wgKyAnLy8nICsgbG9jLmhvc3Q7XG5cbiAgLy8gcmVsYXRpdmUgcGF0aCBzdXBwb3J0XG4gIGlmICgnc3RyaW5nJyA9PSB0eXBlb2YgdXJpKSB7XG4gICAgaWYgKCcvJyA9PSB1cmkuY2hhckF0KDApKSB7XG4gICAgICBpZiAoJy8nID09IHVyaS5jaGFyQXQoMSkpIHtcbiAgICAgICAgdXJpID0gbG9jLnByb3RvY29sICsgdXJpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXJpID0gbG9jLmhvc3QgKyB1cmk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCEvXihodHRwcz98d3NzPyk6XFwvXFwvLy50ZXN0KHVyaSkpIHtcbiAgICAgIGRlYnVnKCdwcm90b2NvbC1sZXNzIHVybCAlcycsIHVyaSk7XG4gICAgICBpZiAoJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGxvYykge1xuICAgICAgICB1cmkgPSBsb2MucHJvdG9jb2wgKyAnLy8nICsgdXJpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXJpID0gJ2h0dHBzOi8vJyArIHVyaTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJzZVxuICAgIGRlYnVnKCdwYXJzZSAlcycsIHVyaSk7XG4gICAgb2JqID0gcGFyc2V1cmkodXJpKTtcbiAgfVxuXG4gIC8vIG1ha2Ugc3VyZSB3ZSB0cmVhdCBgbG9jYWxob3N0OjgwYCBhbmQgYGxvY2FsaG9zdGAgZXF1YWxseVxuICBpZiAoIW9iai5wb3J0KSB7XG4gICAgaWYgKC9eKGh0dHB8d3MpJC8udGVzdChvYmoucHJvdG9jb2wpKSB7XG4gICAgICBvYmoucG9ydCA9ICc4MCc7XG4gICAgfVxuICAgIGVsc2UgaWYgKC9eKGh0dHB8d3MpcyQvLnRlc3Qob2JqLnByb3RvY29sKSkge1xuICAgICAgb2JqLnBvcnQgPSAnNDQzJztcbiAgICB9XG4gIH1cblxuICBvYmoucGF0aCA9IG9iai5wYXRoIHx8ICcvJztcblxuICB2YXIgaXB2NiA9IG9iai5ob3N0LmluZGV4T2YoJzonKSAhPT0gLTE7XG4gIHZhciBob3N0ID0gaXB2NiA/ICdbJyArIG9iai5ob3N0ICsgJ10nIDogb2JqLmhvc3Q7XG5cbiAgLy8gZGVmaW5lIHVuaXF1ZSBpZFxuICBvYmouaWQgPSBvYmoucHJvdG9jb2wgKyAnOi8vJyArIGhvc3QgKyAnOicgKyBvYmoucG9ydDtcbiAgLy8gZGVmaW5lIGhyZWZcbiAgb2JqLmhyZWYgPSBvYmoucHJvdG9jb2wgKyAnOi8vJyArIGhvc3QgKyAobG9jICYmIGxvYy5wb3J0ID09IG9iai5wb3J0ID8gJycgOiAoJzonICsgb2JqLnBvcnQpKTtcblxuICByZXR1cm4gb2JqO1xufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vc29ja2V0LmlvLWNsaWVudC9saWIvdXJsLmpzXG4gKiogbW9kdWxlIGlkID0gNTZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = __webpack_require__(22);\nvar isBuf = __webpack_require__(21);\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3NvY2tldC5pby1wYXJzZXIvYmluYXJ5LmpzPzE4OWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLE9BQU87QUFDbkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EscUJBQXFCLGlCQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLFVBQVU7QUFDVjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxNQUFNO0FBQ2pCLFlBQVksT0FBTztBQUNuQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBLEtBQUs7QUFDTCxxQkFBcUIsaUJBQWlCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0NBQXdDO0FBQ3hDLEtBQUsseUJBQXlCO0FBQzlCLHFCQUFxQixnQkFBZ0I7QUFDckM7QUFDQTtBQUNBLEtBQUsseURBQXlEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmdsb2JhbCBCbG9iLEZpbGUqL1xuXG4vKipcbiAqIE1vZHVsZSByZXF1aXJlbWVudHNcbiAqL1xuXG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKTtcbnZhciBpc0J1ZiA9IHJlcXVpcmUoJy4vaXMtYnVmZmVyJyk7XG5cbi8qKlxuICogUmVwbGFjZXMgZXZlcnkgQnVmZmVyIHwgQXJyYXlCdWZmZXIgaW4gcGFja2V0IHdpdGggYSBudW1iZXJlZCBwbGFjZWhvbGRlci5cbiAqIEFueXRoaW5nIHdpdGggYmxvYnMgb3IgZmlsZXMgc2hvdWxkIGJlIGZlZCB0aHJvdWdoIHJlbW92ZUJsb2JzIGJlZm9yZSBjb21pbmdcbiAqIGhlcmUuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhY2tldCAtIHNvY2tldC5pbyBldmVudCBwYWNrZXRcbiAqIEByZXR1cm4ge09iamVjdH0gd2l0aCBkZWNvbnN0cnVjdGVkIHBhY2tldCBhbmQgbGlzdCBvZiBidWZmZXJzXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmV4cG9ydHMuZGVjb25zdHJ1Y3RQYWNrZXQgPSBmdW5jdGlvbihwYWNrZXQpe1xuICB2YXIgYnVmZmVycyA9IFtdO1xuICB2YXIgcGFja2V0RGF0YSA9IHBhY2tldC5kYXRhO1xuXG4gIGZ1bmN0aW9uIF9kZWNvbnN0cnVjdFBhY2tldChkYXRhKSB7XG4gICAgaWYgKCFkYXRhKSByZXR1cm4gZGF0YTtcblxuICAgIGlmIChpc0J1ZihkYXRhKSkge1xuICAgICAgdmFyIHBsYWNlaG9sZGVyID0geyBfcGxhY2Vob2xkZXI6IHRydWUsIG51bTogYnVmZmVycy5sZW5ndGggfTtcbiAgICAgIGJ1ZmZlcnMucHVzaChkYXRhKTtcbiAgICAgIHJldHVybiBwbGFjZWhvbGRlcjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIHZhciBuZXdEYXRhID0gbmV3IEFycmF5KGRhdGEubGVuZ3RoKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBuZXdEYXRhW2ldID0gX2RlY29uc3RydWN0UGFja2V0KGRhdGFbaV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0RhdGE7XG4gICAgfSBlbHNlIGlmICgnb2JqZWN0JyA9PSB0eXBlb2YgZGF0YSAmJiAhKGRhdGEgaW5zdGFuY2VvZiBEYXRlKSkge1xuICAgICAgdmFyIG5ld0RhdGEgPSB7fTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7XG4gICAgICAgIG5ld0RhdGFba2V5XSA9IF9kZWNvbnN0cnVjdFBhY2tldChkYXRhW2tleV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0RhdGE7XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgdmFyIHBhY2sgPSBwYWNrZXQ7XG4gIHBhY2suZGF0YSA9IF9kZWNvbnN0cnVjdFBhY2tldChwYWNrZXREYXRhKTtcbiAgcGFjay5hdHRhY2htZW50cyA9IGJ1ZmZlcnMubGVuZ3RoOyAvLyBudW1iZXIgb2YgYmluYXJ5ICdhdHRhY2htZW50cydcbiAgcmV0dXJuIHtwYWNrZXQ6IHBhY2ssIGJ1ZmZlcnM6IGJ1ZmZlcnN9O1xufTtcblxuLyoqXG4gKiBSZWNvbnN0cnVjdHMgYSBiaW5hcnkgcGFja2V0IGZyb20gaXRzIHBsYWNlaG9sZGVyIHBhY2tldCBhbmQgYnVmZmVyc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYWNrZXQgLSBldmVudCBwYWNrZXQgd2l0aCBwbGFjZWhvbGRlcnNcbiAqIEBwYXJhbSB7QXJyYXl9IGJ1ZmZlcnMgLSBiaW5hcnkgYnVmZmVycyB0byBwdXQgaW4gcGxhY2Vob2xkZXIgcG9zaXRpb25zXG4gKiBAcmV0dXJuIHtPYmplY3R9IHJlY29uc3RydWN0ZWQgcGFja2V0XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmV4cG9ydHMucmVjb25zdHJ1Y3RQYWNrZXQgPSBmdW5jdGlvbihwYWNrZXQsIGJ1ZmZlcnMpIHtcbiAgdmFyIGN1clBsYWNlSG9sZGVyID0gMDtcblxuICBmdW5jdGlvbiBfcmVjb25zdHJ1Y3RQYWNrZXQoZGF0YSkge1xuICAgIGlmIChkYXRhICYmIGRhdGEuX3BsYWNlaG9sZGVyKSB7XG4gICAgICB2YXIgYnVmID0gYnVmZmVyc1tkYXRhLm51bV07IC8vIGFwcHJvcHJpYXRlIGJ1ZmZlciAoc2hvdWxkIGJlIG5hdHVyYWwgb3JkZXIgYW55d2F5KVxuICAgICAgcmV0dXJuIGJ1ZjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBkYXRhW2ldID0gX3JlY29uc3RydWN0UGFja2V0KGRhdGFbaV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBlbHNlIGlmIChkYXRhICYmICdvYmplY3QnID09IHR5cGVvZiBkYXRhKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkge1xuICAgICAgICBkYXRhW2tleV0gPSBfcmVjb25zdHJ1Y3RQYWNrZXQoZGF0YVtrZXldKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIHBhY2tldC5kYXRhID0gX3JlY29uc3RydWN0UGFja2V0KHBhY2tldC5kYXRhKTtcbiAgcGFja2V0LmF0dGFjaG1lbnRzID0gdW5kZWZpbmVkOyAvLyBubyBsb25nZXIgdXNlZnVsXG4gIHJldHVybiBwYWNrZXQ7XG59O1xuXG4vKipcbiAqIEFzeW5jaHJvbm91c2x5IHJlbW92ZXMgQmxvYnMgb3IgRmlsZXMgZnJvbSBkYXRhIHZpYVxuICogRmlsZVJlYWRlcidzIHJlYWRBc0FycmF5QnVmZmVyIG1ldGhvZC4gVXNlZCBiZWZvcmUgZW5jb2RpbmdcbiAqIGRhdGEgYXMgbXNncGFjay4gQ2FsbHMgY2FsbGJhY2sgd2l0aCB0aGUgYmxvYmxlc3MgZGF0YS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGF0YVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMucmVtb3ZlQmxvYnMgPSBmdW5jdGlvbihkYXRhLCBjYWxsYmFjaykge1xuICBmdW5jdGlvbiBfcmVtb3ZlQmxvYnMob2JqLCBjdXJLZXksIGNvbnRhaW5pbmdPYmplY3QpIHtcbiAgICBpZiAoIW9iaikgcmV0dXJuIG9iajtcblxuICAgIC8vIGNvbnZlcnQgYW55IGJsb2JcbiAgICBpZiAoKGdsb2JhbC5CbG9iICYmIG9iaiBpbnN0YW5jZW9mIEJsb2IpIHx8XG4gICAgICAgIChnbG9iYWwuRmlsZSAmJiBvYmogaW5zdGFuY2VvZiBGaWxlKSkge1xuICAgICAgcGVuZGluZ0Jsb2JzKys7XG5cbiAgICAgIC8vIGFzeW5jIGZpbGVyZWFkZXJcbiAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oKSB7IC8vIHRoaXMucmVzdWx0ID09IGFycmF5YnVmZmVyXG4gICAgICAgIGlmIChjb250YWluaW5nT2JqZWN0KSB7XG4gICAgICAgICAgY29udGFpbmluZ09iamVjdFtjdXJLZXldID0gdGhpcy5yZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgYmxvYmxlc3NEYXRhID0gdGhpcy5yZXN1bHQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBpZiBub3RoaW5nIHBlbmRpbmcgaXRzIGNhbGxiYWNrIHRpbWVcbiAgICAgICAgaWYoISAtLXBlbmRpbmdCbG9icykge1xuICAgICAgICAgIGNhbGxiYWNrKGJsb2JsZXNzRGF0YSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGZpbGVSZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIob2JqKTsgLy8gYmxvYiAtPiBhcnJheWJ1ZmZlclxuICAgIH0gZWxzZSBpZiAoaXNBcnJheShvYmopKSB7IC8vIGhhbmRsZSBhcnJheVxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmoubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgX3JlbW92ZUJsb2JzKG9ialtpXSwgaSwgb2JqKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG9iaiAmJiAnb2JqZWN0JyA9PSB0eXBlb2Ygb2JqICYmICFpc0J1ZihvYmopKSB7IC8vIGFuZCBvYmplY3RcbiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgICAgX3JlbW92ZUJsb2JzKG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIHBlbmRpbmdCbG9icyA9IDA7XG4gIHZhciBibG9ibGVzc0RhdGEgPSBkYXRhO1xuICBfcmVtb3ZlQmxvYnMoYmxvYmxlc3NEYXRhKTtcbiAgaWYgKCFwZW5kaW5nQmxvYnMpIHtcbiAgICBjYWxsYmFjayhibG9ibGVzc0RhdGEpO1xuICB9XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vc29ja2V0LmlvLXBhcnNlci9iaW5hcnkuanNcbiAqKiBtb2R1bGUgaWQgPSA1N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = \"function\" === \"function\" && __webpack_require__(67);\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return JSON3;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)(module), (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\nvar ansiRegex = __webpack_require__(26)();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0cmlwLWFuc2kvaW5kZXguanM/NGU1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI1OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBhbnNpUmVnZXggPSByZXF1aXJlKCdhbnNpLXJlZ2V4JykoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyA/IHN0ci5yZXBsYWNlKGFuc2lSZWdleCwgJycpIDogc3RyO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3N0cmlwLWFuc2kvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSA1OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanM/Yjk4MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isc0JBQXNCO0FBQ3RDO0FBQ0E7QUFDQSxrQkFBa0IsMkJBQTJCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsbUJBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJCQUEyQjtBQUM1QztBQUNBO0FBQ0EsUUFBUSx1QkFBdUI7QUFDL0I7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpQkFBaUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLGdDQUFnQyxzQkFBc0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEOztBQUVBLDZCQUE2QixtQkFBbUI7O0FBRWhEOztBQUVBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbnZhciBzdHlsZXNJbkRvbSA9IHt9LFxyXG5cdG1lbW9pemUgPSBmdW5jdGlvbihmbikge1xyXG5cdFx0dmFyIG1lbW87XHJcblx0XHRyZXR1cm4gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG5cdFx0XHRyZXR1cm4gbWVtbztcclxuXHRcdH07XHJcblx0fSxcclxuXHRpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiAvbXNpZSBbNi05XVxcYi8udGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKTtcclxuXHR9KSxcclxuXHRnZXRIZWFkRWxlbWVudCA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xyXG5cdFx0cmV0dXJuIGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdO1xyXG5cdH0pLFxyXG5cdHNpbmdsZXRvbkVsZW1lbnQgPSBudWxsLFxyXG5cdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XHJcblx0aWYodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XHJcblx0XHRpZih0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcclxuXHR9XHJcblxyXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxyXG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcclxuXHRpZiAodHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uID09PSBcInVuZGVmaW5lZFwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcclxuXHJcblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0KTtcclxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xyXG5cclxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcclxuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XHJcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xyXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XHJcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcclxuXHRcdH1cclxuXHRcdGlmKG5ld0xpc3QpIHtcclxuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0KTtcclxuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcclxuXHRcdH1cclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xyXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XHJcblx0XHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKVxyXG5cdFx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oKTtcclxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKSB7XHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XHJcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcclxuXHRcdGlmKGRvbVN0eWxlKSB7XHJcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcclxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcclxuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcclxuXHRcdFx0fVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dmFyIHBhcnRzID0gW107XHJcblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XHJcblx0XHRcdH1cclxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMobGlzdCkge1xyXG5cdHZhciBzdHlsZXMgPSBbXTtcclxuXHR2YXIgbmV3U3R5bGVzID0ge307XHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcclxuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcclxuXHRcdHZhciBpZCA9IGl0ZW1bMF07XHJcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcclxuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XHJcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcclxuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcclxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKVxyXG5cdFx0XHRzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xyXG5cdFx0ZWxzZVxyXG5cdFx0XHRuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XHJcblx0fVxyXG5cdHJldHVybiBzdHlsZXM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCgpIHtcclxuXHR2YXIgc3R5bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xyXG5cdHZhciBoZWFkID0gZ2V0SGVhZEVsZW1lbnQoKTtcclxuXHRzdHlsZUVsZW1lbnQudHlwZSA9IFwidGV4dC9jc3NcIjtcclxuXHRoZWFkLmFwcGVuZENoaWxkKHN0eWxlRWxlbWVudCk7XHJcblx0cmV0dXJuIHN0eWxlRWxlbWVudDtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQoKSB7XHJcblx0dmFyIGxpbmtFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XHJcblx0dmFyIGhlYWQgPSBnZXRIZWFkRWxlbWVudCgpO1xyXG5cdGxpbmtFbGVtZW50LnJlbCA9IFwic3R5bGVzaGVldFwiO1xyXG5cdGhlYWQuYXBwZW5kQ2hpbGQobGlua0VsZW1lbnQpO1xyXG5cdHJldHVybiBsaW5rRWxlbWVudDtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XHJcblx0dmFyIHN0eWxlRWxlbWVudCwgdXBkYXRlLCByZW1vdmU7XHJcblxyXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xyXG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XHJcblx0XHRzdHlsZUVsZW1lbnQgPSBzaW5nbGV0b25FbGVtZW50IHx8IChzaW5nbGV0b25FbGVtZW50ID0gY3JlYXRlU3R5bGVFbGVtZW50KCkpO1xyXG5cdFx0dXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlRWxlbWVudCwgc3R5bGVJbmRleCwgZmFsc2UpO1xyXG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlRWxlbWVudCwgc3R5bGVJbmRleCwgdHJ1ZSk7XHJcblx0fSBlbHNlIGlmKG9iai5zb3VyY2VNYXAgJiZcclxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxyXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxyXG5cdFx0dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxyXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxyXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xyXG5cdFx0c3R5bGVFbGVtZW50ID0gY3JlYXRlTGlua0VsZW1lbnQoKTtcclxuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZUVsZW1lbnQpO1xyXG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XHJcblx0XHRcdGlmKHN0eWxlRWxlbWVudC5ocmVmKVxyXG5cdFx0XHRcdFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGVFbGVtZW50LmhyZWYpO1xyXG5cdFx0fTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0c3R5bGVFbGVtZW50ID0gY3JlYXRlU3R5bGVFbGVtZW50KCk7XHJcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGVFbGVtZW50KTtcclxuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdHVwZGF0ZShvYmopO1xyXG5cclxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XHJcblx0XHRpZihuZXdPYmopIHtcclxuXHRcdFx0aWYobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKVxyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRyZW1vdmUoKTtcclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xyXG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcclxuXHJcblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcclxuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcclxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xyXG5cdH07XHJcbn0pKCk7XHJcblxyXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlRWxlbWVudCwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XHJcblx0dmFyIGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmouY3NzO1xyXG5cclxuXHRpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcclxuXHRcdHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xyXG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZUVsZW1lbnQuY2hpbGROb2RlcztcclxuXHRcdGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcclxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xyXG5cdFx0XHRzdHlsZUVsZW1lbnQuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChjc3NOb2RlKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGVFbGVtZW50LCBvYmopIHtcclxuXHR2YXIgY3NzID0gb2JqLmNzcztcclxuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XHJcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XHJcblxyXG5cdGlmKG1lZGlhKSB7XHJcblx0XHRzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpXHJcblx0fVxyXG5cclxuXHRpZihzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xyXG5cdFx0c3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcclxuXHR9IGVsc2Uge1xyXG5cdFx0d2hpbGUoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcclxuXHRcdFx0c3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcclxuXHRcdH1cclxuXHRcdHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZUxpbmsobGlua0VsZW1lbnQsIG9iaikge1xyXG5cdHZhciBjc3MgPSBvYmouY3NzO1xyXG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcclxuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcclxuXHJcblx0aWYoc291cmNlTWFwKSB7XHJcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxyXG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xyXG5cdH1cclxuXHJcblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XHJcblxyXG5cdHZhciBvbGRTcmMgPSBsaW5rRWxlbWVudC5ocmVmO1xyXG5cclxuXHRsaW5rRWxlbWVudC5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuXHJcblx0aWYob2xkU3JjKVxyXG5cdFx0VVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcbiAqKiBtb2R1bGUgaWQgPSA2MFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(5);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(60)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(true) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(5, function() {\n\t\t\tvar newContent = __webpack_require__(5);\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY3NzL0FwcC5zY3NzP2I3NWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBbUY7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9BcHAuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9BcHAuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcyEuL0FwcC5zY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vYXBwL2Nzcy9BcHAuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDYxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 62 */
/***/ function(module, exports) {

	eval("module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3RvLWFycmF5L2luZGV4LmpzPzdmNTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSw0QkFBNEIsaUJBQWlCO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdG9BcnJheVxuXG5mdW5jdGlvbiB0b0FycmF5KGxpc3QsIGluZGV4KSB7XG4gICAgdmFyIGFycmF5ID0gW11cblxuICAgIGluZGV4ID0gaW5kZXggfHwgMFxuXG4gICAgZm9yICh2YXIgaSA9IGluZGV4IHx8IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGFycmF5W2kgLSBpbmRleF0gPSBsaXN0W2ldXG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi90by1hcnJheS9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDYyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn utf8;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)(module), (function() { return this; }())))//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*eslint-env browser*/\n\nvar clientOverlay = document.createElement('div');\nvar styles = {\n  background: 'rgba(0,0,0,0.85)',\n  color: '#E8E8E8',\n  lineHeight: '1.2',\n  whiteSpace: 'pre',\n  fontFamily: 'Menlo, Consolas, monospace',\n  fontSize: '13px',\n  position: 'fixed',\n  zIndex: 9999,\n  padding: '10px',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  overflow: 'auto'\n};\nfor (var key in styles) {\n  clientOverlay.style[key] = styles[key];\n}\n\nvar ansiHTML = __webpack_require__(25);\nvar colors = {\n  reset: ['transparent', 'transparent'],\n  black: '181818',\n  red: 'E36049',\n  green: 'B3CB74',\n  yellow: 'FFD080',\n  blue: '7CAFC2',\n  magenta: '7FACCA',\n  cyan: 'C3C2EF',\n  lightgrey: 'EBE7E3',\n  darkgrey: '6D7891'\n};\nansiHTML.setColors(colors);\n\nvar Entities = __webpack_require__(47).AllHtmlEntities;\nvar entities = new Entities();\n\nexports.showProblems =\nfunction showProblems(type, lines) {\n  clientOverlay.innerHTML = '';\n  lines.forEach(function(msg) {\n    msg = ansiHTML(entities.encode(msg));\n    var div = document.createElement('div');\n    div.style.marginBottom = '26px';\n    div.innerHTML = problemType(type) + ' in ' + msg;\n    clientOverlay.appendChild(div);\n  });\n  if (document.body) {\n    document.body.appendChild(clientOverlay);\n  }\n};\n\nexports.clear =\nfunction clear() {\n  if (document.body && clientOverlay.parentNode) {\n    document.body.removeChild(clientOverlay);\n  }\n};\n\nvar problemColors = {\n  errors: colors.red,\n  warnings: colors.yellow\n};\n\nfunction problemType (type) {\n  var color = problemColors[type] || colors.red;\n  return (\n    '<span style=\"background-color:#' + color + '; color:#fff; padding:2px 4px; border-radius: 2px\">' +\n      type.slice(0, -1).toUpperCase() +\n    '</span>'\n  );\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWhvdC1taWRkbGV3YXJlL2NsaWVudC1vdmVybGF5LmpzPzdlOGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsWUFBWSxpQkFBaUI7QUFDL0U7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmVzbGludC1lbnYgYnJvd3NlciovXG5cbnZhciBjbGllbnRPdmVybGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG52YXIgc3R5bGVzID0ge1xuICBiYWNrZ3JvdW5kOiAncmdiYSgwLDAsMCwwLjg1KScsXG4gIGNvbG9yOiAnI0U4RThFOCcsXG4gIGxpbmVIZWlnaHQ6ICcxLjInLFxuICB3aGl0ZVNwYWNlOiAncHJlJyxcbiAgZm9udEZhbWlseTogJ01lbmxvLCBDb25zb2xhcywgbW9ub3NwYWNlJyxcbiAgZm9udFNpemU6ICcxM3B4JyxcbiAgcG9zaXRpb246ICdmaXhlZCcsXG4gIHpJbmRleDogOTk5OSxcbiAgcGFkZGluZzogJzEwcHgnLFxuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgdG9wOiAwLFxuICBib3R0b206IDAsXG4gIG92ZXJmbG93OiAnYXV0bydcbn07XG5mb3IgKHZhciBrZXkgaW4gc3R5bGVzKSB7XG4gIGNsaWVudE92ZXJsYXkuc3R5bGVba2V5XSA9IHN0eWxlc1trZXldO1xufVxuXG52YXIgYW5zaUhUTUwgPSByZXF1aXJlKCdhbnNpLWh0bWwnKTtcbnZhciBjb2xvcnMgPSB7XG4gIHJlc2V0OiBbJ3RyYW5zcGFyZW50JywgJ3RyYW5zcGFyZW50J10sXG4gIGJsYWNrOiAnMTgxODE4JyxcbiAgcmVkOiAnRTM2MDQ5JyxcbiAgZ3JlZW46ICdCM0NCNzQnLFxuICB5ZWxsb3c6ICdGRkQwODAnLFxuICBibHVlOiAnN0NBRkMyJyxcbiAgbWFnZW50YTogJzdGQUNDQScsXG4gIGN5YW46ICdDM0MyRUYnLFxuICBsaWdodGdyZXk6ICdFQkU3RTMnLFxuICBkYXJrZ3JleTogJzZENzg5MSdcbn07XG5hbnNpSFRNTC5zZXRDb2xvcnMoY29sb3JzKTtcblxudmFyIEVudGl0aWVzID0gcmVxdWlyZSgnaHRtbC1lbnRpdGllcycpLkFsbEh0bWxFbnRpdGllcztcbnZhciBlbnRpdGllcyA9IG5ldyBFbnRpdGllcygpO1xuXG5leHBvcnRzLnNob3dQcm9ibGVtcyA9XG5mdW5jdGlvbiBzaG93UHJvYmxlbXModHlwZSwgbGluZXMpIHtcbiAgY2xpZW50T3ZlcmxheS5pbm5lckhUTUwgPSAnJztcbiAgbGluZXMuZm9yRWFjaChmdW5jdGlvbihtc2cpIHtcbiAgICBtc2cgPSBhbnNpSFRNTChlbnRpdGllcy5lbmNvZGUobXNnKSk7XG4gICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdi5zdHlsZS5tYXJnaW5Cb3R0b20gPSAnMjZweCc7XG4gICAgZGl2LmlubmVySFRNTCA9IHByb2JsZW1UeXBlKHR5cGUpICsgJyBpbiAnICsgbXNnO1xuICAgIGNsaWVudE92ZXJsYXkuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgfSk7XG4gIGlmIChkb2N1bWVudC5ib2R5KSB7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjbGllbnRPdmVybGF5KTtcbiAgfVxufTtcblxuZXhwb3J0cy5jbGVhciA9XG5mdW5jdGlvbiBjbGVhcigpIHtcbiAgaWYgKGRvY3VtZW50LmJvZHkgJiYgY2xpZW50T3ZlcmxheS5wYXJlbnROb2RlKSB7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChjbGllbnRPdmVybGF5KTtcbiAgfVxufTtcblxudmFyIHByb2JsZW1Db2xvcnMgPSB7XG4gIGVycm9yczogY29sb3JzLnJlZCxcbiAgd2FybmluZ3M6IGNvbG9ycy55ZWxsb3dcbn07XG5cbmZ1bmN0aW9uIHByb2JsZW1UeXBlICh0eXBlKSB7XG4gIHZhciBjb2xvciA9IHByb2JsZW1Db2xvcnNbdHlwZV0gfHwgY29sb3JzLnJlZDtcbiAgcmV0dXJuIChcbiAgICAnPHNwYW4gc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiMnICsgY29sb3IgKyAnOyBjb2xvcjojZmZmOyBwYWRkaW5nOjJweCA0cHg7IGJvcmRlci1yYWRpdXM6IDJweFwiPicgK1xuICAgICAgdHlwZS5zbGljZSgwLCAtMSkudG9VcHBlckNhc2UoKSArXG4gICAgJzwvc3Bhbj4nXG4gICk7XG59XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS1ob3QtbWlkZGxld2FyZS9jbGllbnQtb3ZlcmxheS5qc1xuICoqIG1vZHVsZSBpZCA9IDY0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(__resourceQuery, module) {/*eslint-env browser*/\n/*global __resourceQuery*/\n\nvar options = {\n  path: \"/__webpack_hmr\",\n  timeout: 20 * 1000,\n  overlay: true,\n  reload: false,\n  log: true,\n  warn: true\n};\nif (true) {\n  var querystring = __webpack_require__(54);\n  var overrides = querystring.parse(__resourceQuery.slice(1));\n  if (overrides.path) options.path = overrides.path;\n  if (overrides.timeout) options.timeout = overrides.timeout;\n  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';\n  if (overrides.reload) options.reload = overrides.reload !== 'false';\n  if (overrides.noInfo && overrides.noInfo !== 'false') {\n    options.log = false;\n  }\n  if (overrides.quiet && overrides.quiet !== 'false') {\n    options.log = false;\n    options.warn = false;\n  }\n}\n\nif (typeof window === 'undefined') {\n  // do nothing\n} else if (typeof window.EventSource === 'undefined') {\n  console.warn(\n    \"webpack-hot-middleware's client requires EventSource to work. \" +\n    \"You should include a polyfill if you want to support this browser: \" +\n    \"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools\"\n  );\n} else {\n  connect(window.EventSource);\n}\n\nfunction connect(EventSource) {\n  var source = new EventSource(options.path);\n  var lastActivity = new Date();\n\n  source.onopen = handleOnline;\n  source.onmessage = handleMessage;\n  source.onerror = handleDisconnect;\n\n  var timer = setInterval(function() {\n    if ((new Date() - lastActivity) > options.timeout) {\n      handleDisconnect();\n    }\n  }, options.timeout / 2);\n\n  function handleOnline() {\n    if (options.log) console.log(\"[HMR] connected\");\n    lastActivity = new Date();\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date();\n    if (event.data == \"\\uD83D\\uDC93\") {\n      return;\n    }\n    try {\n      processMessage(JSON.parse(event.data));\n    } catch (ex) {\n      if (options.warn) {\n        console.warn(\"Invalid HMR message: \" + event.data + \"\\n\" + ex);\n      }\n    }\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer);\n    source.close();\n    setTimeout(function() { connect(EventSource); }, options.timeout);\n  }\n\n}\n\nvar reporter;\n// the reporter needs to be a singleton on the page\n// in case the client is being used by mutliple bundles\n// we only want to report once.\n// all the errors will go to all clients\nvar singletonKey = '__webpack_hot_middleware_reporter__';\nif (typeof window !== 'undefined' && !window[singletonKey]) {\n  reporter = window[singletonKey] = createReporter();\n}\n\nfunction createReporter() {\n  var strip = __webpack_require__(59);\n\n  var overlay;\n  if (typeof document !== 'undefined' && options.overlay) {\n    overlay = __webpack_require__(64);\n  }\n\n  return {\n    problems: function(type, obj) {\n      if (options.warn) {\n        console.warn(\"[HMR] bundle has \" + type + \":\");\n        obj[type].forEach(function(msg) {\n          console.warn(\"[HMR] \" + strip(msg));\n        });\n      }\n      if (overlay && type !== 'warnings') overlay.showProblems(type, obj[type]);\n    },\n    success: function() {\n      if (overlay) overlay.clear();\n    },\n    useCustomOverlay: function(customOverlay) {\n      overlay = customOverlay;\n    }\n  };\n}\n\nvar processUpdate = __webpack_require__(66);\n\nvar customHandler;\nfunction processMessage(obj) {\n  if (obj.action == \"building\") {\n    if (options.log) console.log(\"[HMR] bundle rebuilding\");\n  } else if (obj.action == \"built\") {\n    if (options.log) {\n      console.log(\n        \"[HMR] bundle \" + (obj.name ? obj.name + \" \" : \"\") +\n        \"rebuilt in \" + obj.time + \"ms\"\n      );\n    }\n    if (obj.errors.length > 0) {\n      if (reporter) reporter.problems('errors', obj);\n    } else {\n      if (reporter) {\n        if (obj.warnings.length > 0) reporter.problems('warnings', obj);\n        reporter.success();\n      }\n\n      processUpdate(obj.hash, obj.modules, options);\n    }\n  } else if (customHandler) {\n    customHandler(obj);\n  }\n}\n\nif (module) {\n  module.exports = {\n    subscribe: function subscribe(handler) {\n      customHandler = handler;\n    },\n    useCustomOverlay: function useCustomOverlay(customOverlay) {\n      if (reporter) reporter.useCustomOverlay(customOverlay);\n    }\n  };\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, \"?reload=true\", __webpack_require__(10)(module)))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWhvdC1taWRkbGV3YXJlL2NsaWVudC5qcz8xMDJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixzQkFBc0IsRUFBRTtBQUNuRDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjY1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyplc2xpbnQtZW52IGJyb3dzZXIqL1xuLypnbG9iYWwgX19yZXNvdXJjZVF1ZXJ5Ki9cblxudmFyIG9wdGlvbnMgPSB7XG4gIHBhdGg6IFwiL19fd2VicGFja19obXJcIixcbiAgdGltZW91dDogMjAgKiAxMDAwLFxuICBvdmVybGF5OiB0cnVlLFxuICByZWxvYWQ6IGZhbHNlLFxuICBsb2c6IHRydWUsXG4gIHdhcm46IHRydWVcbn07XG5pZiAoX19yZXNvdXJjZVF1ZXJ5KSB7XG4gIHZhciBxdWVyeXN0cmluZyA9IHJlcXVpcmUoJ3F1ZXJ5c3RyaW5nJyk7XG4gIHZhciBvdmVycmlkZXMgPSBxdWVyeXN0cmluZy5wYXJzZShfX3Jlc291cmNlUXVlcnkuc2xpY2UoMSkpO1xuICBpZiAob3ZlcnJpZGVzLnBhdGgpIG9wdGlvbnMucGF0aCA9IG92ZXJyaWRlcy5wYXRoO1xuICBpZiAob3ZlcnJpZGVzLnRpbWVvdXQpIG9wdGlvbnMudGltZW91dCA9IG92ZXJyaWRlcy50aW1lb3V0O1xuICBpZiAob3ZlcnJpZGVzLm92ZXJsYXkpIG9wdGlvbnMub3ZlcmxheSA9IG92ZXJyaWRlcy5vdmVybGF5ICE9PSAnZmFsc2UnO1xuICBpZiAob3ZlcnJpZGVzLnJlbG9hZCkgb3B0aW9ucy5yZWxvYWQgPSBvdmVycmlkZXMucmVsb2FkICE9PSAnZmFsc2UnO1xuICBpZiAob3ZlcnJpZGVzLm5vSW5mbyAmJiBvdmVycmlkZXMubm9JbmZvICE9PSAnZmFsc2UnKSB7XG4gICAgb3B0aW9ucy5sb2cgPSBmYWxzZTtcbiAgfVxuICBpZiAob3ZlcnJpZGVzLnF1aWV0ICYmIG92ZXJyaWRlcy5xdWlldCAhPT0gJ2ZhbHNlJykge1xuICAgIG9wdGlvbnMubG9nID0gZmFsc2U7XG4gICAgb3B0aW9ucy53YXJuID0gZmFsc2U7XG4gIH1cbn1cblxuaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gIC8vIGRvIG5vdGhpbmdcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdy5FdmVudFNvdXJjZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgY29uc29sZS53YXJuKFxuICAgIFwid2VicGFjay1ob3QtbWlkZGxld2FyZSdzIGNsaWVudCByZXF1aXJlcyBFdmVudFNvdXJjZSB0byB3b3JrLiBcIiArXG4gICAgXCJZb3Ugc2hvdWxkIGluY2x1ZGUgYSBwb2x5ZmlsbCBpZiB5b3Ugd2FudCB0byBzdXBwb3J0IHRoaXMgYnJvd3NlcjogXCIgK1xuICAgIFwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1NlcnZlci1zZW50X2V2ZW50cyNUb29sc1wiXG4gICk7XG59IGVsc2Uge1xuICBjb25uZWN0KHdpbmRvdy5FdmVudFNvdXJjZSk7XG59XG5cbmZ1bmN0aW9uIGNvbm5lY3QoRXZlbnRTb3VyY2UpIHtcbiAgdmFyIHNvdXJjZSA9IG5ldyBFdmVudFNvdXJjZShvcHRpb25zLnBhdGgpO1xuICB2YXIgbGFzdEFjdGl2aXR5ID0gbmV3IERhdGUoKTtcblxuICBzb3VyY2Uub25vcGVuID0gaGFuZGxlT25saW5lO1xuICBzb3VyY2Uub25tZXNzYWdlID0gaGFuZGxlTWVzc2FnZTtcbiAgc291cmNlLm9uZXJyb3IgPSBoYW5kbGVEaXNjb25uZWN0O1xuXG4gIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgIGlmICgobmV3IERhdGUoKSAtIGxhc3RBY3Rpdml0eSkgPiBvcHRpb25zLnRpbWVvdXQpIHtcbiAgICAgIGhhbmRsZURpc2Nvbm5lY3QoKTtcbiAgICB9XG4gIH0sIG9wdGlvbnMudGltZW91dCAvIDIpO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZU9ubGluZSgpIHtcbiAgICBpZiAob3B0aW9ucy5sb2cpIGNvbnNvbGUubG9nKFwiW0hNUl0gY29ubmVjdGVkXCIpO1xuICAgIGxhc3RBY3Rpdml0eSA9IG5ldyBEYXRlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlKGV2ZW50KSB7XG4gICAgbGFzdEFjdGl2aXR5ID0gbmV3IERhdGUoKTtcbiAgICBpZiAoZXZlbnQuZGF0YSA9PSBcIlxcdUQ4M0RcXHVEQzkzXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIHByb2Nlc3NNZXNzYWdlKEpTT04ucGFyc2UoZXZlbnQuZGF0YSkpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBpZiAob3B0aW9ucy53YXJuKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkludmFsaWQgSE1SIG1lc3NhZ2U6IFwiICsgZXZlbnQuZGF0YSArIFwiXFxuXCIgKyBleCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRGlzY29ubmVjdCgpIHtcbiAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgICBzb3VyY2UuY2xvc2UoKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBjb25uZWN0KEV2ZW50U291cmNlKTsgfSwgb3B0aW9ucy50aW1lb3V0KTtcbiAgfVxuXG59XG5cbnZhciByZXBvcnRlcjtcbi8vIHRoZSByZXBvcnRlciBuZWVkcyB0byBiZSBhIHNpbmdsZXRvbiBvbiB0aGUgcGFnZVxuLy8gaW4gY2FzZSB0aGUgY2xpZW50IGlzIGJlaW5nIHVzZWQgYnkgbXV0bGlwbGUgYnVuZGxlc1xuLy8gd2Ugb25seSB3YW50IHRvIHJlcG9ydCBvbmNlLlxuLy8gYWxsIHRoZSBlcnJvcnMgd2lsbCBnbyB0byBhbGwgY2xpZW50c1xudmFyIHNpbmdsZXRvbktleSA9ICdfX3dlYnBhY2tfaG90X21pZGRsZXdhcmVfcmVwb3J0ZXJfXyc7XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgIXdpbmRvd1tzaW5nbGV0b25LZXldKSB7XG4gIHJlcG9ydGVyID0gd2luZG93W3NpbmdsZXRvbktleV0gPSBjcmVhdGVSZXBvcnRlcigpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZXBvcnRlcigpIHtcbiAgdmFyIHN0cmlwID0gcmVxdWlyZSgnc3RyaXAtYW5zaScpO1xuXG4gIHZhciBvdmVybGF5O1xuICBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBvcHRpb25zLm92ZXJsYXkpIHtcbiAgICBvdmVybGF5ID0gcmVxdWlyZSgnLi9jbGllbnQtb3ZlcmxheScpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9ibGVtczogZnVuY3Rpb24odHlwZSwgb2JqKSB7XG4gICAgICBpZiAob3B0aW9ucy53YXJuKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIltITVJdIGJ1bmRsZSBoYXMgXCIgKyB0eXBlICsgXCI6XCIpO1xuICAgICAgICBvYmpbdHlwZV0uZm9yRWFjaChmdW5jdGlvbihtc2cpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXCJbSE1SXSBcIiArIHN0cmlwKG1zZykpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmIChvdmVybGF5ICYmIHR5cGUgIT09ICd3YXJuaW5ncycpIG92ZXJsYXkuc2hvd1Byb2JsZW1zKHR5cGUsIG9ialt0eXBlXSk7XG4gICAgfSxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChvdmVybGF5KSBvdmVybGF5LmNsZWFyKCk7XG4gICAgfSxcbiAgICB1c2VDdXN0b21PdmVybGF5OiBmdW5jdGlvbihjdXN0b21PdmVybGF5KSB7XG4gICAgICBvdmVybGF5ID0gY3VzdG9tT3ZlcmxheTtcbiAgICB9XG4gIH07XG59XG5cbnZhciBwcm9jZXNzVXBkYXRlID0gcmVxdWlyZSgnLi9wcm9jZXNzLXVwZGF0ZScpO1xuXG52YXIgY3VzdG9tSGFuZGxlcjtcbmZ1bmN0aW9uIHByb2Nlc3NNZXNzYWdlKG9iaikge1xuICBpZiAob2JqLmFjdGlvbiA9PSBcImJ1aWxkaW5nXCIpIHtcbiAgICBpZiAob3B0aW9ucy5sb2cpIGNvbnNvbGUubG9nKFwiW0hNUl0gYnVuZGxlIHJlYnVpbGRpbmdcIik7XG4gIH0gZWxzZSBpZiAob2JqLmFjdGlvbiA9PSBcImJ1aWx0XCIpIHtcbiAgICBpZiAob3B0aW9ucy5sb2cpIHtcbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBcIltITVJdIGJ1bmRsZSBcIiArIChvYmoubmFtZSA/IG9iai5uYW1lICsgXCIgXCIgOiBcIlwiKSArXG4gICAgICAgIFwicmVidWlsdCBpbiBcIiArIG9iai50aW1lICsgXCJtc1wiXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAob2JqLmVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAocmVwb3J0ZXIpIHJlcG9ydGVyLnByb2JsZW1zKCdlcnJvcnMnLCBvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocmVwb3J0ZXIpIHtcbiAgICAgICAgaWYgKG9iai53YXJuaW5ncy5sZW5ndGggPiAwKSByZXBvcnRlci5wcm9ibGVtcygnd2FybmluZ3MnLCBvYmopO1xuICAgICAgICByZXBvcnRlci5zdWNjZXNzKCk7XG4gICAgICB9XG5cbiAgICAgIHByb2Nlc3NVcGRhdGUob2JqLmhhc2gsIG9iai5tb2R1bGVzLCBvcHRpb25zKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoY3VzdG9tSGFuZGxlcikge1xuICAgIGN1c3RvbUhhbmRsZXIob2JqKTtcbiAgfVxufVxuXG5pZiAobW9kdWxlKSB7XG4gIG1vZHVsZS5leHBvcnRzID0ge1xuICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKGhhbmRsZXIpIHtcbiAgICAgIGN1c3RvbUhhbmRsZXIgPSBoYW5kbGVyO1xuICAgIH0sXG4gICAgdXNlQ3VzdG9tT3ZlcmxheTogZnVuY3Rpb24gdXNlQ3VzdG9tT3ZlcmxheShjdXN0b21PdmVybGF5KSB7XG4gICAgICBpZiAocmVwb3J0ZXIpIHJlcG9ydGVyLnVzZUN1c3RvbU92ZXJsYXkoY3VzdG9tT3ZlcmxheSk7XG4gICAgfVxuICB9O1xufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjayktaG90LW1pZGRsZXdhcmUvY2xpZW50LmpzP3JlbG9hZD10cnVlXG4gKiogbW9kdWxlIGlkID0gNjVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Based heavily on https://github.com/webpack/webpack/blob/\n *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js\n * Original copyright Tobias Koppers @sokra (MIT license)\n */\n\n/* global window __webpack_hash__ */\n\nif (false) {\n  throw new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n\nvar hmrDocsUrl = \"http://webpack.github.io/docs/hot-module-replacement-with-webpack.html\"; // eslint-disable-line max-len\n\nvar lastHash;\nvar failureStatuses = { abort: 1, fail: 1 };\nvar applyOptions = { ignoreUnaccepted: true };\n\nfunction upToDate(hash) {\n  if (hash) lastHash = hash;\n  return lastHash == __webpack_require__.h();\n}\n\nmodule.exports = function(hash, moduleMap, options) {\n  var reload = options.reload;\n  if (!upToDate(hash) && module.hot.status() == \"idle\") {\n    if (options.log) console.log(\"[HMR] Checking for updates on the server...\");\n    check();\n  }\n\n  function check() {\n    var cb = function(err, updatedModules) {\n      if (err) return handleError(err);\n\n      if(!updatedModules) {\n        if (options.warn) {\n          console.warn(\"[HMR] Cannot find update (Full reload needed)\");\n          console.warn(\"[HMR] (Probably because of restarting the server)\");\n        }\n        performReload();\n        return null;\n      }\n\n      var applyCallback = function(applyErr, renewedModules) {\n        if (applyErr) return handleError(applyErr);\n\n        if (!upToDate()) check();\n\n        logUpdates(updatedModules, renewedModules);\n      };\n\n      var applyResult = module.hot.apply(applyOptions, applyCallback);\n      // webpack 2 promise\n      if (applyResult && applyResult.then) {\n        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`\n        applyResult.then(function(outdatedModules) {\n          applyCallback(null, outdatedModules);\n        });\n        applyResult.catch(applyCallback);\n      }\n\n    };\n\n    var result = module.hot.check(false, cb);\n    // webpack 2 promise\n    if (result && result.then) {\n        result.then(function(updatedModules) {\n            cb(null, updatedModules);\n        });\n        result.catch(cb);\n    }\n  }\n\n  function logUpdates(updatedModules, renewedModules) {\n    var unacceptedModules = updatedModules.filter(function(moduleId) {\n      return renewedModules && renewedModules.indexOf(moduleId) < 0;\n    });\n\n    if(unacceptedModules.length > 0) {\n      if (options.warn) {\n        console.warn(\n          \"[HMR] The following modules couldn't be hot updated: \" +\n          \"(Full reload needed)\\n\" +\n          \"This is usually because the modules which have changed \" +\n          \"(and their parents) do not know how to hot reload themselves. \" +\n          \"See \" + hmrDocsUrl + \" for more details.\"\n        );\n        unacceptedModules.forEach(function(moduleId) {\n          console.warn(\"[HMR]  - \" + moduleMap[moduleId]);\n        });\n      }\n      performReload();\n      return;\n    }\n\n    if (options.log) {\n      if(!renewedModules || renewedModules.length === 0) {\n        console.log(\"[HMR] Nothing hot updated.\");\n      } else {\n        console.log(\"[HMR] Updated modules:\");\n        renewedModules.forEach(function(moduleId) {\n          console.log(\"[HMR]  - \" + moduleMap[moduleId]);\n        });\n      }\n\n      if (upToDate()) {\n        console.log(\"[HMR] App is up to date.\");\n      }\n    }\n  }\n\n  function handleError(err) {\n    if (module.hot.status() in failureStatuses) {\n      if (options.warn) {\n        console.warn(\"[HMR] Cannot check for update (Full reload needed)\");\n        console.warn(\"[HMR] \" + err.stack || err.message);\n      }\n      performReload();\n      return;\n    }\n    if (options.warn) {\n      console.warn(\"[HMR] Update check failed: \" + err.stack || err.message);\n    }\n  }\n\n  function performReload() {\n    if (reload) {\n      if (options.warn) console.warn(\"[HMR] Reloading page\");\n      window.location.reload();\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWhvdC1taWRkbGV3YXJlL3Byb2Nlc3MtdXBkYXRlLmpzP2UxM2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsMEZBQTBGOztBQUUxRjtBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7O0FBRXBCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmFzZWQgaGVhdmlseSBvbiBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay93ZWJwYWNrL2Jsb2IvXG4gKiAgYzBhZmRmOWM2YWJjMWRkNzA3MDdjNTk0ZTQ3MzgwMmE1NjZmN2I2ZS9ob3Qvb25seS1kZXYtc2VydmVyLmpzXG4gKiBPcmlnaW5hbCBjb3B5cmlnaHQgVG9iaWFzIEtvcHBlcnMgQHNva3JhIChNSVQgbGljZW5zZSlcbiAqL1xuXG4vKiBnbG9iYWwgd2luZG93IF9fd2VicGFja19oYXNoX18gKi9cblxuaWYgKCFtb2R1bGUuaG90KSB7XG4gIHRocm93IG5ldyBFcnJvcihcIltITVJdIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnQgaXMgZGlzYWJsZWQuXCIpO1xufVxuXG52YXIgaG1yRG9jc1VybCA9IFwiaHR0cDovL3dlYnBhY2suZ2l0aHViLmlvL2RvY3MvaG90LW1vZHVsZS1yZXBsYWNlbWVudC13aXRoLXdlYnBhY2suaHRtbFwiOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG1heC1sZW5cblxudmFyIGxhc3RIYXNoO1xudmFyIGZhaWx1cmVTdGF0dXNlcyA9IHsgYWJvcnQ6IDEsIGZhaWw6IDEgfTtcbnZhciBhcHBseU9wdGlvbnMgPSB7IGlnbm9yZVVuYWNjZXB0ZWQ6IHRydWUgfTtcblxuZnVuY3Rpb24gdXBUb0RhdGUoaGFzaCkge1xuICBpZiAoaGFzaCkgbGFzdEhhc2ggPSBoYXNoO1xuICByZXR1cm4gbGFzdEhhc2ggPT0gX193ZWJwYWNrX2hhc2hfXztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihoYXNoLCBtb2R1bGVNYXAsIG9wdGlvbnMpIHtcbiAgdmFyIHJlbG9hZCA9IG9wdGlvbnMucmVsb2FkO1xuICBpZiAoIXVwVG9EYXRlKGhhc2gpICYmIG1vZHVsZS5ob3Quc3RhdHVzKCkgPT0gXCJpZGxlXCIpIHtcbiAgICBpZiAob3B0aW9ucy5sb2cpIGNvbnNvbGUubG9nKFwiW0hNUl0gQ2hlY2tpbmcgZm9yIHVwZGF0ZXMgb24gdGhlIHNlcnZlci4uLlwiKTtcbiAgICBjaGVjaygpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hlY2soKSB7XG4gICAgdmFyIGNiID0gZnVuY3Rpb24oZXJyLCB1cGRhdGVkTW9kdWxlcykge1xuICAgICAgaWYgKGVycikgcmV0dXJuIGhhbmRsZUVycm9yKGVycik7XG5cbiAgICAgIGlmKCF1cGRhdGVkTW9kdWxlcykge1xuICAgICAgICBpZiAob3B0aW9ucy53YXJuKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGZpbmQgdXBkYXRlIChGdWxsIHJlbG9hZCBuZWVkZWQpXCIpO1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIltITVJdIChQcm9iYWJseSBiZWNhdXNlIG9mIHJlc3RhcnRpbmcgdGhlIHNlcnZlcilcIik7XG4gICAgICAgIH1cbiAgICAgICAgcGVyZm9ybVJlbG9hZCgpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIGFwcGx5Q2FsbGJhY2sgPSBmdW5jdGlvbihhcHBseUVyciwgcmVuZXdlZE1vZHVsZXMpIHtcbiAgICAgICAgaWYgKGFwcGx5RXJyKSByZXR1cm4gaGFuZGxlRXJyb3IoYXBwbHlFcnIpO1xuXG4gICAgICAgIGlmICghdXBUb0RhdGUoKSkgY2hlY2soKTtcblxuICAgICAgICBsb2dVcGRhdGVzKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcyk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgYXBwbHlSZXN1bHQgPSBtb2R1bGUuaG90LmFwcGx5KGFwcGx5T3B0aW9ucywgYXBwbHlDYWxsYmFjayk7XG4gICAgICAvLyB3ZWJwYWNrIDIgcHJvbWlzZVxuICAgICAgaWYgKGFwcGx5UmVzdWx0ICYmIGFwcGx5UmVzdWx0LnRoZW4pIHtcbiAgICAgICAgLy8gSG90TW9kdWxlUmVwbGFjZW1lbnQucnVudGltZS5qcyByZWZlcnMgdG8gdGhlIHJlc3VsdCBhcyBgb3V0ZGF0ZWRNb2R1bGVzYFxuICAgICAgICBhcHBseVJlc3VsdC50aGVuKGZ1bmN0aW9uKG91dGRhdGVkTW9kdWxlcykge1xuICAgICAgICAgIGFwcGx5Q2FsbGJhY2sobnVsbCwgb3V0ZGF0ZWRNb2R1bGVzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGFwcGx5UmVzdWx0LmNhdGNoKGFwcGx5Q2FsbGJhY2spO1xuICAgICAgfVxuXG4gICAgfTtcblxuICAgIHZhciByZXN1bHQgPSBtb2R1bGUuaG90LmNoZWNrKGZhbHNlLCBjYik7XG4gICAgLy8gd2VicGFjayAyIHByb21pc2VcbiAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC50aGVuKSB7XG4gICAgICAgIHJlc3VsdC50aGVuKGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzKSB7XG4gICAgICAgICAgICBjYihudWxsLCB1cGRhdGVkTW9kdWxlcyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXN1bHQuY2F0Y2goY2IpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGxvZ1VwZGF0ZXModXBkYXRlZE1vZHVsZXMsIHJlbmV3ZWRNb2R1bGVzKSB7XG4gICAgdmFyIHVuYWNjZXB0ZWRNb2R1bGVzID0gdXBkYXRlZE1vZHVsZXMuZmlsdGVyKGZ1bmN0aW9uKG1vZHVsZUlkKSB7XG4gICAgICByZXR1cm4gcmVuZXdlZE1vZHVsZXMgJiYgcmVuZXdlZE1vZHVsZXMuaW5kZXhPZihtb2R1bGVJZCkgPCAwO1xuICAgIH0pO1xuXG4gICAgaWYodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKG9wdGlvbnMud2Fybikge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgXCJbSE1SXSBUaGUgZm9sbG93aW5nIG1vZHVsZXMgY291bGRuJ3QgYmUgaG90IHVwZGF0ZWQ6IFwiICtcbiAgICAgICAgICBcIihGdWxsIHJlbG9hZCBuZWVkZWQpXFxuXCIgK1xuICAgICAgICAgIFwiVGhpcyBpcyB1c3VhbGx5IGJlY2F1c2UgdGhlIG1vZHVsZXMgd2hpY2ggaGF2ZSBjaGFuZ2VkIFwiICtcbiAgICAgICAgICBcIihhbmQgdGhlaXIgcGFyZW50cykgZG8gbm90IGtub3cgaG93IHRvIGhvdCByZWxvYWQgdGhlbXNlbHZlcy4gXCIgK1xuICAgICAgICAgIFwiU2VlIFwiICsgaG1yRG9jc1VybCArIFwiIGZvciBtb3JlIGRldGFpbHMuXCJcbiAgICAgICAgKTtcbiAgICAgICAgdW5hY2NlcHRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbihtb2R1bGVJZCkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIltITVJdICAtIFwiICsgbW9kdWxlTWFwW21vZHVsZUlkXSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcGVyZm9ybVJlbG9hZCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmxvZykge1xuICAgICAgaWYoIXJlbmV3ZWRNb2R1bGVzIHx8IHJlbmV3ZWRNb2R1bGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIltITVJdIE5vdGhpbmcgaG90IHVwZGF0ZWQuXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJbSE1SXSBVcGRhdGVkIG1vZHVsZXM6XCIpO1xuICAgICAgICByZW5ld2VkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uKG1vZHVsZUlkKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJbSE1SXSAgLSBcIiArIG1vZHVsZU1hcFttb2R1bGVJZF0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHVwVG9EYXRlKCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJbSE1SXSBBcHAgaXMgdXAgdG8gZGF0ZS5cIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRXJyb3IoZXJyKSB7XG4gICAgaWYgKG1vZHVsZS5ob3Quc3RhdHVzKCkgaW4gZmFpbHVyZVN0YXR1c2VzKSB7XG4gICAgICBpZiAob3B0aW9ucy53YXJuKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIltITVJdIENhbm5vdCBjaGVjayBmb3IgdXBkYXRlIChGdWxsIHJlbG9hZCBuZWVkZWQpXCIpO1xuICAgICAgICBjb25zb2xlLndhcm4oXCJbSE1SXSBcIiArIGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBwZXJmb3JtUmVsb2FkKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcHRpb25zLndhcm4pIHtcbiAgICAgIGNvbnNvbGUud2FybihcIltITVJdIFVwZGF0ZSBjaGVjayBmYWlsZWQ6IFwiICsgZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwZXJmb3JtUmVsb2FkKCkge1xuICAgIGlmIChyZWxvYWQpIHtcbiAgICAgIGlmIChvcHRpb25zLndhcm4pIGNvbnNvbGUud2FybihcIltITVJdIFJlbG9hZGluZyBwYWdlXCIpO1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH1cbiAgfVxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWhvdC1taWRkbGV3YXJlL3Byb2Nlc3MtdXBkYXRlLmpzXG4gKiogbW9kdWxlIGlkID0gNjZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 67 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanM/NWY3MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX2FtZF9vcHRpb25zX187XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanNcbiAqKiBtb2R1bGUgaWQgPSA2N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 68 */
/***/ function(module, exports) {

	eval("/* (ignored) *///# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd3MgKGlnbm9yZWQpP2Q0YjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi9cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIHdzIChpZ25vcmVkKVxuICoqIG1vZHVsZSBpZCA9IDY4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);